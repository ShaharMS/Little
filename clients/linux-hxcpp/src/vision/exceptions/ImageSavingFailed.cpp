// Generated by Haxe 4.3.4
#include <hxcpp.h>

#ifndef INCLUDED_haxe_Exception
#include <haxe/Exception.h>
#endif
#ifndef INCLUDED_vision_exceptions_ImageSavingFailed
#include <vision/exceptions/ImageSavingFailed.h>
#endif
#ifndef INCLUDED_vision_exceptions_VisionException
#include <vision/exceptions/VisionException.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_fdaecc24223f007f_7_new,"vision.exceptions.ImageSavingFailed","new",0xf93a5d80,"vision.exceptions.ImageSavingFailed.new","vision/exceptions/ImageSavingFailed.hx",7,0x1d65cf90)
namespace vision{
namespace exceptions{

void ImageSavingFailed_obj::__construct(int type,::String reason){
            	HX_STACKFRAME(&_hx_pos_fdaecc24223f007f_7_new)
HXDLIN(   7)		{
HXDLIN(   7)			super::__construct(reason,((HX_("",00,00,00,00) + type) + HX_(" Saving Failed",43,5b,f5,17)));
            		}
HXDLIN(   7)		{
HXDLIN(   7)			this->_hx___skipStack++;
            		}
            	}

Dynamic ImageSavingFailed_obj::__CreateEmpty() { return new ImageSavingFailed_obj; }

void *ImageSavingFailed_obj::_hx_vtable = 0;

Dynamic ImageSavingFailed_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< ImageSavingFailed_obj > _hx_result = new ImageSavingFailed_obj();
	_hx_result->__construct(inArgs[0],inArgs[1]);
	return _hx_result;
}

bool ImageSavingFailed_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x677ddc49) {
		if (inClassId<=(int)0x012b953e) {
			return inClassId==(int)0x00000001 || inClassId==(int)0x012b953e;
		} else {
			return inClassId==(int)0x677ddc49;
		}
	} else {
		return inClassId==(int)0x7cf1c557;
	}
}


::hx::ObjectPtr< ImageSavingFailed_obj > ImageSavingFailed_obj::__new(int type,::String reason) {
	::hx::ObjectPtr< ImageSavingFailed_obj > __this = new ImageSavingFailed_obj();
	__this->__construct(type,reason);
	return __this;
}

::hx::ObjectPtr< ImageSavingFailed_obj > ImageSavingFailed_obj::__alloc(::hx::Ctx *_hx_ctx,int type,::String reason) {
	ImageSavingFailed_obj *__this = (ImageSavingFailed_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(ImageSavingFailed_obj), true, "vision.exceptions.ImageSavingFailed"));
	*(void **)__this = ImageSavingFailed_obj::_hx_vtable;
	__this->__construct(type,reason);
	return __this;
}

ImageSavingFailed_obj::ImageSavingFailed_obj()
{
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *ImageSavingFailed_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *ImageSavingFailed_obj_sStaticStorageInfo = 0;
#endif

::hx::Class ImageSavingFailed_obj::__mClass;

void ImageSavingFailed_obj::__register()
{
	ImageSavingFailed_obj _hx_dummy;
	ImageSavingFailed_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("vision.exceptions.ImageSavingFailed",8e,dd,e5,b2);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< ImageSavingFailed_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = ImageSavingFailed_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = ImageSavingFailed_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace vision
} // end namespace exceptions
