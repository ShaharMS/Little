// Generated by Haxe 4.3.4
#ifndef INCLUDED_little_tools_OrderedMapKeyValueIterator
#define INCLUDED_little_tools_OrderedMapKeyValueIterator

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_STACK_FRAME(_hx_pos_3c99cda9c080e45f_133_new)
HX_DECLARE_CLASS2(little,tools,OrderedMapKeyValueIterator)

namespace little{
namespace tools{


class HXCPP_CLASS_ATTRIBUTES OrderedMapKeyValueIterator_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef OrderedMapKeyValueIterator_obj OBJ_;
		OrderedMapKeyValueIterator_obj();

	public:
		enum { _hx_ClassId = 0x663adc90 };

		void __construct(::cpp::VirtualArray karray,::cpp::VirtualArray varray);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="little.tools.OrderedMapKeyValueIterator")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"little.tools.OrderedMapKeyValueIterator"); }

		inline static ::hx::ObjectPtr< OrderedMapKeyValueIterator_obj > __new(::cpp::VirtualArray karray,::cpp::VirtualArray varray) {
			::hx::ObjectPtr< OrderedMapKeyValueIterator_obj > __this = new OrderedMapKeyValueIterator_obj();
			__this->__construct(karray,varray);
			return __this;
		}

		inline static ::hx::ObjectPtr< OrderedMapKeyValueIterator_obj > __alloc(::hx::Ctx *_hx_ctx,::cpp::VirtualArray karray,::cpp::VirtualArray varray) {
			OrderedMapKeyValueIterator_obj *__this = (OrderedMapKeyValueIterator_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(OrderedMapKeyValueIterator_obj), true, "little.tools.OrderedMapKeyValueIterator"));
			*(void **)__this = OrderedMapKeyValueIterator_obj::_hx_vtable;
{
            	HX_STACKFRAME(&_hx_pos_3c99cda9c080e45f_133_new)
HXLINE( 134)		( ( ::little::tools::OrderedMapKeyValueIterator)(__this) )->current = 0;
HXLINE( 139)		( ( ::little::tools::OrderedMapKeyValueIterator)(__this) )->karray = karray;
HXLINE( 140)		( ( ::little::tools::OrderedMapKeyValueIterator)(__this) )->varray = varray;
            	}
		
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~OrderedMapKeyValueIterator_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("OrderedMapKeyValueIterator",cf,77,cb,5a); }

		int current;
		::cpp::VirtualArray karray;
		::cpp::VirtualArray varray;
		bool hasNext();
		::Dynamic hasNext_dyn();

		 ::Dynamic next();
		::Dynamic next_dyn();

};

} // end namespace little
} // end namespace tools

#endif /* INCLUDED_little_tools_OrderedMapKeyValueIterator */ 
