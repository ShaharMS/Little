// Generated by HLC 4.3.4 (HL v5)
#ifndef INC__std__Type
#define INC__std__Type
typedef struct _$Type *$Type;
typedef struct _Type *Type;
#include <hl/Class.h>
#include <hl/BaseType.h>
#include <_std/String.h>
#include <hl/Enum.h>
#include <hl/types/ArrayDyn.h>
#include <hl/types/ArrayObj.h>
#include <_std/ValueType.h>


struct _$Type {
	hl_type *$type;
	hl_type* _hx___type__;
	vdynamic* _hx___meta__;
	varray* _hx___implementedBy__;
	String _hx___name__;
	vdynamic* _hx___constructor__;
	vclosure* init;
	vclosure* initClass;
	vclosure* initEnum;
	vclosure* _hx_register;
	vclosure* getClass;
	vclosure* getEnum;
	vclosure* getClassName;
	vclosure* getEnumName;
	vclosure* resolveClass;
	vclosure* resolveEnum;
	vclosure* createEmptyInstance;
	vclosure* createEnum;
	vclosure* createEnumIndex;
	vclosure* getInstanceFields;
	vclosure* getEnumConstructs;
	vclosure* _hx_typeof;
	vclosure* enumConstructor;
	vclosure* enumParameters;
	vclosure* enumIndex;
};
struct _Type {
	hl_type *$type;
};
#endif

