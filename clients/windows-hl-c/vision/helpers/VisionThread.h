// Generated by HLC 4.3.4 (HL v5)
#ifndef INC_vision__helpers__VisionThread
#define INC_vision__helpers__VisionThread
typedef struct _vision__helpers__$VisionThread *vision__helpers__$VisionThread;
typedef struct _vision__helpers__VisionThread *vision__helpers__VisionThread;
#include <hl/Class.h>
#include <hl/BaseType.h>
#include <_std/String.h>
#include <sys/thread/_Thread/HaxeThread.h>
#include <haxe/Exception.h>


struct _vision__helpers__$VisionThread {
	hl_type *$type;
	hl_type* _hx___type__;
	vdynamic* _hx___meta__;
	varray* _hx___implementedBy__;
	String _hx___name__;
	vdynamic* _hx___constructor__;
	int COUNT;
	vclosure* create;
};
struct _vision__helpers__VisionThread {
	hl_type *$type;
	sys__thread___Thread__HaxeThread underlying;
	vclosure* job;
	vclosure* onFailed;
	vclosure* onDone;
	vdynamic* jobDone;
	bool relaunchEvents;
	int count;
};
#endif

