// Generated by HLC 4.3.4 (HL v5)
#ifndef INC_vision__ds___Matrix2D__Matrix2D_Impl_
#define INC_vision__ds___Matrix2D__Matrix2D_Impl_
typedef struct _vision__ds___Matrix2D__$Matrix2D_Impl_ *vision__ds___Matrix2D__$Matrix2D_Impl_;
typedef struct _vision__ds___Matrix2D__Matrix2D_Impl_ *vision__ds___Matrix2D__Matrix2D_Impl_;
#include <hl/Class.h>
#include <hl/BaseType.h>
#include <_std/String.h>
#include <vision/ds/Array2D.h>
#include <hl/types/ArrayBytes_Float.h>
#include <vision/ds/Point2D.h>
#include <hl/types/ArrayObj.h>


struct _vision__ds___Matrix2D__$Matrix2D_Impl_ {
	hl_type *$type;
	hl_type* _hx___type__;
	vdynamic* _hx___meta__;
	varray* _hx___implementedBy__;
	String _hx___name__;
	vdynamic* _hx___constructor__;
	vclosure* get_underlying;
	vclosure* set_underlying;
	vclosure* get_rows;
	vclosure* set_rows;
	vclosure* get_columns;
	vclosure* set_columns;
	vclosure* _new;
	vclosure* invert;
	vclosure* getDeterminant;
	vclosure* getTrace;
	vclosure* multiplyWithScalar;
	vclosure* clone;
	vclosure* map;
	vclosure* getSubMatrix;
	vclosure* getColumn;
	vclosure* getRow;
	vclosure* setColumn;
	vclosure* setRow;
	vclosure* insertColumn;
	vclosure* insertRow;
	vclosure* removeColumn;
	vclosure* removeRow;
	vclosure* toString;
	vclosure* IDENTITY;
	vclosure* ROTATION;
	vclosure* TRANSLATION;
	vclosure* SCALE;
	vclosure* SHEAR;
	vclosure* REFLECTION;
	vclosure* PERSPECTIVE;
	vclosure* DEPTH;
	vclosure* createFilled;
	vclosure* createTransformation;
	vclosure* multiplyMatrices;
	vclosure* addMatrices;
	vclosure* subtractMatrices;
	vclosure* divideMatrices;
	vclosure* multiply;
	vclosure* add;
	vclosure* subtract;
	vclosure* divide;
	vclosure* to_array_array_float;
	vclosure* from_array_array_float;
	vclosure* from_array_array_int;
};
struct _vision__ds___Matrix2D__Matrix2D_Impl_ {
	hl_type *$type;
};
#endif

