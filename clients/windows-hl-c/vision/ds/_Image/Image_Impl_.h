// Generated by HLC 4.3.4 (HL v5)
#ifndef INC_vision__ds___Image__Image_Impl_
#define INC_vision__ds___Image__Image_Impl_
typedef struct _vision__ds___Image__$Image_Impl_ *vision__ds___Image__$Image_Impl_;
typedef struct _vision__ds___Image__Image_Impl_ *vision__ds___Image__Image_Impl_;
#include <haxe/io/Bytes.h>
#include <hl/types/ArrayObj.h>
#include <vision/ds/_Image/Image_Impl_.h>
#include <hl/Class.h>
#include <hl/BaseType.h>
#include <_std/String.h>
#include <vision/ds/ImageView.h>
#include <vision/ds/Rectangle.h>
#include <vision/ds/Ray2D.h>
#include <vision/ds/Line2D.h>
#include <vision/ds/Pixel.h>
#include <vision/ds/Point2D.h>


typedef struct {
	HL__ENUM_CONSTRUCT__
	haxe__io__Bytes p0;
	int p1;
	int p2;
	hl__types__ArrayObj p3;
} Enumt$ctx_e833d1b;
struct _vision__ds___Image__$Image_Impl_ {
	hl_type *$type;
	hl_type* _hx___type__;
	vdynamic* _hx___meta__;
	varray* _hx___implementedBy__;
	String _hx___name__;
	vdynamic* _hx___constructor__;
	int OFFSET;
	int WIDTH_BYTES;
	int VIEW_XY_BYTES;
	int VIEW_WH_BYTES;
	int VIEW_SHAPE_BYTES;
	int DATA_GAP;
	vclosure* get_underlying;
	vclosure* get_width;
	vclosure* get_height;
	vclosure* get_view;
	vclosure* set_view;
	vclosure* _new;
	vclosure* getColorFromStartingBytePos;
	vclosure* setColorFromStartingBytePos;
	vclosure* getPixel;
	vclosure* getSafePixel;
	vclosure* getUnsafePixel;
	vclosure* getFloatingPixel;
	vclosure* setPixel;
	vclosure* setSafePixel;
	vclosure* setFloatingPixel;
	vclosure* setUnsafePixel;
	vclosure* paintPixel;
	vclosure* paintFloatingPixel;
	vclosure* paintSafePixel;
	vclosure* paintUnsafePixel;
	vclosure* hasPixel;
	vclosure* movePixel;
	vclosure* moveSafePixel;
	vclosure* moveFloatingPixel;
	vclosure* moveUnsafePixel;
	vclosure* copyPixelFrom;
	vclosure* copyPixelTo;
	vclosure* getImagePortion;
	vclosure* setImagePortion;
	vclosure* drawLine;
	vclosure* drawRay2D;
	vclosure* drawLine2D;
	vclosure* fillRect;
	vclosure* drawRect;
	vclosure* drawQuadraticBezier;
	vclosure* drawCubicBezier;
	vclosure* fillCircle;
	vclosure* drawCircle;
	vclosure* drawEllipse;
	vclosure* fillColorRecursive;
	vclosure* fillColor;
	vclosure* fillUntilColor;
	vclosure* clone;
	vclosure* mirror;
	vclosure* flip;
	vclosure* stamp;
	vclosure* resize;
	vclosure* rotate;
	vclosure* toString;
	vclosure* forEachPixel;
	vclosure* forEachPixelInView;
	vclosure* iterator;
	vclosure* center;
	vclosure* hasView;
	vclosure* setView;
	vclosure* getView;
	vclosure* removeView;
	vclosure* hasPixelInView;
	vclosure* from2DArray;
	vclosure* to2DArray;
	vclosure* fromBytes;
	vclosure* image_or_image;
	vclosure* image_xor_image;
	vclosure* image_and_image;
};
struct _vision__ds___Image__Image_Impl_ {
	hl_type *$type;
};
#endif

