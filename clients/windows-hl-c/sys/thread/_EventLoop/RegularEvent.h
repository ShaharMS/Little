// Generated by HLC 4.3.4 (HL v5)
#ifndef INC_sys__thread___EventLoop__RegularEvent
#define INC_sys__thread___EventLoop__RegularEvent
typedef struct _sys__thread___EventLoop__$RegularEvent *sys__thread___EventLoop__$RegularEvent;
typedef struct _sys__thread___EventLoop__RegularEvent *sys__thread___EventLoop__RegularEvent;
#include <hl/Class.h>
#include <hl/BaseType.h>
#include <_std/String.h>


struct _sys__thread___EventLoop__$RegularEvent {
	hl_type *$type;
	hl_type* _hx___type__;
	vdynamic* _hx___meta__;
	varray* _hx___implementedBy__;
	String _hx___name__;
	vdynamic* _hx___constructor__;
};
struct _sys__thread___EventLoop__RegularEvent {
	hl_type *$type;
	double nextRunTime;
	double interval;
	vclosure* run;
	sys__thread___EventLoop__RegularEvent next;
	bool cancelled;
};
#endif

