// Generated by HLC 4.3.4 (HL v5)
#ifndef HL_NATIVES_H
#define HL_NATIVES_H
// Abstract decls
typedef struct _ereg ereg;
typedef struct _hl_bytes_map hl_bytes_map;
typedef struct _hl_fdesc hl_fdesc;
typedef struct _hl_int_map hl_int_map;
typedef struct _hl_lock hl_lock;
typedef struct _hl_obj_map hl_obj_map;
typedef struct _hl_random hl_random;
typedef struct _hl_symbol hl_symbol;

#include <hl/natives.h>

// Natives functions
HL_API vdynamic* hl_mem_compact(vdynamic*,varray*,int,int*);
HL_API bool hl_sys_check_reload(vbyte*);
HL_API varray* hl_alloc_array(hl_type*,int);
HL_API vbyte* hl_alloc_bytes(int);
HL_API vbyte* hl_alloc_bytes(int);
HL_API vdynamic* hl_alloc_enum_dyn(hl_type*,int,varray*,int);
HL_API vdynamic* hl_alloc_obj(hl_type*);
HL_API void hl_array_blit(varray*,int,varray*,int,int);
HL_API hl_type* hl_array_type(varray*);
HL_API void hl_breakpoint(void);
HL_API void hl_bsort_f64(vbyte*,int,int,vclosure*);
HL_API void hl_bsort_i32(vbyte*,int,int,vclosure*);
HL_API void hl_bytes_blit(vbyte*,int,vbyte*,int,int);
HL_API int hl_bytes_compare(vbyte*,int,vbyte*,int,int);
HL_API int hl_bytes_compare16(vbyte*,vbyte*,int);
HL_API void hl_bytes_fill(vbyte*,int,int,int);
HL_API int hl_bytes_find(vbyte*,int,int,vbyte*,int,int);
HL_API vdynamic* hl_call_method(vdynamic*,varray*);
HL_API int hl_call_stack_raw(varray*);
HL_API int hl_date_from_string(vbyte*,int);
HL_API int hl_date_from_time(double);
HL_API double hl_date_get_time(int);
HL_API int hl_date_new(int,int,int,int,int,int);
HL_API vbyte* hl_date_to_string(int,int*);
HL_API varray* hl_enum_parameters(vdynamic*);
HL_API int hl_exception_stack_raw(varray*);
HL_API int hl_file_read_char(hl_fdesc*);
HL_API hl_fdesc* hl_file_stdin(void);
HL_API vbyte* hl_ftos(double,int*);
HL_API vdynamic* hl_get_closure_value(vdynamic*);
HL_API vdynamic* hl_get_virtual_value(vdynamic*);
HL_API int hl_hash(vbyte*);
HL_API hl_bytes_map* hl_hballoc(void);
HL_API void hl_hbclear(hl_bytes_map*);
HL_API bool hl_hbexists(hl_bytes_map*,vbyte*);
HL_API vdynamic* hl_hbget(hl_bytes_map*,vbyte*);
HL_API varray* hl_hbkeys(hl_bytes_map*);
HL_API void hl_hbset(hl_bytes_map*,vbyte*,vdynamic*);
HL_API hl_int_map* hl_hialloc(void);
HL_API void hl_hiclear(hl_int_map*);
HL_API bool hl_hiexists(hl_int_map*,int);
HL_API vdynamic* hl_higet(hl_int_map*,int);
HL_API varray* hl_hikeys(hl_int_map*);
HL_API void hl_hiset(hl_int_map*,int,vdynamic*);
HL_API hl_obj_map* hl_hoalloc(void);
HL_API bool hl_hoexists(hl_obj_map*,vdynamic*);
HL_API vdynamic* hl_hoget(hl_obj_map*,vdynamic*);
HL_API varray* hl_hokeys(hl_obj_map*);
HL_API void hl_hoset(hl_obj_map*,vdynamic*,vdynamic*);
HL_API varray* hl_hovalues(hl_obj_map*);
HL_API bool hl_is_prim_loaded(vdynamic*);
HL_API vbyte* hl_itos(int,int*);
HL_API hl_lock* hl_lock_create(void);
HL_API bool hl_lock_wait(hl_lock*,vdynamic*);
HL_API vdynamic* hl_make_closure(vdynamic*,vdynamic*);
HL_API vdynamic* hl_make_var_args(vclosure*);
HL_API double hl_math_abs(double);
HL_API double hl_math_acos(double);
HL_API double hl_math_asin(double);
HL_API double hl_math_atan(double);
HL_API double hl_math_atan2(double,double);
HL_API int hl_math_ceil(double);
HL_API double hl_math_cos(double);
HL_API double hl_math_exp(double);
HL_API int hl_math_floor(double);
HL_API bool hl_math_isfinite(double);
HL_API bool hl_math_isnan(double);
HL_API double hl_math_log(double);
HL_API double hl_math_pow(double,double);
HL_API int hl_math_round(double);
HL_API double hl_math_sin(double);
HL_API double hl_math_sqrt(double);
HL_API double hl_math_tan(double);
HL_API void hl_mutex_acquire(hl_mutex*);
HL_API hl_mutex* hl_mutex_alloc(bool);
HL_API void hl_mutex_release(hl_mutex*);
HL_API vdynamic* hl_no_closure(vdynamic*);
HL_API bool hl_obj_delete_field(vdynamic*,int);
HL_API varray* hl_obj_fields(vdynamic*);
HL_API vdynamic* hl_obj_get_field(vdynamic*,int);
HL_API bool hl_obj_has_field(vdynamic*,int);
HL_API void hl_obj_set_field(vdynamic*,int,vdynamic*);
HL_API double hl_parse_float(vbyte*,int,int);
HL_API vdynamic* hl_parse_int(vbyte*,int,int);
HL_API int hl_ptr_compare(vdynamic*,vdynamic*);
HL_API bool hl_regexp_match(ereg*,vbyte*,int,int);
HL_API int hl_regexp_matched_pos(ereg*,int,int*);
HL_API ereg* hl_regexp_new_options(vbyte*,vbyte*);
HL_API vbyte* hl_resolve_symbol(hl_symbol*,vbyte*,int*);
HL_API double hl_rnd_float(hl_random*);
HL_API hl_random* hl_rnd_init_system(void);
HL_API void hl_set_error_handler(vclosure*);
HL_API int hl_string_compare(vbyte*,vbyte*,int);
HL_API int hl_sys_command(vbyte*);
HL_API void hl_sys_exit(int);
HL_API bool hl_sys_is64(void);
HL_API void hl_sys_print(vbyte*);
HL_API vbyte* hl_sys_string(void);
HL_API double hl_sys_time(void);
HL_API bool hl_sys_utf8_path(void);
HL_API hl_thread* hl_thread_create(vclosure*);
HL_API hl_thread* hl_thread_current(void);
HL_API bool hl_type_enum_eq(vdynamic*,vdynamic*);
HL_API varray* hl_type_enum_fields(hl_type*);
HL_API varray* hl_type_enum_values(hl_type*);
HL_API vdynamic* hl_type_get_global(hl_type*);
HL_API varray* hl_type_instance_fields(hl_type*);
HL_API vbyte* hl_type_name(hl_type*);
HL_API bool hl_type_safe_cast(hl_type*,hl_type*);
HL_API bool hl_type_set_global(hl_type*,vdynamic*);
HL_API vbyte* hl_ucs2_lower(vbyte*,int,int);
HL_API vbyte* hl_ucs2_upper(vbyte*,int,int);
HL_API int hl_ucs2length(vbyte*,int);
HL_API vbyte* hl_url_decode(vbyte*,int*);
HL_API vbyte* hl_url_encode(vbyte*,int*);
HL_API vbyte* hl_utf16_to_utf8(vbyte*,int,int*);
HL_API vbyte* hl_utf8_to_utf16(vbyte*,int,int*);
HL_API vdynamic* hl_value_cast(vdynamic*,hl_type*);
HL_API vbyte* hl_value_to_string(vdynamic*,int*);
#endif

