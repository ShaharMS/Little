// Generated by HLC 4.3.4 (HL v5)
#ifndef INC_little__lexer__LexerTokens
#define INC_little__lexer__LexerTokens
typedef struct _little__lexer__$LexerTokens *little__lexer__$LexerTokens;
#include <hl/Enum.h>
#include <hl/BaseType.h>
#include <_std/String.h>
#include <hl/natives.h>
#include <hl/types/ArrayObj.h>
#include <little/lexer/LexerTokens.h>


struct _little__lexer__$LexerTokens {
	hl_type *$type;
	hl_type* _hx___type__;
	vdynamic* _hx___meta__;
	varray* _hx___implementedBy__;
	String _hx___ename__;
	hl_bytes_map* _hx___emap__;
	hl__types__ArrayObj _hx___constructs__;
	varray* _hx___evalues__;
};
typedef struct {
	HL__ENUM_CONSTRUCT__
	String p0;
} little_lexer_LexerTokens_Identifier;
typedef struct {
	HL__ENUM_CONSTRUCT__
	String p0;
} little_lexer_LexerTokens_Sign;
typedef struct {
	HL__ENUM_CONSTRUCT__
	String p0;
} little_lexer_LexerTokens_Number;
typedef struct {
	HL__ENUM_CONSTRUCT__
	String p0;
} little_lexer_LexerTokens_Boolean;
typedef struct {
	HL__ENUM_CONSTRUCT__
	String p0;
} little_lexer_LexerTokens_Characters;
typedef struct {
	HL__ENUM_CONSTRUCT__
	String p0;
} little_lexer_LexerTokens_Documentation;
#endif

