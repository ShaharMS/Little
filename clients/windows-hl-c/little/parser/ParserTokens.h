// Generated by HLC 4.3.4 (HL v5)
#ifndef INC_little__parser__ParserTokens
#define INC_little__parser__ParserTokens
typedef struct _little__parser__$ParserTokens *little__parser__$ParserTokens;
#include <hl/Enum.h>
#include <hl/BaseType.h>
#include <_std/String.h>
#include <hl/natives.h>
#include <hl/types/ArrayObj.h>
#include <little/parser/ParserTokens.h>


struct _little__parser__$ParserTokens {
	hl_type *$type;
	hl_type* _hx___type__;
	vdynamic* _hx___meta__;
	varray* _hx___implementedBy__;
	String _hx___ename__;
	hl_bytes_map* _hx___emap__;
	hl__types__ArrayObj _hx___constructs__;
	varray* _hx___evalues__;
};
typedef struct {
	HL__ENUM_CONSTRUCT__
	int p0;
} little_parser_ParserTokens_SetLine;
typedef struct {
	HL__ENUM_CONSTRUCT__
	String p0;
} little_parser_ParserTokens_SetModule;
typedef struct {
	HL__ENUM_CONSTRUCT__
	venum* p0;
	venum* p1;
	venum* p2;
} little_parser_ParserTokens_Variable;
typedef struct {
	HL__ENUM_CONSTRUCT__
	venum* p0;
	venum* p1;
	venum* p2;
	venum* p3;
} little_parser_ParserTokens_Function;
typedef struct {
	HL__ENUM_CONSTRUCT__
	venum* p0;
	venum* p1;
	venum* p2;
} little_parser_ParserTokens_ConditionCall;
typedef struct {
	HL__ENUM_CONSTRUCT__
	venum* p0;
} little_parser_ParserTokens_Read;
typedef struct {
	HL__ENUM_CONSTRUCT__
	hl__types__ArrayObj p0;
	venum* p1;
} little_parser_ParserTokens_Write;
typedef struct {
	HL__ENUM_CONSTRUCT__
	String p0;
} little_parser_ParserTokens_Identifier;
typedef struct {
	HL__ENUM_CONSTRUCT__
	venum* p0;
	venum* p1;
} little_parser_ParserTokens_TypeDeclaration;
typedef struct {
	HL__ENUM_CONSTRUCT__
	venum* p0;
	venum* p1;
} little_parser_ParserTokens_FunctionCall;
typedef struct {
	HL__ENUM_CONSTRUCT__
	venum* p0;
	venum* p1;
} little_parser_ParserTokens_Return;
typedef struct {
	HL__ENUM_CONSTRUCT__
	hl__types__ArrayObj p0;
	venum* p1;
} little_parser_ParserTokens_Expression;
typedef struct {
	HL__ENUM_CONSTRUCT__
	hl__types__ArrayObj p0;
	venum* p1;
} little_parser_ParserTokens_Block;
typedef struct {
	HL__ENUM_CONSTRUCT__
	hl__types__ArrayObj p0;
} little_parser_ParserTokens_PartArray;
typedef struct {
	HL__ENUM_CONSTRUCT__
	venum* p0;
	venum* p1;
} little_parser_ParserTokens_PropertyAccess;
typedef struct {
	HL__ENUM_CONSTRUCT__
	String p0;
} little_parser_ParserTokens_Sign;
typedef struct {
	HL__ENUM_CONSTRUCT__
	String p0;
} little_parser_ParserTokens_Number;
typedef struct {
	HL__ENUM_CONSTRUCT__
	String p0;
} little_parser_ParserTokens_Decimal;
typedef struct {
	HL__ENUM_CONSTRUCT__
	String p0;
} little_parser_ParserTokens_Characters;
typedef struct {
	HL__ENUM_CONSTRUCT__
	String p0;
} little_parser_ParserTokens_Documentation;
typedef struct {
	HL__ENUM_CONSTRUCT__
	String p0;
} little_parser_ParserTokens_ErrorMessage;
typedef struct {
	HL__ENUM_CONSTRUCT__
	String p0;
	hl__types__ArrayObj p1;
} little_parser_ParserTokens_Custom;
#endif

