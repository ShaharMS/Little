// Generated by HLC 4.3.4 (HL v5)
#ifndef INC_little__interpreter__Runtime
#define INC_little__interpreter__Runtime
typedef struct _little__interpreter__$Runtime *little__interpreter__$Runtime;
typedef struct _little__interpreter__Runtime *little__interpreter__Runtime;
#include <hl/Class.h>
#include <hl/BaseType.h>
#include <_std/String.h>
#include <little/interpreter/InterpTokens.h>
#include <hl/types/ArrayObj.h>
#include <little/interpreter/StdOut.h>


struct _little__interpreter__$Runtime {
	hl_type *$type;
	hl_type* _hx___type__;
	vdynamic* _hx___meta__;
	varray* _hx___implementedBy__;
	String _hx___name__;
	vdynamic* _hx___constructor__;
};
struct _little__interpreter__Runtime {
	hl_type *$type;
	int line;
	int linePart;
	venum* currentToken;
	String module;
	venum* previousToken;
	int exitCode;
	bool errorThrown;
	venum* errorToken;
	hl__types__ArrayObj onLineChanged;
	hl__types__ArrayObj onModuleChanged;
	hl__types__ArrayObj onLineSplit;
	hl__types__ArrayObj onTokenInterpreted;
	hl__types__ArrayObj onErrorThrown;
	hl__types__ArrayObj onWarningPrinted;
	hl__types__ArrayObj onWriteValue;
	hl__types__ArrayObj onFunctionCalled;
	hl__types__ArrayObj onConditionCalled;
	hl__types__ArrayObj onFieldDeclared;
	hl__types__ArrayObj onTypeCast;
	little__interpreter__StdOut stdout;
	hl__types__ArrayObj callStack;
	vclosure* broadcast;
	vclosure* _hx___broadcast;
};
#endif

