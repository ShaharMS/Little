// Generated by HLC 4.3.4 (HL v5)
#ifndef INC_little__interpreter__Interpreter
#define INC_little__interpreter__Interpreter
typedef struct _little__interpreter__$Interpreter *little__interpreter__$Interpreter;
typedef struct _little__interpreter__Interpreter *little__interpreter__Interpreter;
#include <hl/Class.h>
#include <hl/BaseType.h>
#include <_std/String.h>
#include <hl/types/ArrayObj.h>
#include <little/interpreter/InterpTokens.h>


struct _little__interpreter__$Interpreter {
	hl_type *$type;
	hl_type* _hx___type__;
	vdynamic* _hx___meta__;
	varray* _hx___implementedBy__;
	String _hx___name__;
	vdynamic* _hx___constructor__;
	vclosure* convert;
	vclosure* error;
	vclosure* assert;
	vclosure* setLine;
	vclosure* setModule;
	vclosure* splitLine;
	vclosure* declareVariable;
	vclosure* declareFunction;
	vclosure* condition;
	vclosure* write;
	vclosure* call;
	vclosure* read;
	vclosure* typeCast;
	vclosure* run;
	vclosure* evaluate;
	vclosure* calculate;
	vclosure* group;
};
struct _little__interpreter__Interpreter {
	hl_type *$type;
};
#endif

