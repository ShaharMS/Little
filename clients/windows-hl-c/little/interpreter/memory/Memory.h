// Generated by HLC 4.3.4 (HL v5)
#ifndef INC_little__interpreter__memory__Memory
#define INC_little__interpreter__memory__Memory
typedef struct _little__interpreter__memory__$Memory *little__interpreter__memory__$Memory;
typedef struct _little__interpreter__memory__Memory *little__interpreter__memory__Memory;
#include <hl/Class.h>
#include <hl/BaseType.h>
#include <_std/String.h>
#include <little/interpreter/memory/Storage.h>
#include <little/interpreter/memory/Referrer.h>
#include <little/interpreter/memory/ExternalInterfacing.h>
#include <little/interpreter/memory/ConstantPool.h>
#include <little/interpreter/memory/Operators.h>


struct _little__interpreter__memory__$Memory {
	hl_type *$type;
	hl_type* _hx___type__;
	vdynamic* _hx___meta__;
	varray* _hx___implementedBy__;
	String _hx___name__;
	vdynamic* _hx___constructor__;
};
struct _little__interpreter__memory__Memory {
	hl_type *$type;
	little__interpreter__memory__Storage storage;
	little__interpreter__memory__Referrer referrer;
	little__interpreter__memory__ExternalInterfacing externs;
	little__interpreter__memory__ConstantPool constants;
	little__interpreter__memory__Operators operators;
	int memoryChunkSize;
	int maxMemorySize;
};
#endif

