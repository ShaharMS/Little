// Generated by HLC 4.3.4 (HL v5)
#ifndef INC_little__interpreter__memory__HashTables
#define INC_little__interpreter__memory__HashTables
typedef struct _little__interpreter__memory__$HashTables *little__interpreter__memory__$HashTables;
typedef struct _little__interpreter__memory__HashTables *little__interpreter__memory__HashTables;
#include <hl/Class.h>
#include <hl/BaseType.h>
#include <_std/String.h>
#include <hl/types/ArrayObj.h>
#include <haxe/io/Bytes.h>
#include <little/interpreter/memory/Storage.h>


struct _little__interpreter__memory__$HashTables {
	hl_type *$type;
	hl_type* _hx___type__;
	vdynamic* _hx___meta__;
	varray* _hx___implementedBy__;
	String _hx___name__;
	vdynamic* _hx___constructor__;
	int OBJECT_HASH_TABLE_CELL_SIZE;
	vclosure* generateObjectHashTable;
	vclosure* readObjectHashTable;
	vclosure* hashTableHasKey;
	vclosure* hashTableGetKey;
	vclosure* objectAddKey;
	vclosure* objectSetKey;
	vclosure* getHashTableOf;
};
struct _little__interpreter__memory__HashTables {
	hl_type *$type;
};
#endif

