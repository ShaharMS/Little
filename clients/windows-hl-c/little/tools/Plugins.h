// Generated by HLC 4.3.4 (HL v5)
#ifndef INC_little__tools__Plugins
#define INC_little__tools__Plugins
typedef struct _little__tools__$Plugins *little__tools__$Plugins;
typedef struct _little__tools__Plugins *little__tools__Plugins;
#include <_std/String.h>
#include <hl/types/ArrayObj.h>
#include <little/interpreter/InterpTokens.h>
#include <little/interpreter/memory/OperatorType.h>
#include <little/tools/Plugins.h>
#include <little/tools/BaseOrderedMap.h>
#include <haxe/ds/StringMap.h>
#include <hl/Class.h>
#include <hl/BaseType.h>
#include <little/interpreter/memory/Memory.h>


typedef struct {
	HL__ENUM_CONSTRUCT__
	String p0;
	vvirtual* p1;
} Enumt$ctx_6fc9d54;
typedef struct {
	HL__ENUM_CONSTRUCT__
	venum* p0;
	vclosure* p1;
	little__tools__Plugins p2;
} Enumt$ctx_5b09c5e;
typedef struct {
	HL__ENUM_CONSTRUCT__
	vclosure* p0;
	little__tools__Plugins p1;
} Enumt$ctx_cd4ac08;
typedef struct {
	HL__ENUM_CONSTRUCT__
	little__tools__Plugins p0;
	venum* p1;
} Enumt$ctx_d117372;
typedef struct {
	HL__ENUM_CONSTRUCT__
	vclosure* p0;
	little__tools__BaseOrderedMap p1;
	little__tools__Plugins p2;
} Enumt$ctx_d1a7f17;
typedef struct {
	HL__ENUM_CONSTRUCT__
	little__tools__Plugins p0;
	vdynamic* p1;
	vvirtual* p2;
	little__tools__BaseOrderedMap p3;
} Enumt$ctx_13c89d7;
typedef struct {
	HL__ENUM_CONSTRUCT__
	little__tools__Plugins p0;
	vdynamic* p1;
	little__tools__BaseOrderedMap p2;
	venum* p3;
	int p4;
} Enumt$ctx_8c73d6b;
typedef struct {
	HL__ENUM_CONSTRUCT__
	little__tools__Plugins p0;
	vdynamic* p1;
} Enumt$ctx_e427bfc;
typedef struct {
	HL__ENUM_CONSTRUCT__
	String p0;
	little__tools__Plugins p1;
} Enumt$ctx_8117be6;
struct _little__tools__$Plugins {
	hl_type *$type;
	hl_type* _hx___type__;
	vdynamic* _hx___meta__;
	varray* _hx___implementedBy__;
	String _hx___name__;
	vdynamic* _hx___constructor__;
	bool _hx___noTypeCreation;
	vclosure* containsCombo;
};
struct _little__tools__Plugins {
	hl_type *$type;
	little__interpreter__memory__Memory memory;
};
#endif

