// Generated by Haxe 4.3.1
#ifndef INCLUDED_little_interpreter_memory__MemoryPointer_MemoryPointer_Impl_
#define INCLUDED_little_interpreter_memory__MemoryPointer_MemoryPointer_Impl_

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(haxe,io,Bytes)
HX_DECLARE_CLASS4(little,interpreter,memory,_MemoryPointer,MemoryPointer_Impl_)

namespace little{
namespace interpreter{
namespace memory{
namespace _MemoryPointer{


class HXCPP_CLASS_ATTRIBUTES MemoryPointer_Impl__obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef MemoryPointer_Impl__obj OBJ_;
		MemoryPointer_Impl__obj();

	public:
		enum { _hx_ClassId = 0x78889786 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="little.interpreter.memory._MemoryPointer.MemoryPointer_Impl_")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"little.interpreter.memory._MemoryPointer.MemoryPointer_Impl_"); }

		inline static ::hx::ObjectPtr< MemoryPointer_Impl__obj > __new() {
			::hx::ObjectPtr< MemoryPointer_Impl__obj > __this = new MemoryPointer_Impl__obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< MemoryPointer_Impl__obj > __alloc(::hx::Ctx *_hx_ctx) {
			MemoryPointer_Impl__obj *__this = (MemoryPointer_Impl__obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(MemoryPointer_Impl__obj), false, "little.interpreter.memory._MemoryPointer.MemoryPointer_Impl_"));
			*(void **)__this = MemoryPointer_Impl__obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~MemoryPointer_Impl__obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("MemoryPointer_Impl_",3c,19,cc,02); }

		static void __boot();
		static int POINTER_SIZE;
		static int get_rawLocation(int this1);
		static ::Dynamic get_rawLocation_dyn();

		static int set_rawLocation(int this1,int v);
		static ::Dynamic set_rawLocation_dyn();

		static int _new(int address);
		static ::Dynamic _new_dyn();

		static int fromInt(int i);
		static ::Dynamic fromInt_dyn();

		static ::String toString(int this1);
		static ::Dynamic toString_dyn();

		static ::Array< int > toArray(int this1);
		static ::Dynamic toArray_dyn();

		static  ::haxe::io::Bytes toBytes(int this1);
		static ::Dynamic toBytes_dyn();

		static int toInt(int this1);
		static ::Dynamic toInt_dyn();

};

} // end namespace little
} // end namespace interpreter
} // end namespace memory
} // end namespace _MemoryPointer

#endif /* INCLUDED_little_interpreter_memory__MemoryPointer_MemoryPointer_Impl_ */ 
