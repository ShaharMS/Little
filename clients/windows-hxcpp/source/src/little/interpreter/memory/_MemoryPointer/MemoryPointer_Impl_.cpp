// Generated by Haxe 4.3.1
#include <hxcpp.h>

#ifndef INCLUDED_haxe_io_Bytes
#include <haxe/io/Bytes.h>
#endif
#ifndef INCLUDED_little_interpreter_memory__MemoryPointer_MemoryPointer_Impl_
#include <little/interpreter/memory/_MemoryPointer/MemoryPointer_Impl_.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_3539843e8497aa7e_19_get_rawLocation,"little.interpreter.memory._MemoryPointer.MemoryPointer_Impl_","get_rawLocation",0x00593fb2,"little.interpreter.memory._MemoryPointer.MemoryPointer_Impl_.get_rawLocation","little/interpreter/memory/MemoryPointer.hx",19,0xfdf82f42)
HX_LOCAL_STACK_FRAME(_hx_pos_3539843e8497aa7e_20_set_rawLocation,"little.interpreter.memory._MemoryPointer.MemoryPointer_Impl_","set_rawLocation",0xfc24bcbe,"little.interpreter.memory._MemoryPointer.MemoryPointer_Impl_.set_rawLocation","little/interpreter/memory/MemoryPointer.hx",20,0xfdf82f42)
HX_LOCAL_STACK_FRAME(_hx_pos_3539843e8497aa7e_25__new,"little.interpreter.memory._MemoryPointer.MemoryPointer_Impl_","_new",0x57280cc3,"little.interpreter.memory._MemoryPointer.MemoryPointer_Impl_._new","little/interpreter/memory/MemoryPointer.hx",25,0xfdf82f42)
HX_LOCAL_STACK_FRAME(_hx_pos_3539843e8497aa7e_33_fromInt,"little.interpreter.memory._MemoryPointer.MemoryPointer_Impl_","fromInt",0x796d2f83,"little.interpreter.memory._MemoryPointer.MemoryPointer_Impl_.fromInt","little/interpreter/memory/MemoryPointer.hx",33,0xfdf82f42)
HX_LOCAL_STACK_FRAME(_hx_pos_3539843e8497aa7e_40_toString,"little.interpreter.memory._MemoryPointer.MemoryPointer_Impl_","toString",0x5b04210e,"little.interpreter.memory._MemoryPointer.MemoryPointer_Impl_.toString","little/interpreter/memory/MemoryPointer.hx",40,0xfdf82f42)
HX_LOCAL_STACK_FRAME(_hx_pos_3539843e8497aa7e_48_toArray,"little.interpreter.memory._MemoryPointer.MemoryPointer_Impl_","toArray",0x13860bfc,"little.interpreter.memory._MemoryPointer.MemoryPointer_Impl_.toArray","little/interpreter/memory/MemoryPointer.hx",48,0xfdf82f42)
HX_LOCAL_STACK_FRAME(_hx_pos_3539843e8497aa7e_66_toBytes,"little.interpreter.memory._MemoryPointer.MemoryPointer_Impl_","toBytes",0xab8ea6ce,"little.interpreter.memory._MemoryPointer.MemoryPointer_Impl_.toBytes","little/interpreter/memory/MemoryPointer.hx",66,0xfdf82f42)
HX_LOCAL_STACK_FRAME(_hx_pos_3539843e8497aa7e_75_toInt,"little.interpreter.memory._MemoryPointer.MemoryPointer_Impl_","toInt",0x03e13c92,"little.interpreter.memory._MemoryPointer.MemoryPointer_Impl_.toInt","little/interpreter/memory/MemoryPointer.hx",75,0xfdf82f42)
HX_LOCAL_STACK_FRAME(_hx_pos_3539843e8497aa7e_15_boot,"little.interpreter.memory._MemoryPointer.MemoryPointer_Impl_","boot",0x59247b94,"little.interpreter.memory._MemoryPointer.MemoryPointer_Impl_.boot","little/interpreter/memory/MemoryPointer.hx",15,0xfdf82f42)
namespace little{
namespace interpreter{
namespace memory{
namespace _MemoryPointer{

void MemoryPointer_Impl__obj::__construct() { }

Dynamic MemoryPointer_Impl__obj::__CreateEmpty() { return new MemoryPointer_Impl__obj; }

void *MemoryPointer_Impl__obj::_hx_vtable = 0;

Dynamic MemoryPointer_Impl__obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< MemoryPointer_Impl__obj > _hx_result = new MemoryPointer_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

bool MemoryPointer_Impl__obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x78889786;
}

int MemoryPointer_Impl__obj::POINTER_SIZE;

int MemoryPointer_Impl__obj::get_rawLocation(int this1){
            	HX_STACKFRAME(&_hx_pos_3539843e8497aa7e_19_get_rawLocation)
HXDLIN(  19)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(MemoryPointer_Impl__obj,get_rawLocation,return )

int MemoryPointer_Impl__obj::set_rawLocation(int this1,int v){
            	HX_STACKFRAME(&_hx_pos_3539843e8497aa7e_20_set_rawLocation)
HXDLIN(  20)		this1 = v;
HXDLIN(  20)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(MemoryPointer_Impl__obj,set_rawLocation,return )

int MemoryPointer_Impl__obj::_new(int address){
            	HX_STACKFRAME(&_hx_pos_3539843e8497aa7e_25__new)
HXDLIN(  25)		return address;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(MemoryPointer_Impl__obj,_new,return )

int MemoryPointer_Impl__obj::fromInt(int i){
            	HX_STACKFRAME(&_hx_pos_3539843e8497aa7e_33_fromInt)
HXDLIN(  33)		return ::little::interpreter::memory::_MemoryPointer::MemoryPointer_Impl__obj::_new(i);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(MemoryPointer_Impl__obj,fromInt,return )

::String MemoryPointer_Impl__obj::toString(int this1){
            	HX_STACKFRAME(&_hx_pos_3539843e8497aa7e_40_toString)
HXDLIN(  40)		return (this1 + HX_("",00,00,00,00));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(MemoryPointer_Impl__obj,toString,return )

::Array< int > MemoryPointer_Impl__obj::toArray(int this1){
            	HX_STACKFRAME(&_hx_pos_3539843e8497aa7e_48_toArray)
HXLINE(  49)		::Array< int > bytes = ::Array_obj< int >::__new(0);
HXLINE(  50)		int i = this1;
HXLINE(  52)		{
HXLINE(  52)			{
HXLINE(  53)				bytes->unshift((i & 255));
HXLINE(  54)				i = (i >> 8);
            			}
HXLINE(  52)			{
HXLINE(  53)				bytes->unshift((i & 255));
HXLINE(  54)				i = (i >> 8);
            			}
HXLINE(  52)			{
HXLINE(  53)				bytes->unshift((i & 255));
HXLINE(  54)				i = (i >> 8);
            			}
HXLINE(  52)			{
HXLINE(  53)				bytes->unshift((i & 255));
HXLINE(  54)				i = (i >> 8);
            			}
            		}
HXLINE(  56)		{
HXLINE(  57)			bytes->unshift(0);
HXDLIN(  57)			bytes->unshift(0);
HXDLIN(  57)			bytes->unshift(0);
HXDLIN(  57)			bytes->unshift(0);
            		}
HXLINE(  60)		return bytes;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(MemoryPointer_Impl__obj,toArray,return )

 ::haxe::io::Bytes MemoryPointer_Impl__obj::toBytes(int this1){
            	HX_STACKFRAME(&_hx_pos_3539843e8497aa7e_66_toBytes)
HXLINE(  67)		 ::haxe::io::Bytes bytes = ::haxe::io::Bytes_obj::alloc(4);
HXLINE(  68)		{
HXLINE(  69)			bytes->b[0] = ( (unsigned char)((this1 & 255)) );
HXDLIN(  69)			bytes->b[1] = ( (unsigned char)(((this1 >> 8) & 255)) );
HXDLIN(  69)			bytes->b[2] = ( (unsigned char)(((this1 >> 16) & 255)) );
            		}
HXLINE(  71)		return bytes;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(MemoryPointer_Impl__obj,toBytes,return )

int MemoryPointer_Impl__obj::toInt(int this1){
            	HX_STACKFRAME(&_hx_pos_3539843e8497aa7e_75_toInt)
HXDLIN(  75)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(MemoryPointer_Impl__obj,toInt,return )


MemoryPointer_Impl__obj::MemoryPointer_Impl__obj()
{
}

bool MemoryPointer_Impl__obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"_new") ) { outValue = _new_dyn(); return true; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"toInt") ) { outValue = toInt_dyn(); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"fromInt") ) { outValue = fromInt_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"toArray") ) { outValue = toArray_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"toBytes") ) { outValue = toBytes_dyn(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"toString") ) { outValue = toString_dyn(); return true; }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"get_rawLocation") ) { outValue = get_rawLocation_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_rawLocation") ) { outValue = set_rawLocation_dyn(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *MemoryPointer_Impl__obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo MemoryPointer_Impl__obj_sStaticStorageInfo[] = {
	{::hx::fsInt,(void *) &MemoryPointer_Impl__obj::POINTER_SIZE,HX_("POINTER_SIZE",e3,16,7f,18)},
	{ ::hx::fsUnknown, 0, null()}
};
#endif

static void MemoryPointer_Impl__obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(MemoryPointer_Impl__obj::POINTER_SIZE,"POINTER_SIZE");
};

#ifdef HXCPP_VISIT_ALLOCS
static void MemoryPointer_Impl__obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(MemoryPointer_Impl__obj::POINTER_SIZE,"POINTER_SIZE");
};

#endif

::hx::Class MemoryPointer_Impl__obj::__mClass;

static ::String MemoryPointer_Impl__obj_sStaticFields[] = {
	HX_("POINTER_SIZE",e3,16,7f,18),
	HX_("get_rawLocation",d4,df,54,cd),
	HX_("set_rawLocation",e0,5c,20,c9),
	HX_("_new",61,15,1f,3f),
	HX_("fromInt",a5,dd,fa,57),
	HX_("toString",ac,d0,6e,38),
	HX_("toArray",1e,ba,13,f2),
	HX_("toBytes",f0,54,1c,8a),
	HX_("toInt",34,be,11,14),
	::String(null())
};

void MemoryPointer_Impl__obj::__register()
{
	MemoryPointer_Impl__obj _hx_dummy;
	MemoryPointer_Impl__obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("little.interpreter.memory._MemoryPointer.MemoryPointer_Impl_",4c,a4,72,d1);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &MemoryPointer_Impl__obj::__GetStatic;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = MemoryPointer_Impl__obj_sMarkStatics;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(MemoryPointer_Impl__obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< MemoryPointer_Impl__obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = MemoryPointer_Impl__obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = MemoryPointer_Impl__obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = MemoryPointer_Impl__obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void MemoryPointer_Impl__obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_3539843e8497aa7e_15_boot)
HXDLIN(  15)		POINTER_SIZE = 4;
            	}
}

} // end namespace little
} // end namespace interpreter
} // end namespace memory
} // end namespace _MemoryPointer
