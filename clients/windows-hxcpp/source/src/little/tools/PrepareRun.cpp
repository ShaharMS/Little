// Generated by Haxe 4.3.1
#include <hxcpp.h>

#ifndef INCLUDED_95f339a1d026d52c
#define INCLUDED_95f339a1d026d52c
#include "hxMath.h"
#endif
#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_Type
#include <Type.h>
#endif
#ifndef INCLUDED_haxe_IMap
#include <haxe/IMap.h>
#endif
#ifndef INCLUDED_haxe_Log
#include <haxe/Log.h>
#endif
#ifndef INCLUDED_haxe_ds_StringMap
#include <haxe/ds/StringMap.h>
#endif
#ifndef INCLUDED_haxe_io_Bytes
#include <haxe/io/Bytes.h>
#endif
#ifndef INCLUDED_little_KeywordConfig
#include <little/KeywordConfig.h>
#endif
#ifndef INCLUDED_little_Little
#include <little/Little.h>
#endif
#ifndef INCLUDED_little_interpreter_InterpTokens
#include <little/interpreter/InterpTokens.h>
#endif
#ifndef INCLUDED_little_interpreter_Interpreter
#include <little/interpreter/Interpreter.h>
#endif
#ifndef INCLUDED_little_interpreter_Runtime
#include <little/interpreter/Runtime.h>
#endif
#ifndef INCLUDED_little_interpreter_memory_ConstantPool
#include <little/interpreter/memory/ConstantPool.h>
#endif
#ifndef INCLUDED_little_interpreter_memory_Memory
#include <little/interpreter/memory/Memory.h>
#endif
#ifndef INCLUDED_little_interpreter_memory_OperatorType
#include <little/interpreter/memory/OperatorType.h>
#endif
#ifndef INCLUDED_little_interpreter_memory_Storage
#include <little/interpreter/memory/Storage.h>
#endif
#ifndef INCLUDED_little_interpreter_memory__MemoryPointer_MemoryPointer_Impl_
#include <little/interpreter/memory/_MemoryPointer/MemoryPointer_Impl_.h>
#endif
#ifndef INCLUDED_little_lexer_Lexer
#include <little/lexer/Lexer.h>
#endif
#ifndef INCLUDED_little_lexer_LexerTokens
#include <little/lexer/LexerTokens.h>
#endif
#ifndef INCLUDED_little_parser_Parser
#include <little/parser/Parser.h>
#endif
#ifndef INCLUDED_little_parser_ParserTokens
#include <little/parser/ParserTokens.h>
#endif
#ifndef INCLUDED_little_tools_Conversion
#include <little/tools/Conversion.h>
#endif
#ifndef INCLUDED_little_tools_Extensions
#include <little/tools/Extensions.h>
#endif
#ifndef INCLUDED_little_tools_InterpTokensSimple
#include <little/tools/InterpTokensSimple.h>
#endif
#ifndef INCLUDED_little_tools_Plugins
#include <little/tools/Plugins.h>
#endif
#ifndef INCLUDED_little_tools_PrepareRun
#include <little/tools/PrepareRun.h>
#endif
#ifndef INCLUDED_little_tools_PrettyPrinter
#include <little/tools/PrettyPrinter.h>
#endif
#ifndef INCLUDED_little_tools_TextTools
#include <little/tools/TextTools.h>
#endif
#ifndef INCLUDED_vision_tools_MathTools
#include <vision/tools/MathTools.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_0b0d584b35e606f8_47_addTypes,"little.tools.PrepareRun","addTypes",0x6cf0f4d7,"little.tools.PrepareRun.addTypes","little/tools/PrepareRun.hx",47,0x70b2680d)
HX_LOCAL_STACK_FRAME(_hx_pos_0b0d584b35e606f8_60_addTypes,"little.tools.PrepareRun","addTypes",0x6cf0f4d7,"little.tools.PrepareRun.addTypes","little/tools/PrepareRun.hx",60,0x70b2680d)
HX_LOCAL_STACK_FRAME(_hx_pos_0b0d584b35e606f8_63_addTypes,"little.tools.PrepareRun","addTypes",0x6cf0f4d7,"little.tools.PrepareRun.addTypes","little/tools/PrepareRun.hx",63,0x70b2680d)
HX_LOCAL_STACK_FRAME(_hx_pos_0b0d584b35e606f8_66_addTypes,"little.tools.PrepareRun","addTypes",0x6cf0f4d7,"little.tools.PrepareRun.addTypes","little/tools/PrepareRun.hx",66,0x70b2680d)
HX_LOCAL_STACK_FRAME(_hx_pos_0b0d584b35e606f8_72_addTypes,"little.tools.PrepareRun","addTypes",0x6cf0f4d7,"little.tools.PrepareRun.addTypes","little/tools/PrepareRun.hx",72,0x70b2680d)
HX_LOCAL_STACK_FRAME(_hx_pos_0b0d584b35e606f8_75_addTypes,"little.tools.PrepareRun","addTypes",0x6cf0f4d7,"little.tools.PrepareRun.addTypes","little/tools/PrepareRun.hx",75,0x70b2680d)
HX_LOCAL_STACK_FRAME(_hx_pos_0b0d584b35e606f8_78_addTypes,"little.tools.PrepareRun","addTypes",0x6cf0f4d7,"little.tools.PrepareRun.addTypes","little/tools/PrepareRun.hx",78,0x70b2680d)
HX_LOCAL_STACK_FRAME(_hx_pos_0b0d584b35e606f8_81_addTypes,"little.tools.PrepareRun","addTypes",0x6cf0f4d7,"little.tools.PrepareRun.addTypes","little/tools/PrepareRun.hx",81,0x70b2680d)
HX_LOCAL_STACK_FRAME(_hx_pos_0b0d584b35e606f8_87_addTypes,"little.tools.PrepareRun","addTypes",0x6cf0f4d7,"little.tools.PrepareRun.addTypes","little/tools/PrepareRun.hx",87,0x70b2680d)
HX_LOCAL_STACK_FRAME(_hx_pos_0b0d584b35e606f8_89_addTypes,"little.tools.PrepareRun","addTypes",0x6cf0f4d7,"little.tools.PrepareRun.addTypes","little/tools/PrepareRun.hx",89,0x70b2680d)
HX_LOCAL_STACK_FRAME(_hx_pos_0b0d584b35e606f8_96_addTypes,"little.tools.PrepareRun","addTypes",0x6cf0f4d7,"little.tools.PrepareRun.addTypes","little/tools/PrepareRun.hx",96,0x70b2680d)
HX_LOCAL_STACK_FRAME(_hx_pos_0b0d584b35e606f8_104_addTypes,"little.tools.PrepareRun","addTypes",0x6cf0f4d7,"little.tools.PrepareRun.addTypes","little/tools/PrepareRun.hx",104,0x70b2680d)
HX_LOCAL_STACK_FRAME(_hx_pos_0b0d584b35e606f8_106_addTypes,"little.tools.PrepareRun","addTypes",0x6cf0f4d7,"little.tools.PrepareRun.addTypes","little/tools/PrepareRun.hx",106,0x70b2680d)
HX_LOCAL_STACK_FRAME(_hx_pos_0b0d584b35e606f8_111_addTypes,"little.tools.PrepareRun","addTypes",0x6cf0f4d7,"little.tools.PrepareRun.addTypes","little/tools/PrepareRun.hx",111,0x70b2680d)
HX_LOCAL_STACK_FRAME(_hx_pos_0b0d584b35e606f8_113_addTypes,"little.tools.PrepareRun","addTypes",0x6cf0f4d7,"little.tools.PrepareRun.addTypes","little/tools/PrepareRun.hx",113,0x70b2680d)
HX_LOCAL_STACK_FRAME(_hx_pos_0b0d584b35e606f8_116_addTypes,"little.tools.PrepareRun","addTypes",0x6cf0f4d7,"little.tools.PrepareRun.addTypes","little/tools/PrepareRun.hx",116,0x70b2680d)
HX_LOCAL_STACK_FRAME(_hx_pos_0b0d584b35e606f8_120_addTypes,"little.tools.PrepareRun","addTypes",0x6cf0f4d7,"little.tools.PrepareRun.addTypes","little/tools/PrepareRun.hx",120,0x70b2680d)
HX_LOCAL_STACK_FRAME(_hx_pos_0b0d584b35e606f8_123_addTypes,"little.tools.PrepareRun","addTypes",0x6cf0f4d7,"little.tools.PrepareRun.addTypes","little/tools/PrepareRun.hx",123,0x70b2680d)
HX_LOCAL_STACK_FRAME(_hx_pos_0b0d584b35e606f8_125_addTypes,"little.tools.PrepareRun","addTypes",0x6cf0f4d7,"little.tools.PrepareRun.addTypes","little/tools/PrepareRun.hx",125,0x70b2680d)
HX_LOCAL_STACK_FRAME(_hx_pos_0b0d584b35e606f8_129_addTypes,"little.tools.PrepareRun","addTypes",0x6cf0f4d7,"little.tools.PrepareRun.addTypes","little/tools/PrepareRun.hx",129,0x70b2680d)
HX_LOCAL_STACK_FRAME(_hx_pos_0b0d584b35e606f8_131_addTypes,"little.tools.PrepareRun","addTypes",0x6cf0f4d7,"little.tools.PrepareRun.addTypes","little/tools/PrepareRun.hx",131,0x70b2680d)
HX_LOCAL_STACK_FRAME(_hx_pos_0b0d584b35e606f8_134_addTypes,"little.tools.PrepareRun","addTypes",0x6cf0f4d7,"little.tools.PrepareRun.addTypes","little/tools/PrepareRun.hx",134,0x70b2680d)
HX_LOCAL_STACK_FRAME(_hx_pos_0b0d584b35e606f8_137_addTypes,"little.tools.PrepareRun","addTypes",0x6cf0f4d7,"little.tools.PrepareRun.addTypes","little/tools/PrepareRun.hx",137,0x70b2680d)
HX_LOCAL_STACK_FRAME(_hx_pos_0b0d584b35e606f8_140_addTypes,"little.tools.PrepareRun","addTypes",0x6cf0f4d7,"little.tools.PrepareRun.addTypes","little/tools/PrepareRun.hx",140,0x70b2680d)
HX_LOCAL_STACK_FRAME(_hx_pos_0b0d584b35e606f8_143_addTypes,"little.tools.PrepareRun","addTypes",0x6cf0f4d7,"little.tools.PrepareRun.addTypes","little/tools/PrepareRun.hx",143,0x70b2680d)
HX_LOCAL_STACK_FRAME(_hx_pos_0b0d584b35e606f8_146_addTypes,"little.tools.PrepareRun","addTypes",0x6cf0f4d7,"little.tools.PrepareRun.addTypes","little/tools/PrepareRun.hx",146,0x70b2680d)
HX_LOCAL_STACK_FRAME(_hx_pos_0b0d584b35e606f8_151_addTypes,"little.tools.PrepareRun","addTypes",0x6cf0f4d7,"little.tools.PrepareRun.addTypes","little/tools/PrepareRun.hx",151,0x70b2680d)
HX_LOCAL_STACK_FRAME(_hx_pos_0b0d584b35e606f8_157_addTypes,"little.tools.PrepareRun","addTypes",0x6cf0f4d7,"little.tools.PrepareRun.addTypes","little/tools/PrepareRun.hx",157,0x70b2680d)
HX_LOCAL_STACK_FRAME(_hx_pos_0b0d584b35e606f8_162_addTypes,"little.tools.PrepareRun","addTypes",0x6cf0f4d7,"little.tools.PrepareRun.addTypes","little/tools/PrepareRun.hx",162,0x70b2680d)
HX_LOCAL_STACK_FRAME(_hx_pos_0b0d584b35e606f8_169_addTypes,"little.tools.PrepareRun","addTypes",0x6cf0f4d7,"little.tools.PrepareRun.addTypes","little/tools/PrepareRun.hx",169,0x70b2680d)
HX_LOCAL_STACK_FRAME(_hx_pos_0b0d584b35e606f8_176_addTypes,"little.tools.PrepareRun","addTypes",0x6cf0f4d7,"little.tools.PrepareRun.addTypes","little/tools/PrepareRun.hx",176,0x70b2680d)
HX_LOCAL_STACK_FRAME(_hx_pos_0b0d584b35e606f8_183_addTypes,"little.tools.PrepareRun","addTypes",0x6cf0f4d7,"little.tools.PrepareRun.addTypes","little/tools/PrepareRun.hx",183,0x70b2680d)
HX_LOCAL_STACK_FRAME(_hx_pos_0b0d584b35e606f8_191_addTypes,"little.tools.PrepareRun","addTypes",0x6cf0f4d7,"little.tools.PrepareRun.addTypes","little/tools/PrepareRun.hx",191,0x70b2680d)
HX_LOCAL_STACK_FRAME(_hx_pos_0b0d584b35e606f8_204_addTypes,"little.tools.PrepareRun","addTypes",0x6cf0f4d7,"little.tools.PrepareRun.addTypes","little/tools/PrepareRun.hx",204,0x70b2680d)
HX_LOCAL_STACK_FRAME(_hx_pos_0b0d584b35e606f8_207_addTypes,"little.tools.PrepareRun","addTypes",0x6cf0f4d7,"little.tools.PrepareRun.addTypes","little/tools/PrepareRun.hx",207,0x70b2680d)
HX_LOCAL_STACK_FRAME(_hx_pos_0b0d584b35e606f8_211_addTypes,"little.tools.PrepareRun","addTypes",0x6cf0f4d7,"little.tools.PrepareRun.addTypes","little/tools/PrepareRun.hx",211,0x70b2680d)
HX_LOCAL_STACK_FRAME(_hx_pos_0b0d584b35e606f8_214_addTypes,"little.tools.PrepareRun","addTypes",0x6cf0f4d7,"little.tools.PrepareRun.addTypes","little/tools/PrepareRun.hx",214,0x70b2680d)
HX_LOCAL_STACK_FRAME(_hx_pos_0b0d584b35e606f8_228_addTypes,"little.tools.PrepareRun","addTypes",0x6cf0f4d7,"little.tools.PrepareRun.addTypes","little/tools/PrepareRun.hx",228,0x70b2680d)
HX_LOCAL_STACK_FRAME(_hx_pos_0b0d584b35e606f8_231_addTypes,"little.tools.PrepareRun","addTypes",0x6cf0f4d7,"little.tools.PrepareRun.addTypes","little/tools/PrepareRun.hx",231,0x70b2680d)
HX_LOCAL_STACK_FRAME(_hx_pos_0b0d584b35e606f8_36_addTypes,"little.tools.PrepareRun","addTypes",0x6cf0f4d7,"little.tools.PrepareRun.addTypes","little/tools/PrepareRun.hx",36,0x70b2680d)
HX_LOCAL_STACK_FRAME(_hx_pos_0b0d584b35e606f8_241_addFunctions,"little.tools.PrepareRun","addFunctions",0x80e515b9,"little.tools.PrepareRun.addFunctions","little/tools/PrepareRun.hx",241,0x70b2680d)
HX_LOCAL_STACK_FRAME(_hx_pos_0b0d584b35e606f8_247_addFunctions,"little.tools.PrepareRun","addFunctions",0x80e515b9,"little.tools.PrepareRun.addFunctions","little/tools/PrepareRun.hx",247,0x70b2680d)
HX_LOCAL_STACK_FRAME(_hx_pos_0b0d584b35e606f8_252_addFunctions,"little.tools.PrepareRun","addFunctions",0x80e515b9,"little.tools.PrepareRun.addFunctions","little/tools/PrepareRun.hx",252,0x70b2680d)
HX_LOCAL_STACK_FRAME(_hx_pos_0b0d584b35e606f8_254_addFunctions,"little.tools.PrepareRun","addFunctions",0x80e515b9,"little.tools.PrepareRun.addFunctions","little/tools/PrepareRun.hx",254,0x70b2680d)
HX_LOCAL_STACK_FRAME(_hx_pos_0b0d584b35e606f8_240_addFunctions,"little.tools.PrepareRun","addFunctions",0x80e515b9,"little.tools.PrepareRun.addFunctions","little/tools/PrepareRun.hx",240,0x70b2680d)
HX_LOCAL_STACK_FRAME(_hx_pos_0b0d584b35e606f8_264_addProps,"little.tools.PrepareRun","addProps",0x1ab56bce,"little.tools.PrepareRun.addProps","little/tools/PrepareRun.hx",264,0x70b2680d)
HX_LOCAL_STACK_FRAME(_hx_pos_0b0d584b35e606f8_270_addProps,"little.tools.PrepareRun","addProps",0x1ab56bce,"little.tools.PrepareRun.addProps","little/tools/PrepareRun.hx",270,0x70b2680d)
HX_LOCAL_STACK_FRAME(_hx_pos_0b0d584b35e606f8_262_addProps,"little.tools.PrepareRun","addProps",0x1ab56bce,"little.tools.PrepareRun.addProps","little/tools/PrepareRun.hx",262,0x70b2680d)
HX_LOCAL_STACK_FRAME(_hx_pos_0b0d584b35e606f8_288_addSigns,"little.tools.PrepareRun","addSigns",0xcef029f4,"little.tools.PrepareRun.addSigns","little/tools/PrepareRun.hx",288,0x70b2680d)
HX_LOCAL_STACK_FRAME(_hx_pos_0b0d584b35e606f8_300_addSigns,"little.tools.PrepareRun","addSigns",0xcef029f4,"little.tools.PrepareRun.addSigns","little/tools/PrepareRun.hx",300,0x70b2680d)
HX_LOCAL_STACK_FRAME(_hx_pos_0b0d584b35e606f8_312_addSigns,"little.tools.PrepareRun","addSigns",0xcef029f4,"little.tools.PrepareRun.addSigns","little/tools/PrepareRun.hx",312,0x70b2680d)
HX_LOCAL_STACK_FRAME(_hx_pos_0b0d584b35e606f8_323_addSigns,"little.tools.PrepareRun","addSigns",0xcef029f4,"little.tools.PrepareRun.addSigns","little/tools/PrepareRun.hx",323,0x70b2680d)
HX_LOCAL_STACK_FRAME(_hx_pos_0b0d584b35e606f8_338_addSigns,"little.tools.PrepareRun","addSigns",0xcef029f4,"little.tools.PrepareRun.addSigns","little/tools/PrepareRun.hx",338,0x70b2680d)
HX_LOCAL_STACK_FRAME(_hx_pos_0b0d584b35e606f8_355_addSigns,"little.tools.PrepareRun","addSigns",0xcef029f4,"little.tools.PrepareRun.addSigns","little/tools/PrepareRun.hx",355,0x70b2680d)
HX_LOCAL_STACK_FRAME(_hx_pos_0b0d584b35e606f8_374_addSigns,"little.tools.PrepareRun","addSigns",0xcef029f4,"little.tools.PrepareRun.addSigns","little/tools/PrepareRun.hx",374,0x70b2680d)
HX_LOCAL_STACK_FRAME(_hx_pos_0b0d584b35e606f8_393_addSigns,"little.tools.PrepareRun","addSigns",0xcef029f4,"little.tools.PrepareRun.addSigns","little/tools/PrepareRun.hx",393,0x70b2680d)
HX_LOCAL_STACK_FRAME(_hx_pos_0b0d584b35e606f8_411_addSigns,"little.tools.PrepareRun","addSigns",0xcef029f4,"little.tools.PrepareRun.addSigns","little/tools/PrepareRun.hx",411,0x70b2680d)
HX_LOCAL_STACK_FRAME(_hx_pos_0b0d584b35e606f8_425_addSigns,"little.tools.PrepareRun","addSigns",0xcef029f4,"little.tools.PrepareRun.addSigns","little/tools/PrepareRun.hx",425,0x70b2680d)
HX_LOCAL_STACK_FRAME(_hx_pos_0b0d584b35e606f8_439_addSigns,"little.tools.PrepareRun","addSigns",0xcef029f4,"little.tools.PrepareRun.addSigns","little/tools/PrepareRun.hx",439,0x70b2680d)
HX_LOCAL_STACK_FRAME(_hx_pos_0b0d584b35e606f8_456_addSigns,"little.tools.PrepareRun","addSigns",0xcef029f4,"little.tools.PrepareRun.addSigns","little/tools/PrepareRun.hx",456,0x70b2680d)
HX_LOCAL_STACK_FRAME(_hx_pos_0b0d584b35e606f8_462_addSigns,"little.tools.PrepareRun","addSigns",0xcef029f4,"little.tools.PrepareRun.addSigns","little/tools/PrepareRun.hx",462,0x70b2680d)
HX_LOCAL_STACK_FRAME(_hx_pos_0b0d584b35e606f8_466_addSigns,"little.tools.PrepareRun","addSigns",0xcef029f4,"little.tools.PrepareRun.addSigns","little/tools/PrepareRun.hx",466,0x70b2680d)
HX_LOCAL_STACK_FRAME(_hx_pos_0b0d584b35e606f8_471_addSigns,"little.tools.PrepareRun","addSigns",0xcef029f4,"little.tools.PrepareRun.addSigns","little/tools/PrepareRun.hx",471,0x70b2680d)
HX_LOCAL_STACK_FRAME(_hx_pos_0b0d584b35e606f8_478_addSigns,"little.tools.PrepareRun","addSigns",0xcef029f4,"little.tools.PrepareRun.addSigns","little/tools/PrepareRun.hx",478,0x70b2680d)
HX_LOCAL_STACK_FRAME(_hx_pos_0b0d584b35e606f8_486_addSigns,"little.tools.PrepareRun","addSigns",0xcef029f4,"little.tools.PrepareRun.addSigns","little/tools/PrepareRun.hx",486,0x70b2680d)
HX_LOCAL_STACK_FRAME(_hx_pos_0b0d584b35e606f8_500_addSigns,"little.tools.PrepareRun","addSigns",0xcef029f4,"little.tools.PrepareRun.addSigns","little/tools/PrepareRun.hx",500,0x70b2680d)
HX_LOCAL_STACK_FRAME(_hx_pos_0b0d584b35e606f8_514_addSigns,"little.tools.PrepareRun","addSigns",0xcef029f4,"little.tools.PrepareRun.addSigns","little/tools/PrepareRun.hx",514,0x70b2680d)
HX_LOCAL_STACK_FRAME(_hx_pos_0b0d584b35e606f8_528_addSigns,"little.tools.PrepareRun","addSigns",0xcef029f4,"little.tools.PrepareRun.addSigns","little/tools/PrepareRun.hx",528,0x70b2680d)
HX_LOCAL_STACK_FRAME(_hx_pos_0b0d584b35e606f8_278_addSigns,"little.tools.PrepareRun","addSigns",0xcef029f4,"little.tools.PrepareRun.addSigns","little/tools/PrepareRun.hx",278,0x70b2680d)
HX_LOCAL_STACK_FRAME(_hx_pos_0b0d584b35e606f8_542_addConditions,"little.tools.PrepareRun","addConditions",0x2a20655a,"little.tools.PrepareRun.addConditions","little/tools/PrepareRun.hx",542,0x70b2680d)
HX_LOCAL_STACK_FRAME(_hx_pos_0b0d584b35e606f8_566_addConditions,"little.tools.PrepareRun","addConditions",0x2a20655a,"little.tools.PrepareRun.addConditions","little/tools/PrepareRun.hx",566,0x70b2680d)
HX_LOCAL_STACK_FRAME(_hx_pos_0b0d584b35e606f8_580_addConditions,"little.tools.PrepareRun","addConditions",0x2a20655a,"little.tools.PrepareRun.addConditions","little/tools/PrepareRun.hx",580,0x70b2680d)
HX_LOCAL_STACK_FRAME(_hx_pos_0b0d584b35e606f8_706_addConditions,"little.tools.PrepareRun","addConditions",0x2a20655a,"little.tools.PrepareRun.addConditions","little/tools/PrepareRun.hx",706,0x70b2680d)
HX_LOCAL_STACK_FRAME(_hx_pos_0b0d584b35e606f8_688_addConditions,"little.tools.PrepareRun","addConditions",0x2a20655a,"little.tools.PrepareRun.addConditions","little/tools/PrepareRun.hx",688,0x70b2680d)
static const ::String _hx_array_data_c62cc60f_90[] = {
	HX_("",00,00,00,00),
};
HX_LOCAL_STACK_FRAME(_hx_pos_0b0d584b35e606f8_735_addConditions,"little.tools.PrepareRun","addConditions",0x2a20655a,"little.tools.PrepareRun.addConditions","little/tools/PrepareRun.hx",735,0x70b2680d)
HX_LOCAL_STACK_FRAME(_hx_pos_0b0d584b35e606f8_719_addConditions,"little.tools.PrepareRun","addConditions",0x2a20655a,"little.tools.PrepareRun.addConditions","little/tools/PrepareRun.hx",719,0x70b2680d)
static const ::String _hx_array_data_c62cc60f_93[] = {
	HX_("",00,00,00,00),
};
HX_LOCAL_STACK_FRAME(_hx_pos_0b0d584b35e606f8_541_addConditions,"little.tools.PrepareRun","addConditions",0x2a20655a,"little.tools.PrepareRun.addConditions","little/tools/PrepareRun.hx",541,0x70b2680d)
HX_LOCAL_STACK_FRAME(_hx_pos_0b0d584b35e606f8_31_boot,"little.tools.PrepareRun","boot",0xc0aa16f1,"little.tools.PrepareRun.boot","little/tools/PrepareRun.hx",31,0x70b2680d)
namespace little{
namespace tools{

void PrepareRun_obj::__construct() { }

Dynamic PrepareRun_obj::__CreateEmpty() { return new PrepareRun_obj; }

void *PrepareRun_obj::_hx_vtable = 0;

Dynamic PrepareRun_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< PrepareRun_obj > _hx_result = new PrepareRun_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool PrepareRun_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x6182c8c9;
}

bool PrepareRun_obj::prepared;

void PrepareRun_obj::addTypes(){
            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_0) HXARGC(3)
            		 ::little::interpreter::InterpTokens _hx_run(int address, ::little::interpreter::InterpTokens _,::Array< ::Dynamic> _1){
            			HX_GC_STACKFRAME(&_hx_pos_0b0d584b35e606f8_47_addTypes)
HXLINE(  47)			return ::little::tools::Conversion_obj::toLittleValue(::little::Little_obj::memory->getTypeName(address));
            		}
            		HX_END_LOCAL_FUNC3(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_1) HXARGC(3)
            		 ::little::interpreter::InterpTokens _hx_run(int _, ::little::interpreter::InterpTokens value,::Array< ::Dynamic> _1){
            			HX_GC_STACKFRAME(&_hx_pos_0b0d584b35e606f8_60_addTypes)
HXLINE(  60)			return ::little::tools::Conversion_obj::toLittleValue(::Std_obj::string(::Type_obj::enumParameters(value)->__get(0)));
            		}
            		HX_END_LOCAL_FUNC3(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_2) HXARGC(3)
            		 ::little::interpreter::InterpTokens _hx_run(int _, ::little::interpreter::InterpTokens value,::Array< ::Dynamic> _1){
            			HX_GC_STACKFRAME(&_hx_pos_0b0d584b35e606f8_63_addTypes)
HXLINE(  63)			return ::little::interpreter::InterpTokens_obj::Decimal(::Type_obj::enumParameters(value)->__get(0));
            		}
            		HX_END_LOCAL_FUNC3(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_3) HXARGC(3)
            		 ::little::interpreter::InterpTokens _hx_run(int _, ::little::interpreter::InterpTokens value,::Array< ::Dynamic> _1){
            			HX_GC_STACKFRAME(&_hx_pos_0b0d584b35e606f8_66_addTypes)
HXLINE(  66)			return ::little::tools::Conversion_obj::toLittleValue(::hx::IsNotEq( ::Type_obj::enumParameters(value)->__get(0),0 ));
            		}
            		HX_END_LOCAL_FUNC3(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_4) HXARGC(3)
            		 ::little::interpreter::InterpTokens _hx_run(int _, ::little::interpreter::InterpTokens value,::Array< ::Dynamic> _1){
            			HX_GC_STACKFRAME(&_hx_pos_0b0d584b35e606f8_72_addTypes)
HXLINE(  72)			return ::little::tools::Conversion_obj::toLittleValue(::Std_obj::string(::Type_obj::enumParameters(value)->__get(0)));
            		}
            		HX_END_LOCAL_FUNC3(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_5) HXARGC(3)
            		 ::little::interpreter::InterpTokens _hx_run(int _, ::little::interpreter::InterpTokens value,::Array< ::Dynamic> _1){
            			HX_GC_STACKFRAME(&_hx_pos_0b0d584b35e606f8_75_addTypes)
HXLINE(  75)			return ::little::tools::Conversion_obj::toLittleValue(::Math_obj::floor(( (Float)(::Type_obj::enumParameters(value)->__get(0)) )));
            		}
            		HX_END_LOCAL_FUNC3(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_6) HXARGC(3)
            		 ::little::interpreter::InterpTokens _hx_run(int _, ::little::interpreter::InterpTokens value,::Array< ::Dynamic> _1){
            			HX_GC_STACKFRAME(&_hx_pos_0b0d584b35e606f8_78_addTypes)
HXLINE(  78)			return ::little::tools::Conversion_obj::toLittleValue(::hx::IsNotEq( ::Type_obj::enumParameters(value)->__get(0),0 ));
            		}
            		HX_END_LOCAL_FUNC3(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_7) HXARGC(3)
            		 ::little::interpreter::InterpTokens _hx_run(int _, ::little::interpreter::InterpTokens value,::Array< ::Dynamic> _1){
            			HX_GC_STACKFRAME(&_hx_pos_0b0d584b35e606f8_81_addTypes)
HXLINE(  81)			return ::little::tools::Conversion_obj::toLittleValue((::hx::Mod(( (Float)(::Type_obj::enumParameters(value)->__get(0)) ),1) == 0));
            		}
            		HX_END_LOCAL_FUNC3(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_8) HXARGC(3)
            		 ::little::interpreter::InterpTokens _hx_run(int _, ::little::interpreter::InterpTokens value,::Array< ::Dynamic> _1){
            			HX_GC_STACKFRAME(&_hx_pos_0b0d584b35e606f8_87_addTypes)
HXLINE(  87)			return ::little::tools::Conversion_obj::toLittleValue(::Std_obj::string(::Type_obj::enumParameters(value)->__get(0)));
            		}
            		HX_END_LOCAL_FUNC3(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_9) HXARGC(3)
            		 ::little::interpreter::InterpTokens _hx_run(int _, ::little::interpreter::InterpTokens value,::Array< ::Dynamic> _1){
            			HX_GC_STACKFRAME(&_hx_pos_0b0d584b35e606f8_89_addTypes)
HXLINE(  90)			 ::Dynamic number = ::Std_obj::parseInt(( (::String)(::Type_obj::enumParameters(value)->__get(0)) ));
HXLINE(  91)			if (::hx::IsNull( number )) {
HXLINE(  92)				 ::little::interpreter::Runtime _hx_tmp = ::little::Little_obj::runtime;
HXDLIN(  92)				::String _hx_tmp1 = ((HX_("",00,00,00,00) + ::little::Little_obj::keywords->TYPE_STRING) + HX_(" instance `\"",4d,5b,df,60));
HXDLIN(  92)				::String _hx_tmp2 = ((_hx_tmp1 + ::Std_obj::string(::Type_obj::enumParameters(value)->__get(0))) + HX_("\"` cannot be converted to ",b5,de,da,6e));
HXDLIN(  92)				_hx_tmp->throwError(::little::interpreter::InterpTokens_obj::ErrorMessage(((_hx_tmp2 + ::little::Little_obj::keywords->TYPE_INT) + HX_(", since it is not a number\t",d9,15,26,98))),HX_("Interpreter",9a,09,07,b9));
            			}
HXLINE(  94)			return ::little::tools::Conversion_obj::toLittleValue(number);
            		}
            		HX_END_LOCAL_FUNC3(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_10) HXARGC(3)
            		 ::little::interpreter::InterpTokens _hx_run(int _, ::little::interpreter::InterpTokens value,::Array< ::Dynamic> _1){
            			HX_GC_STACKFRAME(&_hx_pos_0b0d584b35e606f8_96_addTypes)
HXLINE(  97)			Float number = ::Std_obj::parseFloat(( (::String)(::Type_obj::enumParameters(value)->__get(0)) ));
HXLINE(  98)			if ((number == ::Math_obj::NaN)) {
HXLINE(  99)				 ::little::interpreter::Runtime _hx_tmp = ::little::Little_obj::runtime;
HXDLIN(  99)				::String _hx_tmp1 = ((HX_("",00,00,00,00) + ::little::Little_obj::keywords->TYPE_STRING) + HX_(" instance `\"",4d,5b,df,60));
HXDLIN(  99)				::String _hx_tmp2 = ((_hx_tmp1 + ::Std_obj::string(::Type_obj::enumParameters(value)->__get(0))) + HX_("\"` cannot be converted to ",b5,de,da,6e));
HXDLIN(  99)				_hx_tmp->throwError(::little::interpreter::InterpTokens_obj::ErrorMessage(((_hx_tmp2 + ::little::Little_obj::keywords->TYPE_FLOAT) + HX_(", since it is not a number\t",d9,15,26,98))),HX_("Interpreter",9a,09,07,b9));
            			}
HXLINE( 101)			return ::little::tools::Conversion_obj::toLittleValue(number);
            		}
            		HX_END_LOCAL_FUNC3(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_11) HXARGC(3)
            		 ::little::interpreter::InterpTokens _hx_run(int _, ::little::interpreter::InterpTokens value,::Array< ::Dynamic> _1){
            			HX_GC_STACKFRAME(&_hx_pos_0b0d584b35e606f8_104_addTypes)
HXLINE( 104)			return ::little::tools::Conversion_obj::toLittleValue(::little::interpreter::InterpTokens_obj::Sign(::Type_obj::enumParameters(value)->__get(0)));
            		}
            		HX_END_LOCAL_FUNC3(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_12) HXARGC(3)
            		 ::little::interpreter::InterpTokens _hx_run(int _, ::little::interpreter::InterpTokens value,::Array< ::Dynamic> _1){
            			HX_GC_STACKFRAME(&_hx_pos_0b0d584b35e606f8_106_addTypes)
HXLINE( 107)			bool _hx_tmp;
HXDLIN( 107)			if (::hx::IsNotEq( ::Type_obj::enumParameters(value)->__get(0),HX_("true",4e,a7,03,4d) )) {
HXLINE( 107)				Float _hx_tmp1 = ::Std_obj::parseFloat(( (::String)(::Type_obj::enumParameters(value)->__get(0)) ));
HXDLIN( 107)				if ((_hx_tmp1 != ::Math_obj::NaN)) {
HXLINE( 107)					_hx_tmp = (::Std_obj::parseFloat(( (::String)(::Type_obj::enumParameters(value)->__get(0)) )) != 0);
            				}
            				else {
HXLINE( 107)					_hx_tmp = false;
            				}
            			}
            			else {
HXLINE( 107)				_hx_tmp = true;
            			}
HXDLIN( 107)			return ::little::tools::Conversion_obj::toLittleValue(_hx_tmp);
            		}
            		HX_END_LOCAL_FUNC3(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_13) HXARGC(2)
            		 ::little::interpreter::InterpTokens _hx_run(int _, ::little::interpreter::InterpTokens value){
            			HX_GC_STACKFRAME(&_hx_pos_0b0d584b35e606f8_111_addTypes)
HXLINE( 111)			return ::little::tools::Conversion_obj::toLittleValue( ::Dynamic(::Type_obj::enumParameters(value)->__get(0)->__Field(HX_("length",e6,94,07,9f),::hx::paccDynamic)));
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_14) HXARGC(3)
            		 ::little::interpreter::InterpTokens _hx_run(int _, ::little::interpreter::InterpTokens value,::Array< ::Dynamic> params){
            			HX_GC_STACKFRAME(&_hx_pos_0b0d584b35e606f8_113_addTypes)
HXLINE( 114)			 ::Dynamic _hx_tmp =  ::Dynamic(::Type_obj::enumParameters(value)->__get(0)->__Field(HX_("charAt",69,79,75,b7),::hx::paccDynamic));
HXDLIN( 114)			return ::little::tools::Conversion_obj::toLittleValue(_hx_tmp(::little::tools::Conversion_obj::toHaxeValue(params->__get(0).StaticCast<  ::little::interpreter::InterpTokens >())));
            		}
            		HX_END_LOCAL_FUNC3(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_15) HXARGC(3)
            		 ::little::interpreter::InterpTokens _hx_run(int _, ::little::interpreter::InterpTokens value,::Array< ::Dynamic> params){
            			HX_GC_STACKFRAME(&_hx_pos_0b0d584b35e606f8_116_addTypes)
HXLINE( 117)			 ::Dynamic _hx_tmp =  ::Dynamic(::Type_obj::enumParameters(value)->__get(0)->__Field(HX_("substring",51,f2,e7,e2),::hx::paccDynamic));
HXDLIN( 117)			 ::Dynamic _hx_tmp1 = ::little::tools::Conversion_obj::toHaxeValue(params->__get(0).StaticCast<  ::little::interpreter::InterpTokens >());
HXDLIN( 117)			return ::little::interpreter::InterpTokens_obj::Characters(_hx_tmp(_hx_tmp1,::little::tools::Conversion_obj::toHaxeValue(params->__get(1).StaticCast<  ::little::interpreter::InterpTokens >())));
            		}
            		HX_END_LOCAL_FUNC3(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_16) HXARGC(3)
            		 ::little::interpreter::InterpTokens _hx_run(int _, ::little::interpreter::InterpTokens value,::Array< ::Dynamic> _1){
            			HX_GC_STACKFRAME(&_hx_pos_0b0d584b35e606f8_120_addTypes)
HXLINE( 120)			return ::little::interpreter::InterpTokens_obj::Characters(::Type_obj::enumParameters(value)->__get(0)->__Field(HX_("toLowerCase",56,4c,64,b8),::hx::paccDynamic)());
            		}
            		HX_END_LOCAL_FUNC3(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_17) HXARGC(3)
            		 ::little::interpreter::InterpTokens _hx_run(int _, ::little::interpreter::InterpTokens value,::Array< ::Dynamic> _1){
            			HX_GC_STACKFRAME(&_hx_pos_0b0d584b35e606f8_123_addTypes)
HXLINE( 123)			return ::little::interpreter::InterpTokens_obj::Characters(::Type_obj::enumParameters(value)->__get(0)->__Field(HX_("toUpperCase",37,30,fd,38),::hx::paccDynamic)());
            		}
            		HX_END_LOCAL_FUNC3(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_18) HXARGC(3)
            		 ::little::interpreter::InterpTokens _hx_run(int _, ::little::interpreter::InterpTokens value,::Array< ::Dynamic> params){
            			HX_GC_STACKFRAME(&_hx_pos_0b0d584b35e606f8_125_addTypes)
HXLINE( 126)			 ::Dynamic _hx_tmp =  ::Dynamic(::Type_obj::enumParameters(value)->__get(0)->__Field(HX_("replace",34,48,28,ab),::hx::paccDynamic));
HXDLIN( 126)			 ::Dynamic _hx_tmp1 = ::little::tools::Conversion_obj::toHaxeValue(params->__get(0).StaticCast<  ::little::interpreter::InterpTokens >());
HXDLIN( 126)			return ::little::interpreter::InterpTokens_obj::Characters(_hx_tmp(_hx_tmp1,::little::tools::Conversion_obj::toHaxeValue(params->__get(1).StaticCast<  ::little::interpreter::InterpTokens >())));
            		}
            		HX_END_LOCAL_FUNC3(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_19) HXARGC(3)
            		 ::little::interpreter::InterpTokens _hx_run(int _, ::little::interpreter::InterpTokens value,::Array< ::Dynamic> _1){
            			HX_GC_STACKFRAME(&_hx_pos_0b0d584b35e606f8_129_addTypes)
HXLINE( 129)			return ::little::interpreter::InterpTokens_obj::Characters(::Type_obj::enumParameters(value)->__get(0)->__Field(HX_("trim",e2,9c,03,4d),::hx::paccDynamic)());
            		}
            		HX_END_LOCAL_FUNC3(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_20) HXARGC(3)
            		 ::little::interpreter::InterpTokens _hx_run(int _, ::little::interpreter::InterpTokens value,::Array< ::Dynamic> params){
            			HX_GC_STACKFRAME(&_hx_pos_0b0d584b35e606f8_131_addTypes)
HXLINE( 132)			 ::Dynamic _hx_tmp =  ::Dynamic(::Type_obj::enumParameters(value)->__get(0)->__Field(HX_("replace",34,48,28,ab),::hx::paccDynamic));
HXDLIN( 132)			return ::little::interpreter::InterpTokens_obj::Characters(_hx_tmp(::little::tools::Conversion_obj::toHaxeValue(params->__get(0).StaticCast<  ::little::interpreter::InterpTokens >()),HX_("",00,00,00,00)));
            		}
            		HX_END_LOCAL_FUNC3(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_21) HXARGC(3)
            		 ::little::interpreter::InterpTokens _hx_run(int _, ::little::interpreter::InterpTokens value,::Array< ::Dynamic> params){
            			HX_GC_STACKFRAME(&_hx_pos_0b0d584b35e606f8_134_addTypes)
HXLINE( 135)			 ::Dynamic _hx_tmp =  ::Dynamic(::Type_obj::enumParameters(value)->__get(0)->__Field(HX_("contains",1f,5a,7b,2c),::hx::paccDynamic));
HXDLIN( 135)			return ::little::tools::Conversion_obj::toLittleValue(_hx_tmp(::little::tools::Conversion_obj::toHaxeValue(params->__get(0).StaticCast<  ::little::interpreter::InterpTokens >())));
            		}
            		HX_END_LOCAL_FUNC3(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_22) HXARGC(3)
            		 ::little::interpreter::InterpTokens _hx_run(int _, ::little::interpreter::InterpTokens value,::Array< ::Dynamic> params){
            			HX_GC_STACKFRAME(&_hx_pos_0b0d584b35e606f8_137_addTypes)
HXLINE( 138)			 ::Dynamic _hx_tmp =  ::Dynamic(::Type_obj::enumParameters(value)->__get(0)->__Field(HX_("indexOf",c9,48,bf,e0),::hx::paccDynamic));
HXDLIN( 138)			return ::little::tools::Conversion_obj::toLittleValue(_hx_tmp(::little::tools::Conversion_obj::toHaxeValue(params->__get(0).StaticCast<  ::little::interpreter::InterpTokens >())));
            		}
            		HX_END_LOCAL_FUNC3(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_23) HXARGC(3)
            		 ::little::interpreter::InterpTokens _hx_run(int _, ::little::interpreter::InterpTokens value,::Array< ::Dynamic> params){
            			HX_GC_STACKFRAME(&_hx_pos_0b0d584b35e606f8_140_addTypes)
HXLINE( 141)			 ::Dynamic _hx_tmp =  ::Dynamic(::Type_obj::enumParameters(value)->__get(0)->__Field(HX_("lastIndexOf",13,fd,6a,95),::hx::paccDynamic));
HXDLIN( 141)			return ::little::tools::Conversion_obj::toLittleValue(_hx_tmp(::little::tools::Conversion_obj::toHaxeValue(params->__get(0).StaticCast<  ::little::interpreter::InterpTokens >())));
            		}
            		HX_END_LOCAL_FUNC3(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_24) HXARGC(3)
            		 ::little::interpreter::InterpTokens _hx_run(int _, ::little::interpreter::InterpTokens value,::Array< ::Dynamic> params){
            			HX_GC_STACKFRAME(&_hx_pos_0b0d584b35e606f8_143_addTypes)
HXLINE( 144)			 ::Dynamic _hx_tmp =  ::Dynamic(::Type_obj::enumParameters(value)->__get(0)->__Field(HX_("indexOf",c9,48,bf,e0),::hx::paccDynamic));
HXDLIN( 144)			return ::little::tools::Conversion_obj::toLittleValue(_hx_tmp(::hx::IsEq( ::little::tools::Conversion_obj::toHaxeValue(params->__get(0).StaticCast<  ::little::interpreter::InterpTokens >()),0 )));
            		}
            		HX_END_LOCAL_FUNC3(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_25) HXARGC(3)
            		 ::little::interpreter::InterpTokens _hx_run(int _, ::little::interpreter::InterpTokens value,::Array< ::Dynamic> params){
            			HX_GC_STACKFRAME(&_hx_pos_0b0d584b35e606f8_146_addTypes)
HXLINE( 147)			 ::Dynamic _hx_tmp =  ::Dynamic(::Type_obj::enumParameters(value)->__get(0)->__Field(HX_("indexOf",c9,48,bf,e0),::hx::paccDynamic));
HXDLIN( 147)			 ::Dynamic _hx_tmp1 = _hx_tmp(::little::tools::Conversion_obj::toHaxeValue(params->__get(0).StaticCast<  ::little::interpreter::InterpTokens >()));
HXDLIN( 147)			 ::Dynamic _hx_tmp2 =  ::Dynamic(::Type_obj::enumParameters(value)->__get(0)->__Field(HX_("length",e6,94,07,9f),::hx::paccDynamic));
HXDLIN( 147)			return ::little::tools::Conversion_obj::toLittleValue(::hx::IsEq( _hx_tmp1,(( (Float)(_hx_tmp2) ) - ( (Float)(::little::tools::Conversion_obj::toHaxeValue(params->__get(0).StaticCast<  ::little::interpreter::InterpTokens >())->__Field(HX_("length",e6,94,07,9f),::hx::paccDynamic)) )) ));
            		}
            		HX_END_LOCAL_FUNC3(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_26) HXARGC(1)
            		 ::little::interpreter::InterpTokens _hx_run(::Array< ::Dynamic> params){
            			HX_GC_STACKFRAME(&_hx_pos_0b0d584b35e606f8_151_addTypes)
HXLINE( 151)			return ::little::tools::Conversion_obj::toLittleValue(::String::fromCharCode(( (int)(::little::tools::Conversion_obj::toHaxeValue(params->__get(0).StaticCast<  ::little::interpreter::InterpTokens >())) )));
            		}
            		HX_END_LOCAL_FUNC1(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_27) HXARGC(1)
            		 ::little::interpreter::InterpTokens _hx_run(::Array< ::Dynamic> params){
            			HX_GC_STACKFRAME(&_hx_pos_0b0d584b35e606f8_157_addTypes)
HXLINE( 157)			return ::little::tools::Extensions_obj::asEmptyObject(::cpp::VirtualArray_obj::__new(0),::little::Little_obj::keywords->TYPE_OBJECT);
            		}
            		HX_END_LOCAL_FUNC1(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_28) HXARGC(1)
            		 ::little::interpreter::InterpTokens _hx_run(::Array< ::Dynamic> params){
            			HX_GC_STACKFRAME(&_hx_pos_0b0d584b35e606f8_162_addTypes)
HXLINE( 163)			::String arrayType = ( (::String)(::little::tools::Conversion_obj::toHaxeValue(params->__get(0).StaticCast<  ::little::interpreter::InterpTokens >())) );
HXLINE( 164)			int size = ( (int)(::little::Little_obj::memory->getTypeInformation(arrayType)->__Field(HX_("defaultInstanceSize",57,9d,96,48),::hx::paccDynamic)) );
HXLINE( 165)			int length = ( (int)(::little::tools::Conversion_obj::toHaxeValue(params->__get(1).StaticCast<  ::little::interpreter::InterpTokens >())) );
HXLINE( 166)			int byteArray = ::little::Little_obj::memory->storage->storeArray(length,size,null());
HXLINE( 167)			 ::haxe::ds::StringMap _g =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
HXDLIN( 167)			_g->set(HX_("__p",50,69,48,00),::little::interpreter::InterpTokens_obj::Number(::little::interpreter::memory::_MemoryPointer::MemoryPointer_Impl__obj::toInt(byteArray)));
HXDLIN( 167)			_g->set(HX_("__t",54,69,48,00),params->__get(0).StaticCast<  ::little::interpreter::InterpTokens >());
HXDLIN( 167)			return ::little::tools::Extensions_obj::asObjectToken(_g,::little::Little_obj::keywords->TYPE_ARRAY);
            		}
            		HX_END_LOCAL_FUNC1(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_29) HXARGC(2)
            		 ::Dynamic _hx_run(int address, ::little::interpreter::InterpTokens value){
            			HX_GC_STACKFRAME(&_hx_pos_0b0d584b35e606f8_169_addTypes)
HXLINE( 170)			int pointer = ( (int)(::little::tools::Conversion_obj::toHaxeValue(::Type_obj::enumParameters(value)->__get(0)->__Field(HX_("get",96,80,4e,00),::hx::paccDynamic)(HX_("__p",50,69,48,00))->__Field(HX_("value",71,7f,b8,31),::hx::paccDynamic))) );
HXLINE( 172)			 ::little::interpreter::memory::Storage _hx_tmp = ::little::Little_obj::memory->storage;
HXDLIN( 172)			 ::little::interpreter::InterpTokens _hx_tmp1 = ::little::interpreter::InterpTokens_obj::Number(_hx_tmp->readInt32(::little::interpreter::memory::_MemoryPointer::MemoryPointer_Impl__obj::fromInt(pointer)));
HXLINE( 171)			return  ::Dynamic(::hx::Anon_obj::Create(2)
            				->setFixed(0,HX_("address",b4,71,0b,9d),::little::interpreter::memory::_MemoryPointer::MemoryPointer_Impl__obj::fromInt(pointer))
            				->setFixed(1,HX_("value",71,7f,b8,31),_hx_tmp1));
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_30) HXARGC(2)
            		 ::Dynamic _hx_run(int address, ::little::interpreter::InterpTokens value){
            			HX_GC_STACKFRAME(&_hx_pos_0b0d584b35e606f8_176_addTypes)
HXLINE( 177)			 ::little::interpreter::InterpTokens typeToken = ::Type_obj::enumParameters(value)->__get(0)->__Field(HX_("get",96,80,4e,00),::hx::paccDynamic)(HX_("__t",54,69,48,00))->__Field(HX_("value",71,7f,b8,31),::hx::paccDynamic);
HXLINE( 178)			return  ::Dynamic(::hx::Anon_obj::Create(2)
            				->setFixed(0,HX_("address",b4,71,0b,9d),::Type_obj::enumParameters(typeToken)->__get(0))
            				->setFixed(1,HX_("value",71,7f,b8,31),typeToken));
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_31) HXARGC(3)
            		 ::little::interpreter::InterpTokens _hx_run(int address, ::little::interpreter::InterpTokens value,::Array< ::Dynamic> params){
            			HX_GC_STACKFRAME(&_hx_pos_0b0d584b35e606f8_183_addTypes)
HXLINE( 184)			int pointer = ( (int)(::little::tools::Conversion_obj::toHaxeValue(::Type_obj::enumParameters(value)->__get(0)->__Field(HX_("get",96,80,4e,00),::hx::paccDynamic)(HX_("__p",50,69,48,00))->__Field(HX_("value",71,7f,b8,31),::hx::paccDynamic))) );
HXLINE( 185)			::String elementType = ( (::String)(::little::tools::Conversion_obj::toHaxeValue(::Type_obj::enumParameters(value)->__get(0)->__Field(HX_("get",96,80,4e,00),::hx::paccDynamic)(HX_("__t",54,69,48,00))->__Field(HX_("value",71,7f,b8,31),::hx::paccDynamic))) );
HXLINE( 186)			int index = ( (int)(::little::tools::Conversion_obj::toHaxeValue(params->__get(0).StaticCast<  ::little::interpreter::InterpTokens >())) );
HXLINE( 187)			 ::little::interpreter::memory::Storage elementSize = ::little::Little_obj::memory->storage;
HXDLIN( 187)			int elementSize1 = elementSize->readInt32(::little::interpreter::memory::_MemoryPointer::MemoryPointer_Impl__obj::fromInt((pointer + 4)));
HXLINE( 188)			int specificElement = (((pointer + 4) + 4) + (index * elementSize1));
HXLINE( 189)			return ::little::tools::Extensions_obj::extractValue(::little::interpreter::memory::_MemoryPointer::MemoryPointer_Impl__obj::fromInt(specificElement),elementType);
            		}
            		HX_END_LOCAL_FUNC3(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_32) HXARGC(3)
            		 ::little::interpreter::InterpTokens _hx_run(int address, ::little::interpreter::InterpTokens value,::Array< ::Dynamic> params){
            			HX_GC_STACKFRAME(&_hx_pos_0b0d584b35e606f8_191_addTypes)
HXLINE( 192)			int pointer = ( (int)(::little::tools::Conversion_obj::toHaxeValue(::Type_obj::enumParameters(value)->__get(0)->__Field(HX_("get",96,80,4e,00),::hx::paccDynamic)(HX_("__p",50,69,48,00))->__Field(HX_("value",71,7f,b8,31),::hx::paccDynamic))) );
HXLINE( 193)			int index = ( (int)(::little::tools::Conversion_obj::toHaxeValue(params->__get(0).StaticCast<  ::little::interpreter::InterpTokens >())) );
HXLINE( 194)			 ::little::interpreter::memory::Storage elementSize = ::little::Little_obj::memory->storage;
HXDLIN( 194)			int elementSize1 = elementSize->readInt32(::little::interpreter::memory::_MemoryPointer::MemoryPointer_Impl__obj::fromInt((pointer + 4)));
HXLINE( 195)			int specificElement = (((pointer + 4) + 4) + (index * elementSize1));
HXLINE( 197)			int _hx_tmp = ::little::interpreter::memory::_MemoryPointer::MemoryPointer_Impl__obj::fromInt(specificElement);
HXDLIN( 197)			::little::tools::Extensions_obj::writeInPlace(_hx_tmp,params->__get(1).StaticCast<  ::little::interpreter::InterpTokens >());
HXLINE( 199)			return ::little::interpreter::InterpTokens_obj::NullValue_dyn();
            		}
            		HX_END_LOCAL_FUNC3(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_33) HXARGC(1)
            		 ::little::interpreter::InterpTokens _hx_run(::Array< ::Dynamic> params){
            			HX_GC_STACKFRAME(&_hx_pos_0b0d584b35e606f8_204_addTypes)
HXLINE( 205)			 ::little::interpreter::memory::Memory _hx_tmp = ::little::Little_obj::memory;
HXDLIN( 205)			return ::little::tools::Conversion_obj::toLittleValue(_hx_tmp->allocate(( (int)(::little::tools::Conversion_obj::toHaxeValue(params->__get(0).StaticCast<  ::little::interpreter::InterpTokens >())) )));
            		}
            		HX_END_LOCAL_FUNC1(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_34) HXARGC(1)
            		 ::little::interpreter::InterpTokens _hx_run(::Array< ::Dynamic> params){
            			HX_GC_STACKFRAME(&_hx_pos_0b0d584b35e606f8_207_addTypes)
HXLINE( 208)			 ::little::interpreter::memory::Memory _hx_tmp = ::little::Little_obj::memory;
HXDLIN( 208)			 ::Dynamic _hx_tmp1 = ::little::tools::Conversion_obj::toHaxeValue(params->__get(0).StaticCast<  ::little::interpreter::InterpTokens >());
HXDLIN( 208)			_hx_tmp->free(( (int)(_hx_tmp1) ),( (int)(::little::tools::Conversion_obj::toHaxeValue(params->__get(1).StaticCast<  ::little::interpreter::InterpTokens >())) ));
HXLINE( 209)			return ::little::interpreter::InterpTokens_obj::NullValue_dyn();
            		}
            		HX_END_LOCAL_FUNC1(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_35) HXARGC(1)
            		 ::little::interpreter::InterpTokens _hx_run(::Array< ::Dynamic> params){
            			HX_GC_STACKFRAME(&_hx_pos_0b0d584b35e606f8_211_addTypes)
HXLINE( 212)			int _hx_tmp = ::little::interpreter::memory::_MemoryPointer::MemoryPointer_Impl__obj::fromInt(( (int)(::Type_obj::enumParameters(params->__get(0).StaticCast<  ::little::interpreter::InterpTokens >())->__get(0)) ));
HXDLIN( 212)			return ::little::tools::Extensions_obj::extractValue(_hx_tmp,( (::String)(::little::tools::Conversion_obj::toHaxeValue(params->__get(1).StaticCast<  ::little::interpreter::InterpTokens >())) ));
            		}
            		HX_END_LOCAL_FUNC1(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_36) HXARGC(1)
            		 ::little::interpreter::InterpTokens _hx_run(::Array< ::Dynamic> params){
            			HX_GC_STACKFRAME(&_hx_pos_0b0d584b35e606f8_214_addTypes)
HXLINE( 215)			 ::Dynamic arrayRef = ::little::tools::Conversion_obj::toHaxeValue(params->__get(1).StaticCast<  ::little::interpreter::InterpTokens >())->__Field(HX_("parameter",a9,35,b0,48),::hx::paccDynamic)(0);
HXLINE( 216)			int arrayPointer = ::little::interpreter::memory::_MemoryPointer::MemoryPointer_Impl__obj::fromInt(( (int)( ::Dynamic(arrayRef->__Field(HX_("get",96,80,4e,00),::hx::paccDynamic)(HX_("__p",50,69,48,00))->__Field(HX_("value",71,7f,b8,31),::hx::paccDynamic))->__Field(HX_("parameter",a9,35,b0,48),::hx::paccDynamic)(0)) ));
HXLINE( 217)			int arrayType = ( (int)( ::Dynamic(arrayRef->__Field(HX_("get",96,80,4e,00),::hx::paccDynamic)(HX_("__t",54,69,48,00))->__Field(HX_("value",71,7f,b8,31),::hx::paccDynamic))->__Field(HX_("parameter",a9,35,b0,48),::hx::paccDynamic)(0)) );
HXLINE( 218)			bool _hx_tmp;
HXDLIN( 218)			bool _hx_tmp1;
HXDLIN( 218)			if ((::little::interpreter::memory::_MemoryPointer::MemoryPointer_Impl__obj::fromInt(arrayType) == ::little::Little_obj::memory->constants->INT)) {
HXLINE( 218)				_hx_tmp1 = (::little::interpreter::memory::_MemoryPointer::MemoryPointer_Impl__obj::fromInt(arrayType) != ::little::Little_obj::memory->constants->FLOAT);
            			}
            			else {
HXLINE( 218)				_hx_tmp1 = true;
            			}
HXDLIN( 218)			if (!(_hx_tmp1)) {
HXLINE( 218)				_hx_tmp = (::little::interpreter::memory::_MemoryPointer::MemoryPointer_Impl__obj::fromInt(arrayType) != ::little::Little_obj::memory->constants->BOOL);
            			}
            			else {
HXLINE( 218)				_hx_tmp = true;
            			}
HXDLIN( 218)			if (_hx_tmp) {
HXLINE( 219)				::little::Little_obj::runtime->throwError(::little::interpreter::InterpTokens_obj::ErrorMessage(((((((((HX_("",00,00,00,00) + ::little::Little_obj::keywords->STDLIB__MEMORY_write) + HX_(" only supports  ",98,6c,a4,15)) + ::little::Little_obj::keywords->TYPE_INT) + HX_(", ",74,26,00,00)) + ::little::Little_obj::keywords->TYPE_FLOAT) + HX_(" or ",7d,71,7b,15)) + ::little::Little_obj::keywords->TYPE_BOOLEAN) + HX_(" arrays, as they're the only ones able to meaningfully represent bytes.",33,d3,f0,13))),null());
            			}
HXLINE( 221)			::Array< ::Dynamic> array = ::little::Little_obj::memory->storage->readArray(arrayPointer);
HXLINE( 222)			int length = array->length;
HXDLIN( 222)			 ::haxe::io::Bytes this1 = ::haxe::io::Bytes_obj::alloc(length);
HXDLIN( 222)			this1->fill(0,length,0);
HXDLIN( 222)			 ::haxe::io::Bytes byteArray = this1;
HXLINE( 223)			{
HXLINE( 223)				int _g = 0;
HXDLIN( 223)				int _g1 = array->length;
HXDLIN( 223)				while((_g < _g1)){
HXLINE( 223)					_g = (_g + 1);
HXDLIN( 223)					int i = (_g - 1);
HXDLIN( 223)					byteArray->b[i] = array->__get(i).StaticCast<  ::haxe::io::Bytes >()->b->__get(i);
            				}
            			}
HXLINE( 224)			 ::little::interpreter::memory::Storage _hx_tmp2 = ::little::Little_obj::memory->storage;
HXDLIN( 224)			_hx_tmp2->setBytes(( (int)(::little::tools::Conversion_obj::toHaxeValue(params->__get(0).StaticCast<  ::little::interpreter::InterpTokens >())) ),byteArray);
HXLINE( 225)			return ::little::interpreter::InterpTokens_obj::NullValue_dyn();
            		}
            		HX_END_LOCAL_FUNC1(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_37) HXARGC(0)
            		 ::little::interpreter::InterpTokens _hx_run(){
            			HX_GC_STACKFRAME(&_hx_pos_0b0d584b35e606f8_228_addTypes)
HXLINE( 228)			return ::little::tools::Conversion_obj::toLittleValue(::little::Little_obj::memory->get_currentMemorySize());
            		}
            		HX_END_LOCAL_FUNC0(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_38) HXARGC(0)
            		 ::little::interpreter::InterpTokens _hx_run(){
            			HX_GC_STACKFRAME(&_hx_pos_0b0d584b35e606f8_231_addTypes)
HXLINE( 231)			return ::little::tools::Conversion_obj::toLittleValue(::little::Little_obj::memory->maxMemorySize);
            		}
            		HX_END_LOCAL_FUNC0(return)

            	HX_GC_STACKFRAME(&_hx_pos_0b0d584b35e606f8_36_addTypes)
HXLINE(  38)		 ::little::tools::Plugins _hx_tmp = ::little::Little_obj::plugin;
HXDLIN(  38)		::String _hx_tmp1 = ::little::Little_obj::keywords->TYPE_FUNCTION;
HXDLIN(  38)		_hx_tmp->registerType(_hx_tmp1, ::haxe::ds::StringMap_obj::__alloc( HX_CTX ));
HXLINE(  39)		 ::little::tools::Plugins _hx_tmp2 = ::little::Little_obj::plugin;
HXDLIN(  39)		::String _hx_tmp3 = ::little::Little_obj::keywords->TYPE_CONDITION;
HXDLIN(  39)		_hx_tmp2->registerType(_hx_tmp3, ::haxe::ds::StringMap_obj::__alloc( HX_CTX ));
HXLINE(  40)		 ::little::tools::Plugins _hx_tmp4 = ::little::Little_obj::plugin;
HXDLIN(  40)		::String _hx_tmp5 = ::little::Little_obj::keywords->TYPE_INT;
HXDLIN(  40)		_hx_tmp4->registerType(_hx_tmp5, ::haxe::ds::StringMap_obj::__alloc( HX_CTX ));
HXLINE(  41)		 ::little::tools::Plugins _hx_tmp6 = ::little::Little_obj::plugin;
HXDLIN(  41)		::String _hx_tmp7 = ::little::Little_obj::keywords->TYPE_FLOAT;
HXDLIN(  41)		_hx_tmp6->registerType(_hx_tmp7, ::haxe::ds::StringMap_obj::__alloc( HX_CTX ));
HXLINE(  42)		 ::little::tools::Plugins _hx_tmp8 = ::little::Little_obj::plugin;
HXDLIN(  42)		::String _hx_tmp9 = ::little::Little_obj::keywords->TYPE_STRING;
HXDLIN(  42)		_hx_tmp8->registerType(_hx_tmp9, ::haxe::ds::StringMap_obj::__alloc( HX_CTX ));
HXLINE(  43)		 ::little::tools::Plugins _hx_tmp10 = ::little::Little_obj::plugin;
HXDLIN(  43)		::String _hx_tmp11 = ::little::Little_obj::keywords->TYPE_SIGN;
HXDLIN(  43)		_hx_tmp10->registerType(_hx_tmp11, ::haxe::ds::StringMap_obj::__alloc( HX_CTX ));
HXLINE(  45)		 ::little::tools::Plugins _hx_tmp12 = ::little::Little_obj::plugin;
HXDLIN(  45)		::String _hx_tmp13 = ::little::Little_obj::keywords->TYPE_MODULE;
HXDLIN(  45)		 ::haxe::ds::StringMap _g =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
HXDLIN(  45)		_g->set((((((HX_("public ",57,13,1d,ae) + ::little::Little_obj::keywords->TYPE_STRING) + HX_(" ",20,00,00,00)) + ::little::Little_obj::keywords->TYPE_CAST_FUNCTION_PREFIX) + ::little::Little_obj::keywords->TYPE_STRING) + HX_(" ()",21,6b,18,00)), ::Dynamic(new _hx_Closure_0()));
HXDLIN(  45)		_hx_tmp12->registerType(_hx_tmp13,_g);
HXLINE(  58)		 ::little::tools::Plugins _hx_tmp14 = ::little::Little_obj::plugin;
HXDLIN(  58)		::String _hx_tmp15 = ::little::Little_obj::keywords->TYPE_INT;
HXDLIN(  58)		 ::haxe::ds::StringMap _g1 =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
HXDLIN(  58)		_g1->set((((((HX_("public ",57,13,1d,ae) + ::little::Little_obj::keywords->TYPE_STRING) + HX_(" ",20,00,00,00)) + ::little::Little_obj::keywords->TYPE_CAST_FUNCTION_PREFIX) + ::little::Little_obj::keywords->TYPE_STRING) + HX_(" ()",21,6b,18,00)), ::Dynamic(new _hx_Closure_1()));
HXDLIN(  58)		_g1->set((((((HX_("public ",57,13,1d,ae) + ::little::Little_obj::keywords->TYPE_FLOAT) + HX_(" ",20,00,00,00)) + ::little::Little_obj::keywords->TYPE_CAST_FUNCTION_PREFIX) + ::little::Little_obj::keywords->TYPE_FLOAT) + HX_(" ()",21,6b,18,00)), ::Dynamic(new _hx_Closure_2()));
HXDLIN(  58)		_g1->set((((((HX_("public ",57,13,1d,ae) + ::little::Little_obj::keywords->TYPE_BOOLEAN) + HX_(" ",20,00,00,00)) + ::little::Little_obj::keywords->TYPE_CAST_FUNCTION_PREFIX) + ::little::Little_obj::keywords->TYPE_BOOLEAN) + HX_(" ()",21,6b,18,00)), ::Dynamic(new _hx_Closure_3()));
HXDLIN(  58)		_hx_tmp14->registerType(_hx_tmp15,_g1);
HXLINE(  70)		 ::little::tools::Plugins _hx_tmp16 = ::little::Little_obj::plugin;
HXDLIN(  70)		::String _hx_tmp17 = ::little::Little_obj::keywords->TYPE_FLOAT;
HXDLIN(  70)		 ::haxe::ds::StringMap _g2 =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
HXDLIN(  70)		_g2->set((((((HX_("public ",57,13,1d,ae) + ::little::Little_obj::keywords->TYPE_STRING) + HX_(" ",20,00,00,00)) + ::little::Little_obj::keywords->TYPE_CAST_FUNCTION_PREFIX) + ::little::Little_obj::keywords->TYPE_STRING) + HX_(" ()",21,6b,18,00)), ::Dynamic(new _hx_Closure_4()));
HXDLIN(  70)		_g2->set((((((HX_("public ",57,13,1d,ae) + ::little::Little_obj::keywords->TYPE_INT) + HX_(" ",20,00,00,00)) + ::little::Little_obj::keywords->TYPE_CAST_FUNCTION_PREFIX) + ::little::Little_obj::keywords->TYPE_INT) + HX_(" ()",21,6b,18,00)), ::Dynamic(new _hx_Closure_5()));
HXDLIN(  70)		_g2->set((((((HX_("public ",57,13,1d,ae) + ::little::Little_obj::keywords->TYPE_BOOLEAN) + HX_(" ",20,00,00,00)) + ::little::Little_obj::keywords->TYPE_CAST_FUNCTION_PREFIX) + ::little::Little_obj::keywords->TYPE_BOOLEAN) + HX_(" ()",21,6b,18,00)), ::Dynamic(new _hx_Closure_6()));
HXDLIN(  70)		_g2->set(((((HX_("public ",57,13,1d,ae) + ::little::Little_obj::keywords->TYPE_BOOLEAN) + HX_(" ",20,00,00,00)) + ::little::Little_obj::keywords->STDLIB__FLOAT_isWhole) + HX_(" ()",21,6b,18,00)), ::Dynamic(new _hx_Closure_7()));
HXDLIN(  70)		_hx_tmp16->registerType(_hx_tmp17,_g2);
HXLINE(  85)		 ::little::tools::Plugins _hx_tmp18 = ::little::Little_obj::plugin;
HXDLIN(  85)		::String _hx_tmp19 = ::little::Little_obj::keywords->TYPE_STRING;
HXDLIN(  85)		 ::haxe::ds::StringMap _g3 =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
HXDLIN(  85)		_g3->set((((((HX_("public ",57,13,1d,ae) + ::little::Little_obj::keywords->TYPE_STRING) + HX_(" ",20,00,00,00)) + ::little::Little_obj::keywords->TYPE_CAST_FUNCTION_PREFIX) + ::little::Little_obj::keywords->TYPE_STRING) + HX_(" ()",21,6b,18,00)), ::Dynamic(new _hx_Closure_8()));
HXDLIN(  85)		_g3->set((((((HX_("public ",57,13,1d,ae) + ::little::Little_obj::keywords->TYPE_INT) + HX_(" ",20,00,00,00)) + ::little::Little_obj::keywords->TYPE_CAST_FUNCTION_PREFIX) + ::little::Little_obj::keywords->TYPE_INT) + HX_(" ()",21,6b,18,00)), ::Dynamic(new _hx_Closure_9()));
HXDLIN(  85)		_g3->set((((((HX_("public ",57,13,1d,ae) + ::little::Little_obj::keywords->TYPE_FLOAT) + HX_(" ",20,00,00,00)) + ::little::Little_obj::keywords->TYPE_CAST_FUNCTION_PREFIX) + ::little::Little_obj::keywords->TYPE_FLOAT) + HX_(" ()",21,6b,18,00)), ::Dynamic(new _hx_Closure_10()));
HXDLIN(  85)		_g3->set((((((HX_("public ",57,13,1d,ae) + ::little::Little_obj::keywords->TYPE_SIGN) + HX_(" ",20,00,00,00)) + ::little::Little_obj::keywords->TYPE_CAST_FUNCTION_PREFIX) + ::little::Little_obj::keywords->TYPE_SIGN) + HX_(" ()",21,6b,18,00)), ::Dynamic(new _hx_Closure_11()));
HXDLIN(  85)		_g3->set((((((HX_("public ",57,13,1d,ae) + ::little::Little_obj::keywords->TYPE_BOOLEAN) + HX_(" ",20,00,00,00)) + ::little::Little_obj::keywords->TYPE_CAST_FUNCTION_PREFIX) + ::little::Little_obj::keywords->TYPE_BOOLEAN) + HX_(" ()",21,6b,18,00)), ::Dynamic(new _hx_Closure_12()));
HXDLIN(  85)		_g3->set((((HX_("public ",57,13,1d,ae) + ::little::Little_obj::keywords->TYPE_INT) + HX_(" ",20,00,00,00)) + ::little::Little_obj::keywords->STDLIB__STRING_length), ::Dynamic(new _hx_Closure_13()));
HXDLIN(  85)		_g3->set(((((((HX_("public ",57,13,1d,ae) + ::little::Little_obj::keywords->TYPE_STRING) + HX_(" ",20,00,00,00)) + ::little::Little_obj::keywords->STDLIB__STRING_charAt) + HX_(" (define index as ",c3,3a,a5,8d)) + ::little::Little_obj::keywords->TYPE_INT) + HX_(")",29,00,00,00)), ::Dynamic(new _hx_Closure_14()));
HXDLIN(  85)		_g3->set(((((((((HX_("public ",57,13,1d,ae) + ::little::Little_obj::keywords->TYPE_STRING) + HX_(" ",20,00,00,00)) + ::little::Little_obj::keywords->STDLIB__STRING_substring) + HX_(" (define start as ",13,fc,8a,8a)) + ::little::Little_obj::keywords->TYPE_INT) + HX_(", define end as ",b8,5c,29,86)) + ::little::Little_obj::keywords->TYPE_INT) + HX_(" = -1)",c2,12,26,00)), ::Dynamic(new _hx_Closure_15()));
HXDLIN(  85)		_g3->set(((((HX_("public ",57,13,1d,ae) + ::little::Little_obj::keywords->TYPE_STRING) + HX_(" ",20,00,00,00)) + ::little::Little_obj::keywords->STDLIB__STRING_toLowerCase) + HX_(" ()",21,6b,18,00)), ::Dynamic(new _hx_Closure_16()));
HXDLIN(  85)		_g3->set(((((HX_("public ",57,13,1d,ae) + ::little::Little_obj::keywords->TYPE_STRING) + HX_(" ",20,00,00,00)) + ::little::Little_obj::keywords->STDLIB__STRING_toUpperCase) + HX_(" ()",21,6b,18,00)), ::Dynamic(new _hx_Closure_17()));
HXDLIN(  85)		_g3->set(((((((((HX_("public ",57,13,1d,ae) + ::little::Little_obj::keywords->TYPE_STRING) + HX_(" ",20,00,00,00)) + ::little::Little_obj::keywords->STDLIB__STRING_replace) + HX_(" (define search as ",f3,d0,b0,d0)) + ::little::Little_obj::keywords->TYPE_STRING) + HX_(", define replace as ",11,35,1b,2f)) + ::little::Little_obj::keywords->TYPE_STRING) + HX_(")",29,00,00,00)), ::Dynamic(new _hx_Closure_18()));
HXDLIN(  85)		_g3->set(((((HX_("public ",57,13,1d,ae) + ::little::Little_obj::keywords->TYPE_STRING) + HX_(" ",20,00,00,00)) + ::little::Little_obj::keywords->STDLIB__STRING_trim) + HX_(" ()",21,6b,18,00)), ::Dynamic(new _hx_Closure_19()));
HXDLIN(  85)		_g3->set(((((((HX_("public ",57,13,1d,ae) + ::little::Little_obj::keywords->TYPE_STRING) + HX_(" ",20,00,00,00)) + ::little::Little_obj::keywords->STDLIB__STRING_remove) + HX_(" (define search as ",f3,d0,b0,d0)) + ::little::Little_obj::keywords->TYPE_STRING) + HX_(")",29,00,00,00)), ::Dynamic(new _hx_Closure_20()));
HXDLIN(  85)		_g3->set(((((((HX_("public ",57,13,1d,ae) + ::little::Little_obj::keywords->TYPE_BOOLEAN) + HX_(" ",20,00,00,00)) + ::little::Little_obj::keywords->STDLIB__STRING_contains) + HX_(" (define search as ",f3,d0,b0,d0)) + ::little::Little_obj::keywords->TYPE_STRING) + HX_(")",29,00,00,00)), ::Dynamic(new _hx_Closure_21()));
HXDLIN(  85)		_g3->set(((((((HX_("public ",57,13,1d,ae) + ::little::Little_obj::keywords->TYPE_INT) + HX_(" ",20,00,00,00)) + ::little::Little_obj::keywords->STDLIB__STRING_indexOf) + HX_(" (define search as ",f3,d0,b0,d0)) + ::little::Little_obj::keywords->TYPE_STRING) + HX_(")",29,00,00,00)), ::Dynamic(new _hx_Closure_22()));
HXDLIN(  85)		_g3->set(((((((HX_("public ",57,13,1d,ae) + ::little::Little_obj::keywords->TYPE_INT) + HX_(" ",20,00,00,00)) + ::little::Little_obj::keywords->STDLIB__STRING_lastIndexOf) + HX_(" (define search as ",f3,d0,b0,d0)) + ::little::Little_obj::keywords->TYPE_STRING) + HX_(")",29,00,00,00)), ::Dynamic(new _hx_Closure_23()));
HXDLIN(  85)		_g3->set(((((((HX_("public ",57,13,1d,ae) + ::little::Little_obj::keywords->TYPE_BOOLEAN) + HX_(" ",20,00,00,00)) + ::little::Little_obj::keywords->STDLIB__STRING_startsWith) + HX_(" (define prefix as ",1d,68,69,d4)) + ::little::Little_obj::keywords->TYPE_STRING) + HX_(")",29,00,00,00)), ::Dynamic(new _hx_Closure_24()));
HXDLIN(  85)		_g3->set(((((((HX_("public ",57,13,1d,ae) + ::little::Little_obj::keywords->TYPE_BOOLEAN) + HX_(" ",20,00,00,00)) + ::little::Little_obj::keywords->STDLIB__STRING_endsWith) + HX_(" (define postfix as ",66,45,0c,75)) + ::little::Little_obj::keywords->TYPE_STRING) + HX_(")",29,00,00,00)), ::Dynamic(new _hx_Closure_25()));
HXDLIN(  85)		_g3->set(((((((HX_("static ",b2,3b,65,36) + ::little::Little_obj::keywords->TYPE_STRING) + HX_(" ",20,00,00,00)) + ::little::Little_obj::keywords->STDLIB__STRING_fromCharCode) + HX_(" (define code as ",f8,8f,ed,3a)) + ::little::Little_obj::keywords->TYPE_INT) + HX_(")",29,00,00,00)), ::Dynamic(new _hx_Closure_26()));
HXDLIN(  85)		_hx_tmp18->registerType(_hx_tmp19,_g3);
HXLINE( 155)		 ::little::tools::Plugins _hx_tmp20 = ::little::Little_obj::plugin;
HXDLIN( 155)		::String _hx_tmp21 = ::little::Little_obj::keywords->TYPE_OBJECT;
HXDLIN( 155)		 ::haxe::ds::StringMap _g4 =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
HXDLIN( 155)		_g4->set(((((HX_("static ",b2,3b,65,36) + ::little::Little_obj::keywords->TYPE_OBJECT) + HX_(" ",20,00,00,00)) + ::little::Little_obj::keywords->INSTANTIATE_FUNCTION_NAME) + HX_(" ()",21,6b,18,00)), ::Dynamic(new _hx_Closure_27()));
HXDLIN( 155)		_hx_tmp20->registerType(_hx_tmp21,_g4);
HXLINE( 161)		 ::little::tools::Plugins _hx_tmp22 = ::little::Little_obj::plugin;
HXDLIN( 161)		::String _hx_tmp23 = ::little::Little_obj::keywords->TYPE_ARRAY;
HXDLIN( 161)		 ::haxe::ds::StringMap _g5 =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
HXDLIN( 161)		_g5->set(((((((((HX_("static ",b2,3b,65,36) + ::little::Little_obj::keywords->TYPE_ARRAY) + HX_(" ",20,00,00,00)) + ::little::Little_obj::keywords->INSTANTIATE_FUNCTION_NAME) + HX_(" (define type as ",05,1c,66,73)) + ::little::Little_obj::keywords->TYPE_MODULE) + HX_(", define length as ",85,d9,59,22)) + ::little::Little_obj::keywords->TYPE_INT) + HX_(")",29,00,00,00)), ::Dynamic(new _hx_Closure_28()));
HXDLIN( 161)		_g5->set((((HX_("public ",57,13,1d,ae) + ::little::Little_obj::keywords->TYPE_INT) + HX_(" ",20,00,00,00)) + ::little::Little_obj::keywords->STDLIB__ARRAY_length), ::Dynamic(new _hx_Closure_29()));
HXDLIN( 161)		_g5->set((((HX_("public ",57,13,1d,ae) + ::little::Little_obj::keywords->TYPE_MODULE) + HX_(" ",20,00,00,00)) + ::little::Little_obj::keywords->STDLIB__ARRAY_elementType), ::Dynamic(new _hx_Closure_30()));
HXDLIN( 161)		_g5->set(((((((HX_("public ",57,13,1d,ae) + ::little::Little_obj::keywords->TYPE_DYNAMIC) + HX_(" ",20,00,00,00)) + ::little::Little_obj::keywords->STDLIB__ARRAY_get) + HX_(" (define index as ",c3,3a,a5,8d)) + ::little::Little_obj::keywords->TYPE_INT) + HX_(")",29,00,00,00)), ::Dynamic(new _hx_Closure_31()));
HXDLIN( 161)		_g5->set(((((((((HX_("public ",57,13,1d,ae) + ::little::Little_obj::keywords->TYPE_DYNAMIC) + HX_(" ",20,00,00,00)) + ::little::Little_obj::keywords->STDLIB__ARRAY_set) + HX_(" (define index as ",c3,3a,a5,8d)) + ::little::Little_obj::keywords->TYPE_INT) + HX_(", define value as ",0e,dd,2c,e3)) + ::little::Little_obj::keywords->TYPE_DYNAMIC) + HX_(")",29,00,00,00)), ::Dynamic(new _hx_Closure_32()));
HXDLIN( 161)		_hx_tmp22->registerType(_hx_tmp23,_g5);
HXLINE( 203)		 ::little::tools::Plugins _hx_tmp24 = ::little::Little_obj::plugin;
HXDLIN( 203)		::String _hx_tmp25 = ::little::Little_obj::keywords->TYPE_MEMORY;
HXDLIN( 203)		 ::haxe::ds::StringMap _g6 =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
HXDLIN( 203)		_g6->set(((((((HX_("static ",b2,3b,65,36) + ::little::Little_obj::keywords->TYPE_INT) + HX_(" ",20,00,00,00)) + ::little::Little_obj::keywords->STDLIB__MEMORY_allocate) + HX_(" (define amount as ",63,3b,3e,cf)) + ::little::Little_obj::keywords->TYPE_INT) + HX_(")",29,00,00,00)), ::Dynamic(new _hx_Closure_33()));
HXDLIN( 203)		_g6->set(((((((((HX_("static ",b2,3b,65,36) + ::little::Little_obj::keywords->TYPE_DYNAMIC) + HX_(" ",20,00,00,00)) + ::little::Little_obj::keywords->STDLIB__MEMORY_free) + HX_(" (define address as ",25,09,42,cb)) + ::little::Little_obj::keywords->TYPE_INT) + HX_(", define amount as ",77,b7,bb,78)) + ::little::Little_obj::keywords->TYPE_INT) + HX_(")",29,00,00,00)), ::Dynamic(new _hx_Closure_34()));
HXDLIN( 203)		_g6->set(((((((((HX_("static ",b2,3b,65,36) + ::little::Little_obj::keywords->TYPE_DYNAMIC) + HX_(" ",20,00,00,00)) + ::little::Little_obj::keywords->STDLIB__MEMORY_read) + HX_(" (define address as ",25,09,42,cb)) + ::little::Little_obj::keywords->TYPE_INT) + HX_(", define type as ",19,ab,52,5d)) + ::little::Little_obj::keywords->TYPE_MODULE) + HX_(")",29,00,00,00)), ::Dynamic(new _hx_Closure_35()));
HXDLIN( 203)		_g6->set(((((((((HX_("static ",b2,3b,65,36) + ::little::Little_obj::keywords->TYPE_DYNAMIC) + HX_(" ",20,00,00,00)) + ::little::Little_obj::keywords->STDLIB__MEMORY_write) + HX_(" (define address as ",25,09,42,cb)) + ::little::Little_obj::keywords->TYPE_INT) + HX_(", define bytes as ",08,6b,9d,bb)) + ::little::Little_obj::keywords->TYPE_ARRAY) + HX_(")",29,00,00,00)), ::Dynamic(new _hx_Closure_36()));
HXDLIN( 203)		_g6->set((((HX_("static ",b2,3b,65,36) + ::little::Little_obj::keywords->TYPE_INT) + HX_(" ",20,00,00,00)) + ::little::Little_obj::keywords->STDLIB__MEMORY_size), ::Dynamic(new _hx_Closure_37()));
HXDLIN( 203)		_g6->set((((HX_("static ",b2,3b,65,36) + ::little::Little_obj::keywords->TYPE_INT) + HX_(" ",20,00,00,00)) + ::little::Little_obj::keywords->STDLIB__MEMORY_maxSize), ::Dynamic(new _hx_Closure_38()));
HXDLIN( 203)		_hx_tmp24->registerType(_hx_tmp25,_g6);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(PrepareRun_obj,addTypes,(void))

void PrepareRun_obj::addFunctions(){
            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_0) HXARGC(1)
            		 ::little::interpreter::InterpTokens _hx_run(::Array< ::Dynamic> params){
            			HX_STACKFRAME(&_hx_pos_0b0d584b35e606f8_241_addFunctions)
HXLINE( 242)			 ::little::interpreter::InterpTokens eval = params->__get(0)->__Field(HX_("objectValue",32,9c,e7,a0),::hx::paccDynamic);
HXLINE( 243)			::haxe::Log_obj::trace(eval, ::Dynamic(::hx::Anon_obj::Create(5)
            				->setFixed(0,HX_("className",a3,92,3d,dc),HX_("little.tools.PrepareRun",0f,c6,2c,c6))
            				->setFixed(1,HX_("customParams",d7,51,18,ed),::cpp::VirtualArray_obj::__new(1)->init(0,params->__get(0)))
            				->setFixed(2,HX_("methodName",cc,19,0f,12),HX_("addFunctions",fa,2b,57,b3))
            				->setFixed(3,HX_("fileName",e7,5a,43,62),HX_("src/little/tools/PrepareRun.hx",98,da,1e,b3))
            				->setFixed(4,HX_("lineNumber",dd,81,22,76),243)));
HXLINE( 244)			 ::little::interpreter::Runtime _hx_tmp = ::little::Little_obj::runtime;
HXDLIN( 244)			::String _hx_tmp1;
HXDLIN( 244)			::Array< ::Dynamic> _this = ::Array_obj< ::Dynamic>::__new(1)->init(0,::little::tools::InterpTokensSimple_obj::OBJECT_dyn())->copy();
HXDLIN( 244)			::Array< ::String > result = ::Array_obj< ::String >::__new(_this->length);
HXDLIN( 244)			{
HXLINE( 244)				int _g = 0;
HXDLIN( 244)				int _g1 = _this->length;
HXDLIN( 244)				while((_g < _g1)){
HXLINE( 244)					_g = (_g + 1);
HXDLIN( 244)					int i = (_g - 1);
HXDLIN( 244)					{
HXLINE( 244)						::String inValue = ::little::tools::TextTools_obj::remove(::Type_obj::enumConstructor(_hx_array_unsafe_get(_this,i)),HX_("_",5f,00,00,00)).toLowerCase();
HXDLIN( 244)						result->__unsafe_set(i,inValue);
            					}
            				}
            			}
HXDLIN( 244)			if (result->contains(::Type_obj::enumConstructor(eval).toLowerCase())) {
HXLINE( 244)				::Array< ::String > _this1 = ::little::tools::PrettyPrinter_obj::printInterpreterAst(::Array_obj< ::Dynamic>::__new(1)->init(0,eval),null()).split(HX_("\n",0a,00,00,00))->slice(1,null());
HXDLIN( 244)				::Array< ::String > result1 = ::Array_obj< ::String >::__new(_this1->length);
HXDLIN( 244)				{
HXLINE( 244)					int _g2 = 0;
HXDLIN( 244)					int _g3 = _this1->length;
HXDLIN( 244)					while((_g2 < _g3)){
HXLINE( 244)						_g2 = (_g2 + 1);
HXDLIN( 244)						int i1 = (_g2 - 1);
HXDLIN( 244)						{
HXLINE( 244)							::String inValue1 = ( (::String)(_hx_array_unsafe_get(_this1,i1)) ).substring(6,null());
HXDLIN( 244)							result1->__unsafe_set(i1,inValue1);
            						}
            					}
            				}
HXDLIN( 244)				_hx_tmp1 = result1->join(HX_("\n",0a,00,00,00));
            			}
            			else {
HXLINE( 244)				_hx_tmp1 = ::little::tools::PrettyPrinter_obj::stringifyInterpreter(null(),eval);
            			}
HXDLIN( 244)			_hx_tmp->_hx___print(_hx_tmp1,eval);
HXLINE( 245)			return ::little::interpreter::InterpTokens_obj::NullValue_dyn();
            		}
            		HX_END_LOCAL_FUNC1(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_1) HXARGC(1)
            		 ::little::interpreter::InterpTokens _hx_run(::Array< ::Dynamic> params){
            			HX_STACKFRAME(&_hx_pos_0b0d584b35e606f8_247_addFunctions)
HXLINE( 248)			::little::Little_obj::runtime->throwError(params->__get(0)->__Field(HX_("objectValue",32,9c,e7,a0),::hx::paccDynamic),null());
HXLINE( 249)			return ::little::interpreter::InterpTokens_obj::NullValue_dyn();
            		}
            		HX_END_LOCAL_FUNC1(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_2) HXARGC(1)
            		 ::little::interpreter::InterpTokens _hx_run(::Array< ::Dynamic> params){
            			HX_STACKFRAME(&_hx_pos_0b0d584b35e606f8_252_addFunctions)
HXLINE( 252)			return ::little::tools::Extensions_obj::asTokenPath(( (::String)(::little::tools::Conversion_obj::toHaxeValue(params->__get(0)->__Field(HX_("objectValue",32,9c,e7,a0),::hx::paccDynamic))) ));
            		}
            		HX_END_LOCAL_FUNC1(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_3) HXARGC(1)
            		 ::little::interpreter::InterpTokens _hx_run(::Array< ::Dynamic> params){
            			HX_STACKFRAME(&_hx_pos_0b0d584b35e606f8_254_addFunctions)
HXLINE( 255)			 ::Dynamic array = ::little::parser::Parser_obj::parse;
HXDLIN( 255)			return ::little::interpreter::Interpreter_obj::run(::little::interpreter::Interpreter_obj::convert(( (::Array< ::Dynamic>)(array(::little::lexer::Lexer_obj::lex(( (::String)(::little::tools::Conversion_obj::toHaxeValue(params->__get(0)->__Field(HX_("objectValue",32,9c,e7,a0),::hx::paccDynamic))) )))) )),null());
            		}
            		HX_END_LOCAL_FUNC1(return)

            	HX_STACKFRAME(&_hx_pos_0b0d584b35e606f8_240_addFunctions)
HXLINE( 241)		::little::Little_obj::plugin->registerFunction(::little::Little_obj::keywords->PRINT_FUNCTION_NAME,null(),::Array_obj< ::Dynamic>::__new(1)->init(0,::little::interpreter::InterpTokens_obj::VariableDeclaration(::little::interpreter::InterpTokens_obj::Identifier(HX_("item",13,c5,bf,45)),null(),null())), ::Dynamic(new _hx_Closure_0()),::little::Little_obj::keywords->TYPE_DYNAMIC);
HXLINE( 247)		::little::Little_obj::plugin->registerFunction(::little::Little_obj::keywords->RAISE_ERROR_FUNCTION_NAME,null(),::Array_obj< ::Dynamic>::__new(1)->init(0,::little::interpreter::InterpTokens_obj::VariableDeclaration(::little::interpreter::InterpTokens_obj::Identifier(HX_("message",c7,35,11,9a)),null(),null())), ::Dynamic(new _hx_Closure_1()),::little::Little_obj::keywords->TYPE_DYNAMIC);
HXLINE( 251)		 ::little::tools::Plugins _hx_tmp = ::little::Little_obj::plugin;
HXDLIN( 251)		::String _hx_tmp1 = ::little::Little_obj::keywords->READ_FUNCTION_NAME;
HXDLIN( 251)		 ::little::interpreter::InterpTokens _hx_tmp2 = ::little::interpreter::InterpTokens_obj::VariableDeclaration(::little::interpreter::InterpTokens_obj::Identifier(HX_("identifier",69,c8,2c,ce)),::little::tools::Extensions_obj::asTokenPath(::little::Little_obj::keywords->TYPE_STRING),null());
HXDLIN( 251)		_hx_tmp->registerFunction(_hx_tmp1,null(),::Array_obj< ::Dynamic>::__new(1)->init(0,_hx_tmp2), ::Dynamic(new _hx_Closure_2()),::little::Little_obj::keywords->TYPE_DYNAMIC);
HXLINE( 254)		 ::little::tools::Plugins _hx_tmp3 = ::little::Little_obj::plugin;
HXDLIN( 254)		::String _hx_tmp4 = ::little::Little_obj::keywords->RUN_CODE_FUNCTION_NAME;
HXDLIN( 254)		 ::little::interpreter::InterpTokens _hx_tmp5 = ::little::interpreter::InterpTokens_obj::VariableDeclaration(::little::interpreter::InterpTokens_obj::Identifier(HX_("code",2d,b1,c4,41)),::little::tools::Extensions_obj::asTokenPath(::little::Little_obj::keywords->TYPE_STRING),null());
HXDLIN( 254)		_hx_tmp3->registerFunction(_hx_tmp4,null(),::Array_obj< ::Dynamic>::__new(1)->init(0,_hx_tmp5), ::Dynamic(new _hx_Closure_3()),::little::Little_obj::keywords->TYPE_DYNAMIC);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(PrepareRun_obj,addFunctions,(void))

void PrepareRun_obj::addProps(){
            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_0) HXARGC(2)
            		 ::little::interpreter::InterpTokens _hx_run( ::little::interpreter::InterpTokens value,int address){
            			HX_STACKFRAME(&_hx_pos_0b0d584b35e606f8_264_addProps)
HXLINE( 265)			 ::little::interpreter::memory::Memory _hx_tmp = ::little::Little_obj::memory;
HXDLIN( 265)			return ::little::interpreter::InterpTokens_obj::ClassPointer( ::Dynamic(_hx_tmp->getTypeInformation(::little::tools::Extensions_obj::type(value))->__Field(HX_("pointer",bd,c0,21,51),::hx::paccDynamic)));
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_1) HXARGC(2)
            		 ::little::interpreter::InterpTokens _hx_run( ::little::interpreter::InterpTokens value,int address){
            			HX_STACKFRAME(&_hx_pos_0b0d584b35e606f8_270_addProps)
HXLINE( 270)			return ::little::interpreter::InterpTokens_obj::Number(address);
            		}
            		HX_END_LOCAL_FUNC2(return)

            	HX_STACKFRAME(&_hx_pos_0b0d584b35e606f8_262_addProps)
HXLINE( 263)		::little::Little_obj::plugin->registerInstanceVariable(::little::Little_obj::keywords->OBJECT_TYPE_PROPERTY_NAME,::little::Little_obj::keywords->TYPE_STRING,::little::Little_obj::keywords->TYPE_DYNAMIC,(HX_("The name of this value's type, as a ",dd,62,5c,8d) + ::little::Little_obj::keywords->TYPE_STRING),null(), ::Dynamic(new _hx_Closure_0()));
HXLINE( 268)		::little::Little_obj::plugin->registerInstanceVariable(::little::Little_obj::keywords->OBJECT_ADDRESS_PROPERTY_NAME,::little::Little_obj::keywords->TYPE_INT,::little::Little_obj::keywords->TYPE_DYNAMIC,HX_("The address of this value",1d,86,a6,f0),null(), ::Dynamic(new _hx_Closure_1()));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(PrepareRun_obj,addProps,(void))

void PrepareRun_obj::addSigns(){
            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_0) HXARGC(1)
            		 ::little::interpreter::InterpTokens _hx_run( ::little::interpreter::InterpTokens rhs){
            			HX_STACKFRAME(&_hx_pos_0b0d584b35e606f8_288_addSigns)
HXLINE( 289)			int r = ( (int)(::little::tools::Conversion_obj::toHaxeValue(rhs)) );
HXLINE( 290)			if (::Std_obj::isOfType(r,::hx::ClassOf< int >())) {
HXLINE( 291)				return ::little::interpreter::InterpTokens_obj::Number(r);
            			}
HXLINE( 292)			return ::little::interpreter::InterpTokens_obj::Decimal(r);
            		}
            		HX_END_LOCAL_FUNC1(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_1) HXARGC(1)
            		 ::little::interpreter::InterpTokens _hx_run( ::little::interpreter::InterpTokens rhs){
            			HX_STACKFRAME(&_hx_pos_0b0d584b35e606f8_300_addSigns)
HXLINE( 301)			int r = ( (int)(::little::tools::Conversion_obj::toHaxeValue(rhs)) );
HXLINE( 302)			if (::Std_obj::isOfType(r,::hx::ClassOf< int >())) {
HXLINE( 303)				return ::little::interpreter::InterpTokens_obj::Number(-(r));
            			}
HXLINE( 304)			return ::little::interpreter::InterpTokens_obj::Decimal(-(r));
            		}
            		HX_END_LOCAL_FUNC1(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_2) HXARGC(1)
            		 ::little::interpreter::InterpTokens _hx_run( ::little::interpreter::InterpTokens rhs){
            			HX_STACKFRAME(&_hx_pos_0b0d584b35e606f8_312_addSigns)
HXLINE( 313)			Float r = ( (Float)(::little::tools::Conversion_obj::toHaxeValue(rhs)) );
HXLINE( 315)			return ::little::interpreter::InterpTokens_obj::Decimal(::Math_obj::sqrt(r));
            		}
            		HX_END_LOCAL_FUNC1(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_3) HXARGC(1)
            		 ::little::interpreter::InterpTokens _hx_run( ::little::interpreter::InterpTokens rhs){
            			HX_STACKFRAME(&_hx_pos_0b0d584b35e606f8_323_addSigns)
HXLINE( 324)			bool r = ( (bool)(::little::tools::Conversion_obj::toHaxeValue(rhs)) );
HXLINE( 326)			if (r) {
HXLINE( 326)				return ::little::interpreter::InterpTokens_obj::FalseValue_dyn();
            			}
            			else {
HXLINE( 326)				return ::little::interpreter::InterpTokens_obj::TrueValue_dyn();
            			}
HXDLIN( 326)			return null();
            		}
            		HX_END_LOCAL_FUNC1(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_4) HXARGC(1)
            		 ::little::interpreter::InterpTokens _hx_run( ::little::interpreter::InterpTokens lhs){
            			HX_STACKFRAME(&_hx_pos_0b0d584b35e606f8_338_addSigns)
HXLINE( 339)			int l = ( (int)(::little::tools::Conversion_obj::toHaxeValue(lhs)) );
HXLINE( 340)			Float shifted = (::Math_obj::pow(( (Float)(10) ),( (Float)(10) )) * ( (Float)(l) ));
HXLINE( 341)			if ((shifted != ::Math_obj::floor(shifted))) {
HXLINE( 341)				return ::little::interpreter::InterpTokens_obj::Number(::Math_obj::round(::vision::tools::MathTools_obj::factorial(( (Float)(l) ))));
            			}
HXLINE( 342)			return ::little::interpreter::InterpTokens_obj::Decimal(::vision::tools::MathTools_obj::factorial(( (Float)(l) )));
            		}
            		HX_END_LOCAL_FUNC1(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_5) HXARGC(2)
            		 ::little::interpreter::InterpTokens _hx_run( ::little::interpreter::InterpTokens lhs, ::little::interpreter::InterpTokens rhs){
            			HX_STACKFRAME(&_hx_pos_0b0d584b35e606f8_355_addSigns)
HXLINE( 356)			lhs = ::little::interpreter::Interpreter_obj::evaluate(lhs,null());
HXDLIN( 356)			rhs = ::little::interpreter::Interpreter_obj::evaluate(rhs,null());
HXLINE( 357)			 ::Dynamic l = ::little::tools::Conversion_obj::toHaxeValue(lhs);
HXDLIN( 357)			 ::Dynamic r = ::little::tools::Conversion_obj::toHaxeValue(rhs);
HXLINE( 359)			bool _hx_tmp;
HXDLIN( 359)			if (!(::Std_obj::isOfType(l,::hx::ClassOf< ::String >()))) {
HXLINE( 359)				_hx_tmp = ::Std_obj::isOfType(r,::hx::ClassOf< ::String >());
            			}
            			else {
HXLINE( 359)				_hx_tmp = true;
            			}
HXDLIN( 359)			if (_hx_tmp) {
HXLINE( 360)				if (::hx::IsNull( l )) {
HXLINE( 360)					l = ::little::Little_obj::keywords->NULL_VALUE;
            				}
HXDLIN( 360)				if (::hx::IsNull( r )) {
HXLINE( 360)					r = ::little::Little_obj::keywords->NULL_VALUE;
            				}
HXLINE( 361)				::String _hx_tmp1 = (HX_("",00,00,00,00) + ::Std_obj::string(l));
HXDLIN( 361)				return ::little::interpreter::InterpTokens_obj::Characters((_hx_tmp1 + ::Std_obj::string(r)));
            			}
HXLINE( 363)			bool _hx_tmp2;
HXDLIN( 363)			if (::Std_obj::isOfType(l,::hx::ClassOf< int >())) {
HXLINE( 363)				_hx_tmp2 = ::Std_obj::isOfType(r,::hx::ClassOf< int >());
            			}
            			else {
HXLINE( 363)				_hx_tmp2 = false;
            			}
HXDLIN( 363)			if (_hx_tmp2) {
HXLINE( 364)				return ::little::interpreter::InterpTokens_obj::Number((l + r));
            			}
HXLINE( 365)			return ::little::interpreter::InterpTokens_obj::Decimal((l + r));
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_6) HXARGC(2)
            		 ::little::interpreter::InterpTokens _hx_run( ::little::interpreter::InterpTokens lhs, ::little::interpreter::InterpTokens rhs){
            			HX_STACKFRAME(&_hx_pos_0b0d584b35e606f8_374_addSigns)
HXLINE( 375)			lhs = ::little::interpreter::Interpreter_obj::evaluate(lhs,null());
HXDLIN( 375)			rhs = ::little::interpreter::Interpreter_obj::evaluate(rhs,null());
HXLINE( 376)			 ::Dynamic l = ::little::tools::Conversion_obj::toHaxeValue(lhs);
HXDLIN( 376)			 ::Dynamic r = ::little::tools::Conversion_obj::toHaxeValue(rhs);
HXLINE( 378)			if (::Std_obj::isOfType(l,::hx::ClassOf< ::String >())) {
HXLINE( 379)				if (::hx::IsNull( l )) {
HXLINE( 379)					l = ::little::Little_obj::keywords->NULL_VALUE;
            				}
HXDLIN( 379)				if (::hx::IsNull( r )) {
HXLINE( 379)					r = ::little::Little_obj::keywords->NULL_VALUE;
            				}
HXLINE( 380)				return ::little::interpreter::InterpTokens_obj::Characters(::little::tools::TextTools_obj::replaceLast(( (::String)(l) ),( (::String)(r) ),HX_("",00,00,00,00)));
            			}
HXLINE( 382)			bool _hx_tmp;
HXDLIN( 382)			::String _hx_tmp1 = ::little::tools::Extensions_obj::type(lhs);
HXDLIN( 382)			if ((_hx_tmp1 == ::little::Little_obj::keywords->TYPE_INT)) {
HXLINE( 382)				::String _hx_tmp2 = ::little::tools::Extensions_obj::type(rhs);
HXDLIN( 382)				_hx_tmp = (_hx_tmp2 == ::little::Little_obj::keywords->TYPE_INT);
            			}
            			else {
HXLINE( 382)				_hx_tmp = false;
            			}
HXDLIN( 382)			if (_hx_tmp) {
HXLINE( 383)				return ::little::interpreter::InterpTokens_obj::Number((( (int)(l) ) - ( (int)(r) )));
            			}
HXLINE( 384)			return ::little::interpreter::InterpTokens_obj::Decimal((( (Float)(l) ) - ( (Float)(r) )));
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_7) HXARGC(2)
            		 ::little::interpreter::InterpTokens _hx_run( ::little::interpreter::InterpTokens lhs, ::little::interpreter::InterpTokens rhs){
            			HX_STACKFRAME(&_hx_pos_0b0d584b35e606f8_393_addSigns)
HXLINE( 394)			lhs = ::little::interpreter::Interpreter_obj::evaluate(lhs,null());
HXDLIN( 394)			rhs = ::little::interpreter::Interpreter_obj::evaluate(rhs,null());
HXLINE( 395)			 ::Dynamic l = ::little::tools::Conversion_obj::toHaxeValue(lhs);
HXDLIN( 395)			 ::Dynamic r = ::little::tools::Conversion_obj::toHaxeValue(rhs);
HXLINE( 397)			if (::Std_obj::isOfType(l,::hx::ClassOf< ::String >())) {
HXLINE( 398)				if (::hx::IsNull( l )) {
HXLINE( 398)					l = ::little::Little_obj::keywords->NULL_VALUE;
            				}
HXLINE( 399)				return ::little::interpreter::InterpTokens_obj::Characters(::little::tools::TextTools_obj::multiply(( (::String)(l) ),( (int)(r) )));
            			}
HXLINE( 401)			bool _hx_tmp;
HXDLIN( 401)			::String _hx_tmp1 = ::little::tools::Extensions_obj::type(lhs);
HXDLIN( 401)			if ((_hx_tmp1 == ::little::Little_obj::keywords->TYPE_INT)) {
HXLINE( 401)				::String _hx_tmp2 = ::little::tools::Extensions_obj::type(rhs);
HXDLIN( 401)				_hx_tmp = (_hx_tmp2 == ::little::Little_obj::keywords->TYPE_INT);
            			}
            			else {
HXLINE( 401)				_hx_tmp = false;
            			}
HXDLIN( 401)			if (_hx_tmp) {
HXLINE( 402)				return ::little::interpreter::InterpTokens_obj::Number((( (int)(l) ) * ( (int)(r) )));
            			}
HXLINE( 403)			return ::little::interpreter::InterpTokens_obj::Decimal((( (Float)(l) ) * ( (Float)(r) )));
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_8) HXARGC(2)
            		 ::little::interpreter::InterpTokens _hx_run( ::little::interpreter::InterpTokens lhs, ::little::interpreter::InterpTokens rhs){
            			HX_STACKFRAME(&_hx_pos_0b0d584b35e606f8_411_addSigns)
HXLINE( 412)			Float l = ( (Float)(::little::tools::Conversion_obj::toHaxeValue(lhs)) );
HXDLIN( 412)			Float r = ( (Float)(::little::tools::Conversion_obj::toHaxeValue(rhs)) );
HXLINE( 414)			::haxe::Log_obj::trace(l, ::Dynamic(::hx::Anon_obj::Create(5)
            				->setFixed(0,HX_("className",a3,92,3d,dc),HX_("little.tools.PrepareRun",0f,c6,2c,c6))
            				->setFixed(1,HX_("customParams",d7,51,18,ed),::cpp::VirtualArray_obj::__new(2)->init(0,r)->init(1,::little::interpreter::InterpTokens_obj::Decimal((l / r))))
            				->setFixed(2,HX_("methodName",cc,19,0f,12),HX_("addSigns",b5,cb,27,f6))
            				->setFixed(3,HX_("fileName",e7,5a,43,62),HX_("src/little/tools/PrepareRun.hx",98,da,1e,b3))
            				->setFixed(4,HX_("lineNumber",dd,81,22,76),414)));
HXLINE( 415)			if ((r == 0)) {
HXLINE( 416)				return ::little::Little_obj::runtime->throwError(::little::interpreter::InterpTokens_obj::ErrorMessage(HX_("Cannot divide by 0",31,9f,6f,7a)),null());
            			}
HXLINE( 417)			return ::little::interpreter::InterpTokens_obj::Decimal((l / r));
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_9) HXARGC(2)
            		 ::little::interpreter::InterpTokens _hx_run( ::little::interpreter::InterpTokens lhs, ::little::interpreter::InterpTokens rhs){
            			HX_STACKFRAME(&_hx_pos_0b0d584b35e606f8_425_addSigns)
HXLINE( 426)			lhs = ::little::interpreter::Interpreter_obj::evaluate(lhs,null());
HXDLIN( 426)			rhs = ::little::interpreter::Interpreter_obj::evaluate(rhs,null());
HXLINE( 427)			Float l = ( (Float)(::little::tools::Conversion_obj::toHaxeValue(lhs)) );
HXDLIN( 427)			Float r = ( (Float)(::little::tools::Conversion_obj::toHaxeValue(rhs)) );
HXLINE( 429)			bool _hx_tmp;
HXDLIN( 429)			::String _hx_tmp1 = ::little::tools::Extensions_obj::type(lhs);
HXDLIN( 429)			if ((_hx_tmp1 == ::little::Little_obj::keywords->TYPE_INT)) {
HXLINE( 429)				::String _hx_tmp2 = ::little::tools::Extensions_obj::type(rhs);
HXDLIN( 429)				_hx_tmp = (_hx_tmp2 == ::little::Little_obj::keywords->TYPE_INT);
            			}
            			else {
HXLINE( 429)				_hx_tmp = false;
            			}
HXDLIN( 429)			if (_hx_tmp) {
HXLINE( 430)				return ::little::interpreter::InterpTokens_obj::Number(::Std_obj::_hx_int(::Math_obj::pow(l,r)));
            			}
HXLINE( 431)			return ::little::interpreter::InterpTokens_obj::Decimal(::Math_obj::pow(l,r));
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_10) HXARGC(2)
            		 ::little::interpreter::InterpTokens _hx_run( ::little::interpreter::InterpTokens lhs, ::little::interpreter::InterpTokens rhs){
            			HX_STACKFRAME(&_hx_pos_0b0d584b35e606f8_439_addSigns)
HXLINE( 440)			Float l = ( (Float)(::little::tools::Conversion_obj::toHaxeValue(lhs)) );
HXDLIN( 440)			Float r = ( (Float)(::little::tools::Conversion_obj::toHaxeValue(rhs)) );
HXLINE( 442)			bool lPositive = (l >= 0);
HXLINE( 443)			bool oddN = (::hx::Mod(r,2) == 1);
HXLINE( 444)			if (!(lPositive)) {
HXLINE( 445)				l = -(l);
            			}
HXLINE( 446)			int _hx_tmp;
HXDLIN( 446)			bool _hx_tmp1;
HXDLIN( 446)			if (!(lPositive)) {
HXLINE( 446)				_hx_tmp1 = oddN;
            			}
            			else {
HXLINE( 446)				_hx_tmp1 = false;
            			}
HXDLIN( 446)			if (_hx_tmp1) {
HXLINE( 446)				_hx_tmp = -1;
            			}
            			else {
HXLINE( 446)				_hx_tmp = 1;
            			}
HXDLIN( 446)			return ::little::interpreter::InterpTokens_obj::Decimal(::Math_obj::pow((l * ( (Float)(_hx_tmp) )),(( (Float)(1) ) / r)));
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_11) HXARGC(2)
            		 ::little::interpreter::InterpTokens _hx_run( ::little::interpreter::InterpTokens lhs, ::little::interpreter::InterpTokens rhs){
            			HX_STACKFRAME(&_hx_pos_0b0d584b35e606f8_456_addSigns)
HXLINE( 456)			bool _hx_tmp;
HXDLIN( 456)			if (( (bool)(::little::tools::Conversion_obj::toHaxeValue(lhs)) )) {
HXLINE( 456)				_hx_tmp = ( (bool)(::little::tools::Conversion_obj::toHaxeValue(rhs)) );
            			}
            			else {
HXLINE( 456)				_hx_tmp = false;
            			}
HXDLIN( 456)			if (_hx_tmp) {
HXLINE( 456)				return ::little::interpreter::InterpTokens_obj::TrueValue_dyn();
            			}
            			else {
HXLINE( 456)				return ::little::interpreter::InterpTokens_obj::FalseValue_dyn();
            			}
HXDLIN( 456)			return null();
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_12) HXARGC(2)
            		 ::little::interpreter::InterpTokens _hx_run( ::little::interpreter::InterpTokens lhs, ::little::interpreter::InterpTokens rhs){
            			HX_STACKFRAME(&_hx_pos_0b0d584b35e606f8_462_addSigns)
HXLINE( 462)			bool _hx_tmp;
HXDLIN( 462)			if (!(( (bool)(::little::tools::Conversion_obj::toHaxeValue(lhs)) ))) {
HXLINE( 462)				_hx_tmp = ( (bool)(::little::tools::Conversion_obj::toHaxeValue(rhs)) );
            			}
            			else {
HXLINE( 462)				_hx_tmp = true;
            			}
HXDLIN( 462)			if (_hx_tmp) {
HXLINE( 462)				return ::little::interpreter::InterpTokens_obj::TrueValue_dyn();
            			}
            			else {
HXLINE( 462)				return ::little::interpreter::InterpTokens_obj::FalseValue_dyn();
            			}
HXDLIN( 462)			return null();
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_13) HXARGC(2)
            		 ::little::interpreter::InterpTokens _hx_run( ::little::interpreter::InterpTokens lhs, ::little::interpreter::InterpTokens rhs){
            			HX_STACKFRAME(&_hx_pos_0b0d584b35e606f8_466_addSigns)
HXLINE( 466)			 ::Dynamic _hx_tmp = ::little::tools::Conversion_obj::toHaxeValue(lhs);
HXDLIN( 466)			if (::hx::IsEq( _hx_tmp,::little::tools::Conversion_obj::toHaxeValue(rhs) )) {
HXLINE( 466)				return ::little::interpreter::InterpTokens_obj::TrueValue_dyn();
            			}
            			else {
HXLINE( 466)				return ::little::interpreter::InterpTokens_obj::FalseValue_dyn();
            			}
HXDLIN( 466)			return null();
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_14) HXARGC(2)
            		 ::little::interpreter::InterpTokens _hx_run( ::little::interpreter::InterpTokens lhs, ::little::interpreter::InterpTokens rhs){
            			HX_STACKFRAME(&_hx_pos_0b0d584b35e606f8_471_addSigns)
HXLINE( 471)			 ::Dynamic _hx_tmp = ::little::tools::Conversion_obj::toHaxeValue(lhs);
HXDLIN( 471)			if (::hx::IsNotEq( _hx_tmp,::little::tools::Conversion_obj::toHaxeValue(rhs) )) {
HXLINE( 471)				return ::little::interpreter::InterpTokens_obj::TrueValue_dyn();
            			}
            			else {
HXLINE( 471)				return ::little::interpreter::InterpTokens_obj::FalseValue_dyn();
            			}
HXDLIN( 471)			return null();
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_15) HXARGC(2)
            		 ::little::interpreter::InterpTokens _hx_run( ::little::interpreter::InterpTokens lhs, ::little::interpreter::InterpTokens rhs){
            			HX_STACKFRAME(&_hx_pos_0b0d584b35e606f8_478_addSigns)
HXLINE( 478)			 ::Dynamic _hx_tmp = ::little::tools::Conversion_obj::toHaxeValue(lhs);
HXDLIN( 478)			if (::hx::IsNotEq( _hx_tmp,::little::tools::Conversion_obj::toHaxeValue(rhs) )) {
HXLINE( 478)				return ::little::interpreter::InterpTokens_obj::TrueValue_dyn();
            			}
            			else {
HXLINE( 478)				return ::little::interpreter::InterpTokens_obj::FalseValue_dyn();
            			}
HXDLIN( 478)			return null();
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_16) HXARGC(2)
            		 ::little::interpreter::InterpTokens _hx_run( ::little::interpreter::InterpTokens lhs, ::little::interpreter::InterpTokens rhs){
            			HX_STACKFRAME(&_hx_pos_0b0d584b35e606f8_486_addSigns)
HXLINE( 487)			 ::Dynamic l = ::little::tools::Conversion_obj::toHaxeValue(lhs);
HXDLIN( 487)			 ::Dynamic r = ::little::tools::Conversion_obj::toHaxeValue(rhs);
HXLINE( 489)			if (::Std_obj::isOfType(l,::hx::ClassOf< ::String >())) {
HXLINE( 490)				if (::hx::IsGreater( l->__Field(HX_("length",e6,94,07,9f),::hx::paccDynamic),r->__Field(HX_("length",e6,94,07,9f),::hx::paccDynamic) )) {
HXLINE( 490)					return ::little::interpreter::InterpTokens_obj::TrueValue_dyn();
            				}
            				else {
HXLINE( 490)					return ::little::interpreter::InterpTokens_obj::FalseValue_dyn();
            				}
            			}
HXLINE( 491)			if (::hx::IsGreater( l,r )) {
HXLINE( 491)				return ::little::interpreter::InterpTokens_obj::TrueValue_dyn();
            			}
            			else {
HXLINE( 491)				return ::little::interpreter::InterpTokens_obj::FalseValue_dyn();
            			}
HXDLIN( 491)			return null();
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_17) HXARGC(2)
            		 ::little::interpreter::InterpTokens _hx_run( ::little::interpreter::InterpTokens lhs, ::little::interpreter::InterpTokens rhs){
            			HX_STACKFRAME(&_hx_pos_0b0d584b35e606f8_500_addSigns)
HXLINE( 501)			 ::Dynamic l = ::little::tools::Conversion_obj::toHaxeValue(lhs);
HXDLIN( 501)			 ::Dynamic r = ::little::tools::Conversion_obj::toHaxeValue(rhs);
HXLINE( 503)			if (::Std_obj::isOfType(l,::hx::ClassOf< ::String >())) {
HXLINE( 504)				if (::hx::IsGreaterEq( l->__Field(HX_("length",e6,94,07,9f),::hx::paccDynamic),r->__Field(HX_("length",e6,94,07,9f),::hx::paccDynamic) )) {
HXLINE( 504)					return ::little::interpreter::InterpTokens_obj::TrueValue_dyn();
            				}
            				else {
HXLINE( 504)					return ::little::interpreter::InterpTokens_obj::FalseValue_dyn();
            				}
            			}
HXLINE( 505)			if (::hx::IsGreaterEq( l,r )) {
HXLINE( 505)				return ::little::interpreter::InterpTokens_obj::TrueValue_dyn();
            			}
            			else {
HXLINE( 505)				return ::little::interpreter::InterpTokens_obj::FalseValue_dyn();
            			}
HXDLIN( 505)			return null();
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_18) HXARGC(2)
            		 ::little::interpreter::InterpTokens _hx_run( ::little::interpreter::InterpTokens lhs, ::little::interpreter::InterpTokens rhs){
            			HX_STACKFRAME(&_hx_pos_0b0d584b35e606f8_514_addSigns)
HXLINE( 515)			 ::Dynamic l = ::little::tools::Conversion_obj::toHaxeValue(lhs);
HXDLIN( 515)			 ::Dynamic r = ::little::tools::Conversion_obj::toHaxeValue(rhs);
HXLINE( 517)			if (::Std_obj::isOfType(l,::hx::ClassOf< ::String >())) {
HXLINE( 518)				if (::hx::IsLess( l->__Field(HX_("length",e6,94,07,9f),::hx::paccDynamic),r->__Field(HX_("length",e6,94,07,9f),::hx::paccDynamic) )) {
HXLINE( 518)					return ::little::interpreter::InterpTokens_obj::TrueValue_dyn();
            				}
            				else {
HXLINE( 518)					return ::little::interpreter::InterpTokens_obj::FalseValue_dyn();
            				}
            			}
HXLINE( 519)			if (::hx::IsLess( l,r )) {
HXLINE( 519)				return ::little::interpreter::InterpTokens_obj::TrueValue_dyn();
            			}
            			else {
HXLINE( 519)				return ::little::interpreter::InterpTokens_obj::FalseValue_dyn();
            			}
HXDLIN( 519)			return null();
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_19) HXARGC(2)
            		 ::little::interpreter::InterpTokens _hx_run( ::little::interpreter::InterpTokens lhs, ::little::interpreter::InterpTokens rhs){
            			HX_STACKFRAME(&_hx_pos_0b0d584b35e606f8_528_addSigns)
HXLINE( 529)			 ::Dynamic l = ::little::tools::Conversion_obj::toHaxeValue(lhs);
HXDLIN( 529)			 ::Dynamic r = ::little::tools::Conversion_obj::toHaxeValue(rhs);
HXLINE( 531)			if (::Std_obj::isOfType(l,::hx::ClassOf< ::String >())) {
HXLINE( 532)				if (::hx::IsLessEq( l->__Field(HX_("length",e6,94,07,9f),::hx::paccDynamic),r->__Field(HX_("length",e6,94,07,9f),::hx::paccDynamic) )) {
HXLINE( 532)					return ::little::interpreter::InterpTokens_obj::TrueValue_dyn();
            				}
            				else {
HXLINE( 532)					return ::little::interpreter::InterpTokens_obj::FalseValue_dyn();
            				}
            			}
HXLINE( 533)			if (::hx::IsLessEq( l,r )) {
HXLINE( 533)				return ::little::interpreter::InterpTokens_obj::TrueValue_dyn();
            			}
            			else {
HXLINE( 533)				return ::little::interpreter::InterpTokens_obj::FalseValue_dyn();
            			}
HXDLIN( 533)			return null();
            		}
            		HX_END_LOCAL_FUNC2(return)

            	HX_STACKFRAME(&_hx_pos_0b0d584b35e606f8_278_addSigns)
HXLINE( 284)		::little::Little_obj::plugin->registerOperator(::little::Little_obj::keywords->POSITIVE_SIGN, ::Dynamic(::hx::Anon_obj::Create(4)
            			->setFixed(0,HX_("singleSidedOperatorCallback",ee,de,f9,ae), ::Dynamic(new _hx_Closure_0()))
            			->setFixed(1,HX_("priority",64,7b,3e,bb),HX_("last",56,0a,ad,47))
            			->setFixed(2,HX_("rhsAllowedTypes",ce,6d,8a,11),::Array_obj< ::String >::__new(2)->init(0,::little::Little_obj::keywords->TYPE_FLOAT)->init(1,::little::Little_obj::keywords->TYPE_INT))
            			->setFixed(3,HX_("operatorType",7e,dc,35,71),::little::interpreter::memory::OperatorType_obj::RHS_ONLY_dyn())));
HXLINE( 296)		::little::Little_obj::plugin->registerOperator(::little::Little_obj::keywords->NEGATE_SIGN, ::Dynamic(::hx::Anon_obj::Create(4)
            			->setFixed(0,HX_("singleSidedOperatorCallback",ee,de,f9,ae), ::Dynamic(new _hx_Closure_1()))
            			->setFixed(1,HX_("priority",64,7b,3e,bb),((HX_("with ",5a,cf,6e,ca) + ::little::Little_obj::keywords->POSITIVE_SIGN) + HX_("_",5f,00,00,00)))
            			->setFixed(2,HX_("rhsAllowedTypes",ce,6d,8a,11),::Array_obj< ::String >::__new(2)->init(0,::little::Little_obj::keywords->TYPE_FLOAT)->init(1,::little::Little_obj::keywords->TYPE_INT))
            			->setFixed(3,HX_("operatorType",7e,dc,35,71),::little::interpreter::memory::OperatorType_obj::RHS_ONLY_dyn())));
HXLINE( 308)		::little::Little_obj::plugin->registerOperator(::little::Little_obj::keywords->SQRT_SIGN, ::Dynamic(::hx::Anon_obj::Create(4)
            			->setFixed(0,HX_("singleSidedOperatorCallback",ee,de,f9,ae), ::Dynamic(new _hx_Closure_2()))
            			->setFixed(1,HX_("priority",64,7b,3e,bb),HX_("first",30,78,9d,00))
            			->setFixed(2,HX_("rhsAllowedTypes",ce,6d,8a,11),::Array_obj< ::String >::__new(2)->init(0,::little::Little_obj::keywords->TYPE_FLOAT)->init(1,::little::Little_obj::keywords->TYPE_INT))
            			->setFixed(3,HX_("operatorType",7e,dc,35,71),::little::interpreter::memory::OperatorType_obj::RHS_ONLY_dyn())));
HXLINE( 319)		::little::Little_obj::plugin->registerOperator(::little::Little_obj::keywords->NOT_SIGN, ::Dynamic(::hx::Anon_obj::Create(4)
            			->setFixed(0,HX_("singleSidedOperatorCallback",ee,de,f9,ae), ::Dynamic(new _hx_Closure_3()))
            			->setFixed(1,HX_("priority",64,7b,3e,bb),((HX_("with ",5a,cf,6e,ca) + ::little::Little_obj::keywords->POSITIVE_SIGN) + HX_("_",5f,00,00,00)))
            			->setFixed(2,HX_("rhsAllowedTypes",ce,6d,8a,11),::Array_obj< ::String >::__new(1)->init(0,::little::Little_obj::keywords->TYPE_BOOLEAN))
            			->setFixed(3,HX_("operatorType",7e,dc,35,71),::little::interpreter::memory::OperatorType_obj::RHS_ONLY_dyn())));
HXLINE( 334)		::little::Little_obj::plugin->registerOperator(::little::Little_obj::keywords->FACTORIAL_SIGN, ::Dynamic(::hx::Anon_obj::Create(4)
            			->setFixed(0,HX_("lhsAllowedTypes",48,af,a4,93),::Array_obj< ::String >::__new(2)->init(0,::little::Little_obj::keywords->TYPE_FLOAT)->init(1,::little::Little_obj::keywords->TYPE_INT))
            			->setFixed(1,HX_("singleSidedOperatorCallback",ee,de,f9,ae), ::Dynamic(new _hx_Closure_4()))
            			->setFixed(2,HX_("priority",64,7b,3e,bb),((HX_("with ",5a,cf,6e,ca) + ::little::Little_obj::keywords->SQRT_SIGN) + HX_("_",5f,00,00,00)))
            			->setFixed(3,HX_("operatorType",7e,dc,35,71),::little::interpreter::memory::OperatorType_obj::LHS_ONLY_dyn())));
HXLINE( 350)		::little::Little_obj::plugin->registerOperator(::little::Little_obj::keywords->ADD_SIGN, ::Dynamic(::hx::Anon_obj::Create(5)
            			->setFixed(0,HX_("lhsAllowedTypes",48,af,a4,93),::Array_obj< ::String >::__new(3)->init(0,::little::Little_obj::keywords->TYPE_FLOAT)->init(1,::little::Little_obj::keywords->TYPE_INT)->init(2,::little::Little_obj::keywords->TYPE_STRING))
            			->setFixed(1,HX_("priority",64,7b,3e,bb),((HX_("with ",5a,cf,6e,ca) + ::little::Little_obj::keywords->POSITIVE_SIGN) + HX_("_",5f,00,00,00)))
            			->setFixed(2,HX_("allowedTypeCombos",07,42,33,d4),::Array_obj< ::Dynamic>::__new(2)->init(0, ::Dynamic(::hx::Anon_obj::Create(2)
            				->setFixed(0,HX_("lhs",77,4e,52,00),::little::Little_obj::keywords->TYPE_STRING)
            				->setFixed(1,HX_("rhs",fd,db,56,00),::little::Little_obj::keywords->TYPE_DYNAMIC)))->init(1, ::Dynamic(::hx::Anon_obj::Create(2)
            				->setFixed(0,HX_("lhs",77,4e,52,00),::little::Little_obj::keywords->TYPE_DYNAMIC)
            				->setFixed(1,HX_("rhs",fd,db,56,00),::little::Little_obj::keywords->TYPE_STRING))))
            			->setFixed(3,HX_("rhsAllowedTypes",ce,6d,8a,11),::Array_obj< ::String >::__new(3)->init(0,::little::Little_obj::keywords->TYPE_FLOAT)->init(1,::little::Little_obj::keywords->TYPE_INT)->init(2,::little::Little_obj::keywords->TYPE_STRING))
            			->setFixed(4,HX_("callback",c5,99,06,7f), ::Dynamic(new _hx_Closure_5()))));
HXLINE( 369)		::little::Little_obj::plugin->registerOperator(::little::Little_obj::keywords->SUBTRACT_SIGN, ::Dynamic(::hx::Anon_obj::Create(5)
            			->setFixed(0,HX_("lhsAllowedTypes",48,af,a4,93),::Array_obj< ::String >::__new(2)->init(0,::little::Little_obj::keywords->TYPE_FLOAT)->init(1,::little::Little_obj::keywords->TYPE_INT))
            			->setFixed(1,HX_("priority",64,7b,3e,bb),(HX_("with ",5a,cf,6e,ca) + ::little::Little_obj::keywords->ADD_SIGN))
            			->setFixed(2,HX_("allowedTypeCombos",07,42,33,d4),::Array_obj< ::Dynamic>::__new(1)->init(0, ::Dynamic(::hx::Anon_obj::Create(2)
            				->setFixed(0,HX_("lhs",77,4e,52,00),::little::Little_obj::keywords->TYPE_STRING)
            				->setFixed(1,HX_("rhs",fd,db,56,00),::little::Little_obj::keywords->TYPE_STRING))))
            			->setFixed(3,HX_("rhsAllowedTypes",ce,6d,8a,11),::Array_obj< ::String >::__new(2)->init(0,::little::Little_obj::keywords->TYPE_FLOAT)->init(1,::little::Little_obj::keywords->TYPE_INT))
            			->setFixed(4,HX_("callback",c5,99,06,7f), ::Dynamic(new _hx_Closure_6()))));
HXLINE( 388)		::little::Little_obj::plugin->registerOperator(::little::Little_obj::keywords->MULTIPLY_SIGN, ::Dynamic(::hx::Anon_obj::Create(5)
            			->setFixed(0,HX_("lhsAllowedTypes",48,af,a4,93),::Array_obj< ::String >::__new(2)->init(0,::little::Little_obj::keywords->TYPE_FLOAT)->init(1,::little::Little_obj::keywords->TYPE_INT))
            			->setFixed(1,HX_("priority",64,7b,3e,bb),((((HX_("between ",58,fd,6b,76) + ::little::Little_obj::keywords->ADD_SIGN) + HX_(" ",20,00,00,00)) + ::little::Little_obj::keywords->SQRT_SIGN) + HX_("_",5f,00,00,00)))
            			->setFixed(2,HX_("allowedTypeCombos",07,42,33,d4),::Array_obj< ::Dynamic>::__new(1)->init(0, ::Dynamic(::hx::Anon_obj::Create(2)
            				->setFixed(0,HX_("lhs",77,4e,52,00),::little::Little_obj::keywords->TYPE_STRING)
            				->setFixed(1,HX_("rhs",fd,db,56,00),::little::Little_obj::keywords->TYPE_INT))))
            			->setFixed(3,HX_("rhsAllowedTypes",ce,6d,8a,11),::Array_obj< ::String >::__new(2)->init(0,::little::Little_obj::keywords->TYPE_FLOAT)->init(1,::little::Little_obj::keywords->TYPE_INT))
            			->setFixed(4,HX_("callback",c5,99,06,7f), ::Dynamic(new _hx_Closure_7()))));
HXLINE( 407)		::little::Little_obj::plugin->registerOperator(::little::Little_obj::keywords->DIVIDE_SIGN, ::Dynamic(::hx::Anon_obj::Create(4)
            			->setFixed(0,HX_("lhsAllowedTypes",48,af,a4,93),::Array_obj< ::String >::__new(2)->init(0,::little::Little_obj::keywords->TYPE_FLOAT)->init(1,::little::Little_obj::keywords->TYPE_INT))
            			->setFixed(1,HX_("priority",64,7b,3e,bb),(HX_("with ",5a,cf,6e,ca) + ::little::Little_obj::keywords->MULTIPLY_SIGN))
            			->setFixed(2,HX_("rhsAllowedTypes",ce,6d,8a,11),::Array_obj< ::String >::__new(2)->init(0,::little::Little_obj::keywords->TYPE_FLOAT)->init(1,::little::Little_obj::keywords->TYPE_INT))
            			->setFixed(3,HX_("callback",c5,99,06,7f), ::Dynamic(new _hx_Closure_8()))));
HXLINE( 421)		::little::Little_obj::plugin->registerOperator(::little::Little_obj::keywords->POW_SIGN, ::Dynamic(::hx::Anon_obj::Create(4)
            			->setFixed(0,HX_("lhsAllowedTypes",48,af,a4,93),::Array_obj< ::String >::__new(2)->init(0,::little::Little_obj::keywords->TYPE_FLOAT)->init(1,::little::Little_obj::keywords->TYPE_INT))
            			->setFixed(1,HX_("priority",64,7b,3e,bb),(HX_("before ",c1,9a,d7,51) + ::little::Little_obj::keywords->MULTIPLY_SIGN))
            			->setFixed(2,HX_("rhsAllowedTypes",ce,6d,8a,11),::Array_obj< ::String >::__new(2)->init(0,::little::Little_obj::keywords->TYPE_FLOAT)->init(1,::little::Little_obj::keywords->TYPE_INT))
            			->setFixed(3,HX_("callback",c5,99,06,7f), ::Dynamic(new _hx_Closure_9()))));
HXLINE( 435)		::little::Little_obj::plugin->registerOperator(::little::Little_obj::keywords->SQRT_SIGN, ::Dynamic(::hx::Anon_obj::Create(4)
            			->setFixed(0,HX_("lhsAllowedTypes",48,af,a4,93),::Array_obj< ::String >::__new(2)->init(0,::little::Little_obj::keywords->TYPE_FLOAT)->init(1,::little::Little_obj::keywords->TYPE_INT))
            			->setFixed(1,HX_("priority",64,7b,3e,bb),(HX_("with ",5a,cf,6e,ca) + ::little::Little_obj::keywords->POW_SIGN))
            			->setFixed(2,HX_("rhsAllowedTypes",ce,6d,8a,11),::Array_obj< ::String >::__new(2)->init(0,::little::Little_obj::keywords->TYPE_FLOAT)->init(1,::little::Little_obj::keywords->TYPE_INT))
            			->setFixed(3,HX_("callback",c5,99,06,7f), ::Dynamic(new _hx_Closure_10()))));
HXLINE( 452)		::little::Little_obj::plugin->registerOperator(::little::Little_obj::keywords->AND_SIGN, ::Dynamic(::hx::Anon_obj::Create(4)
            			->setFixed(0,HX_("lhsAllowedTypes",48,af,a4,93),::Array_obj< ::String >::__new(1)->init(0,::little::Little_obj::keywords->TYPE_BOOLEAN))
            			->setFixed(1,HX_("priority",64,7b,3e,bb),HX_("last",56,0a,ad,47))
            			->setFixed(2,HX_("rhsAllowedTypes",ce,6d,8a,11),::Array_obj< ::String >::__new(1)->init(0,::little::Little_obj::keywords->TYPE_BOOLEAN))
            			->setFixed(3,HX_("callback",c5,99,06,7f), ::Dynamic(new _hx_Closure_11()))));
HXLINE( 458)		::little::Little_obj::plugin->registerOperator(::little::Little_obj::keywords->OR_SIGN, ::Dynamic(::hx::Anon_obj::Create(4)
            			->setFixed(0,HX_("lhsAllowedTypes",48,af,a4,93),::Array_obj< ::String >::__new(1)->init(0,::little::Little_obj::keywords->TYPE_BOOLEAN))
            			->setFixed(1,HX_("priority",64,7b,3e,bb),(HX_("with ",5a,cf,6e,ca) + ::little::Little_obj::keywords->AND_SIGN))
            			->setFixed(2,HX_("rhsAllowedTypes",ce,6d,8a,11),::Array_obj< ::String >::__new(1)->init(0,::little::Little_obj::keywords->TYPE_BOOLEAN))
            			->setFixed(3,HX_("callback",c5,99,06,7f), ::Dynamic(new _hx_Closure_12()))));
HXLINE( 464)		::little::Little_obj::plugin->registerOperator(::little::Little_obj::keywords->EQUALS_SIGN, ::Dynamic(::hx::Anon_obj::Create(2)
            			->setFixed(0,HX_("priority",64,7b,3e,bb),HX_("last",56,0a,ad,47))
            			->setFixed(1,HX_("callback",c5,99,06,7f), ::Dynamic(new _hx_Closure_13()))));
HXLINE( 469)		::little::Little_obj::plugin->registerOperator(::little::Little_obj::keywords->NOT_EQUALS_SIGN, ::Dynamic(::hx::Anon_obj::Create(2)
            			->setFixed(0,HX_("priority",64,7b,3e,bb),(HX_("with ",5a,cf,6e,ca) + ::little::Little_obj::keywords->EQUALS_SIGN))
            			->setFixed(1,HX_("callback",c5,99,06,7f), ::Dynamic(new _hx_Closure_14()))));
HXLINE( 474)		::little::Little_obj::plugin->registerOperator(::little::Little_obj::keywords->XOR_SIGN, ::Dynamic(::hx::Anon_obj::Create(4)
            			->setFixed(0,HX_("lhsAllowedTypes",48,af,a4,93),::Array_obj< ::String >::__new(1)->init(0,::little::Little_obj::keywords->TYPE_BOOLEAN))
            			->setFixed(1,HX_("priority",64,7b,3e,bb),(HX_("with ",5a,cf,6e,ca) + ::little::Little_obj::keywords->AND_SIGN))
            			->setFixed(2,HX_("rhsAllowedTypes",ce,6d,8a,11),::Array_obj< ::String >::__new(1)->init(0,::little::Little_obj::keywords->TYPE_BOOLEAN))
            			->setFixed(3,HX_("callback",c5,99,06,7f), ::Dynamic(new _hx_Closure_15()))));
HXLINE( 481)		::little::Little_obj::plugin->registerOperator(::little::Little_obj::keywords->LARGER_SIGN, ::Dynamic(::hx::Anon_obj::Create(5)
            			->setFixed(0,HX_("lhsAllowedTypes",48,af,a4,93),::Array_obj< ::String >::__new(2)->init(0,::little::Little_obj::keywords->TYPE_FLOAT)->init(1,::little::Little_obj::keywords->TYPE_INT))
            			->setFixed(1,HX_("priority",64,7b,3e,bb),(HX_("with ",5a,cf,6e,ca) + ::little::Little_obj::keywords->EQUALS_SIGN))
            			->setFixed(2,HX_("allowedTypeCombos",07,42,33,d4),::Array_obj< ::Dynamic>::__new(1)->init(0, ::Dynamic(::hx::Anon_obj::Create(2)
            				->setFixed(0,HX_("lhs",77,4e,52,00),::little::Little_obj::keywords->TYPE_STRING)
            				->setFixed(1,HX_("rhs",fd,db,56,00),::little::Little_obj::keywords->TYPE_STRING))))
            			->setFixed(3,HX_("rhsAllowedTypes",ce,6d,8a,11),::Array_obj< ::String >::__new(2)->init(0,::little::Little_obj::keywords->TYPE_FLOAT)->init(1,::little::Little_obj::keywords->TYPE_INT))
            			->setFixed(4,HX_("callback",c5,99,06,7f), ::Dynamic(new _hx_Closure_16()))));
HXLINE( 495)		::little::Little_obj::plugin->registerOperator(::little::Little_obj::keywords->LARGER_EQUALS_SIGN, ::Dynamic(::hx::Anon_obj::Create(5)
            			->setFixed(0,HX_("lhsAllowedTypes",48,af,a4,93),::Array_obj< ::String >::__new(2)->init(0,::little::Little_obj::keywords->TYPE_FLOAT)->init(1,::little::Little_obj::keywords->TYPE_INT))
            			->setFixed(1,HX_("priority",64,7b,3e,bb),(HX_("with ",5a,cf,6e,ca) + ::little::Little_obj::keywords->EQUALS_SIGN))
            			->setFixed(2,HX_("allowedTypeCombos",07,42,33,d4),::Array_obj< ::Dynamic>::__new(1)->init(0, ::Dynamic(::hx::Anon_obj::Create(2)
            				->setFixed(0,HX_("lhs",77,4e,52,00),::little::Little_obj::keywords->TYPE_STRING)
            				->setFixed(1,HX_("rhs",fd,db,56,00),::little::Little_obj::keywords->TYPE_STRING))))
            			->setFixed(3,HX_("rhsAllowedTypes",ce,6d,8a,11),::Array_obj< ::String >::__new(2)->init(0,::little::Little_obj::keywords->TYPE_FLOAT)->init(1,::little::Little_obj::keywords->TYPE_INT))
            			->setFixed(4,HX_("callback",c5,99,06,7f), ::Dynamic(new _hx_Closure_17()))));
HXLINE( 509)		::little::Little_obj::plugin->registerOperator(::little::Little_obj::keywords->SMALLER_SIGN, ::Dynamic(::hx::Anon_obj::Create(5)
            			->setFixed(0,HX_("lhsAllowedTypes",48,af,a4,93),::Array_obj< ::String >::__new(2)->init(0,::little::Little_obj::keywords->TYPE_FLOAT)->init(1,::little::Little_obj::keywords->TYPE_INT))
            			->setFixed(1,HX_("priority",64,7b,3e,bb),(HX_("with ",5a,cf,6e,ca) + ::little::Little_obj::keywords->EQUALS_SIGN))
            			->setFixed(2,HX_("allowedTypeCombos",07,42,33,d4),::Array_obj< ::Dynamic>::__new(1)->init(0, ::Dynamic(::hx::Anon_obj::Create(2)
            				->setFixed(0,HX_("lhs",77,4e,52,00),::little::Little_obj::keywords->TYPE_STRING)
            				->setFixed(1,HX_("rhs",fd,db,56,00),::little::Little_obj::keywords->TYPE_STRING))))
            			->setFixed(3,HX_("rhsAllowedTypes",ce,6d,8a,11),::Array_obj< ::String >::__new(2)->init(0,::little::Little_obj::keywords->TYPE_FLOAT)->init(1,::little::Little_obj::keywords->TYPE_INT))
            			->setFixed(4,HX_("callback",c5,99,06,7f), ::Dynamic(new _hx_Closure_18()))));
HXLINE( 523)		::little::Little_obj::plugin->registerOperator(::little::Little_obj::keywords->SMALLER_EQUALS_SIGN, ::Dynamic(::hx::Anon_obj::Create(5)
            			->setFixed(0,HX_("lhsAllowedTypes",48,af,a4,93),::Array_obj< ::String >::__new(2)->init(0,::little::Little_obj::keywords->TYPE_FLOAT)->init(1,::little::Little_obj::keywords->TYPE_INT))
            			->setFixed(1,HX_("priority",64,7b,3e,bb),(HX_("with ",5a,cf,6e,ca) + ::little::Little_obj::keywords->EQUALS_SIGN))
            			->setFixed(2,HX_("allowedTypeCombos",07,42,33,d4),::Array_obj< ::Dynamic>::__new(1)->init(0, ::Dynamic(::hx::Anon_obj::Create(2)
            				->setFixed(0,HX_("lhs",77,4e,52,00),::little::Little_obj::keywords->TYPE_STRING)
            				->setFixed(1,HX_("rhs",fd,db,56,00),::little::Little_obj::keywords->TYPE_STRING))))
            			->setFixed(3,HX_("rhsAllowedTypes",ce,6d,8a,11),::Array_obj< ::String >::__new(2)->init(0,::little::Little_obj::keywords->TYPE_FLOAT)->init(1,::little::Little_obj::keywords->TYPE_INT))
            			->setFixed(4,HX_("callback",c5,99,06,7f), ::Dynamic(new _hx_Closure_19()))));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(PrepareRun_obj,addSigns,(void))

void PrepareRun_obj::addConditions(){
            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_0) HXARGC(2)
            		 ::little::interpreter::InterpTokens _hx_run(::Array< ::Dynamic> params,::Array< ::Dynamic> body){
            			HX_STACKFRAME(&_hx_pos_0b0d584b35e606f8_542_addConditions)
HXLINE( 543)			 ::little::interpreter::InterpTokens val = ::little::interpreter::InterpTokens_obj::NullValue_dyn();
HXLINE( 544)			int safetyNet = 0;
HXLINE( 545)			while((safetyNet < 500000)){
HXLINE( 546)				 ::Dynamic condition = ::little::tools::Conversion_obj::toHaxeValue(::little::interpreter::Interpreter_obj::calculate(params));
HXLINE( 547)				bool _hx_tmp;
HXDLIN( 547)				if (::Std_obj::isOfType(condition,::hx::ClassOf< bool >())) {
HXLINE( 547)					_hx_tmp = ( (bool)(condition) );
            				}
            				else {
HXLINE( 547)					_hx_tmp = false;
            				}
HXDLIN( 547)				if (_hx_tmp) {
HXLINE( 548)					val = ::little::interpreter::Interpreter_obj::run(body,null());
HXLINE( 549)					safetyNet = (safetyNet + 1);
            				}
            				else {
HXLINE( 551)					bool _hx_tmp1;
HXDLIN( 551)					if (::Std_obj::isOfType(condition,::hx::ClassOf< bool >())) {
HXLINE( 551)						_hx_tmp1 = !(( (bool)(condition) ));
            					}
            					else {
HXLINE( 551)						_hx_tmp1 = false;
            					}
HXDLIN( 551)					if (_hx_tmp1) {
HXLINE( 552)						return val;
            					}
            					else {
HXLINE( 555)						::little::Little_obj::runtime->throwError(::little::interpreter::InterpTokens_obj::ErrorMessage((((((HX_("`",60,00,00,00) + ::little::Little_obj::keywords->CONDITION__WHILE_LOOP) + HX_("` condition must be a ",aa,db,e8,9f)) + ::little::Little_obj::keywords->TYPE_BOOLEAN) + HX_(" or ",7d,71,7b,15)) + ::little::Little_obj::keywords->FALSE_VALUE)),HX_("Interpreter",9a,09,07,b9));
HXLINE( 556)						return val;
            					}
            				}
            			}
HXLINE( 559)			if ((safetyNet >= 500000)) {
HXLINE( 560)				 ::little::interpreter::Runtime _hx_tmp2 = ::little::Little_obj::runtime;
HXDLIN( 560)				::String _hx_tmp3 = ((HX_("Too much iteration in `",cf,6e,da,26) + ::little::Little_obj::keywords->CONDITION__WHILE_LOOP) + HX_("` loop (is `",d6,93,22,71));
HXDLIN( 560)				::String _hx_tmp4 = ((_hx_tmp3 + ::little::tools::PrettyPrinter_obj::stringifyInterpreter(params,null())) + HX_("` forever `",e7,76,c2,50));
HXDLIN( 560)				_hx_tmp2->throwError(::little::interpreter::InterpTokens_obj::ErrorMessage(((_hx_tmp4 + ::little::Little_obj::keywords->TRUE_VALUE) + HX_("`?)",6a,0f,49,00))),HX_("Interpreter",9a,09,07,b9));
            			}
HXLINE( 563)			return val;
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_1) HXARGC(2)
            		 ::little::interpreter::InterpTokens _hx_run(::Array< ::Dynamic> params,::Array< ::Dynamic> body){
            			HX_STACKFRAME(&_hx_pos_0b0d584b35e606f8_566_addConditions)
HXLINE( 567)			::haxe::Log_obj::trace(params,::hx::SourceInfo(HX_("src/little/tools/PrepareRun.hx",98,da,1e,b3),567,HX_("little.tools.PrepareRun",0f,c6,2c,c6),HX_("addConditions",f9,c7,81,1b)));
HXLINE( 568)			 ::little::interpreter::InterpTokens val = ::little::interpreter::InterpTokens_obj::NullValue_dyn();
HXLINE( 569)			bool cond = ( (bool)(::little::tools::Conversion_obj::toHaxeValue(::little::interpreter::Interpreter_obj::calculate(params))) );
HXLINE( 570)			bool _hx_tmp;
HXDLIN( 570)			if (::Std_obj::isOfType(cond,::hx::ClassOf< bool >())) {
HXLINE( 570)				_hx_tmp = cond;
            			}
            			else {
HXLINE( 570)				_hx_tmp = false;
            			}
HXDLIN( 570)			if (_hx_tmp) {
HXLINE( 571)				val = ::little::interpreter::Interpreter_obj::run(body,null());
            			}
            			else {
HXLINE( 573)				if (!(::Std_obj::isOfType(cond,::hx::ClassOf< bool >()))) {
HXLINE( 574)					::little::Little_obj::runtime->throwError(::little::interpreter::InterpTokens_obj::ErrorMessage((((HX_("`",60,00,00,00) + ::little::Little_obj::keywords->CONDITION__IF) + HX_("` condition must be a ",aa,db,e8,9f)) + ::little::Little_obj::keywords->TYPE_BOOLEAN)),HX_("Interpreter",9a,09,07,b9));
            				}
            			}
HXLINE( 577)			return val;
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_2) HXARGC(2)
            		 ::little::interpreter::InterpTokens _hx_run(::Array< ::Dynamic> params,::Array< ::Dynamic> body){
            			HX_STACKFRAME(&_hx_pos_0b0d584b35e606f8_580_addConditions)
HXLINE( 581)			 ::little::interpreter::InterpTokens val = ::little::interpreter::InterpTokens_obj::NullValue_dyn();
HXLINE( 582)			::Array< ::Dynamic> fp = ::Array_obj< ::Dynamic>::__new(0);
HXLINE( 584)			{
HXLINE( 584)				int _g = 0;
HXDLIN( 584)				while((_g < params->length)){
HXLINE( 584)					 ::little::interpreter::InterpTokens p = params->__get(_g).StaticCast<  ::little::interpreter::InterpTokens >();
HXDLIN( 584)					_g = (_g + 1);
HXLINE( 585)					if ((p->_hx_getIndex() == 8)) {
HXLINE( 598)						 ::little::interpreter::InterpTokens _g1 = p->_hx_getObject(0).StaticCast<  ::little::interpreter::InterpTokens >();
HXDLIN( 598)						 ::little::interpreter::InterpTokens _g2 = p->_hx_getObject(1).StaticCast<  ::little::interpreter::InterpTokens >();
HXLINE( 586)						{
HXLINE( 598)							bool _hx_tmp;
HXLINE( 594)							bool _hx_tmp1;
HXLINE( 590)							bool _hx_tmp2;
HXLINE( 586)							 ::Dynamic _hx_tmp3 = ::Type_obj::enumParameters(_g1)->__get(0);
HXDLIN( 586)							if ((::hx::IsEq( _hx_tmp3,::little::Little_obj::keywords->FOR_LOOP_FROM ) == true)) {
HXLINE( 586)								 ::little::interpreter::InterpTokens params1 = _g2;
HXDLIN( 586)								{
HXLINE( 587)									fp->push(::little::interpreter::InterpTokens_obj::Identifier(::little::Little_obj::keywords->FOR_LOOP_FROM));
HXLINE( 588)									fp->push(::little::interpreter::InterpTokens_obj::Expression(::Type_obj::enumParameters(params1)->__get(0),null()));
            								}
            							}
            							else {
HXLINE( 590)								 ::Dynamic _hx_tmp4 = ::Type_obj::enumParameters(_g1)->__get(0);
HXDLIN( 590)								_hx_tmp2 = ::hx::IsEq( _hx_tmp4,::little::Little_obj::keywords->FOR_LOOP_TO );
HXDLIN( 590)								if ((_hx_tmp2 == true)) {
HXLINE( 590)									 ::little::interpreter::InterpTokens params2 = _g2;
HXDLIN( 590)									{
HXLINE( 591)										fp->push(::little::interpreter::InterpTokens_obj::Identifier(::little::Little_obj::keywords->FOR_LOOP_TO));
HXLINE( 592)										fp->push(::little::interpreter::InterpTokens_obj::Expression(::Type_obj::enumParameters(params2)->__get(0),null()));
            									}
            								}
            								else {
HXLINE( 594)									 ::Dynamic _hx_tmp5 = ::Type_obj::enumParameters(_g1)->__get(0);
HXDLIN( 594)									_hx_tmp1 = ::hx::IsEq( _hx_tmp5,::little::Little_obj::keywords->FOR_LOOP_JUMP );
HXDLIN( 594)									if ((_hx_tmp1 == true)) {
HXLINE( 594)										 ::little::interpreter::InterpTokens params3 = _g2;
HXDLIN( 594)										{
HXLINE( 595)											fp->push(::little::interpreter::InterpTokens_obj::Identifier(::little::Little_obj::keywords->FOR_LOOP_JUMP));
HXLINE( 596)											fp->push(::little::interpreter::InterpTokens_obj::Expression(::Type_obj::enumParameters(params3)->__get(0),null()));
            										}
            									}
            									else {
HXLINE( 598)										::Array< ::Dynamic> _this = ::Array_obj< ::Dynamic>::__new(1)->init(0,::little::tools::InterpTokensSimple_obj::BLOCK_dyn())->copy();
HXDLIN( 598)										::Array< ::String > result = ::Array_obj< ::String >::__new(_this->length);
HXDLIN( 598)										{
HXLINE( 598)											int _g3 = 0;
HXDLIN( 598)											int _g4 = _this->length;
HXDLIN( 598)											while((_g3 < _g4)){
HXLINE( 598)												_g3 = (_g3 + 1);
HXDLIN( 598)												int i = (_g3 - 1);
HXDLIN( 598)												{
HXLINE( 598)													::String inValue = ::little::tools::TextTools_obj::remove(::Type_obj::enumConstructor(_hx_array_unsafe_get(_this,i)),HX_("_",5f,00,00,00)).toLowerCase();
HXDLIN( 598)													result->__unsafe_set(i,inValue);
            												}
            											}
            										}
HXDLIN( 598)										if (result->contains(::Type_obj::enumConstructor(_g1).toLowerCase())) {
HXLINE( 598)											::Array< ::String > _hx_tmp6 = ::Array_obj< ::String >::__new(3)->init(0,::little::Little_obj::keywords->FOR_LOOP_FROM)->init(1,::little::Little_obj::keywords->FOR_LOOP_TO)->init(2,::little::Little_obj::keywords->FOR_LOOP_JUMP);
HXDLIN( 598)											_hx_tmp = _hx_tmp6->contains(::Type_obj::enumParameters(::little::interpreter::Interpreter_obj::evaluate(_g1,null()))->__get(0));
            										}
            										else {
HXLINE( 598)											_hx_tmp = false;
            										}
HXDLIN( 598)										if ((_hx_tmp == true)) {
HXLINE( 598)											 ::little::interpreter::InterpTokens params4 = _g2;
HXDLIN( 598)											{
HXLINE( 599)												fp->push(::little::interpreter::InterpTokens_obj::Identifier(::Type_obj::enumParameters(::little::interpreter::Interpreter_obj::evaluate(::Type_obj::enumParameters(p)->__get(0),null()))->__get(0)));
HXLINE( 600)												fp->push(::little::interpreter::InterpTokens_obj::Expression(::Type_obj::enumParameters(params4)->__get(0),null()));
            											}
            										}
            										else {
HXLINE( 602)											fp->push(p);
            										}
            									}
            								}
            							}
            						}
            					}
            					else {
HXLINE( 602)						fp->push(p);
            					}
            				}
            			}
HXLINE( 606)			params = fp;
HXLINE( 607)			::Array< ::Dynamic> _this1 = ::Array_obj< ::Dynamic>::__new(1)->init(0,::little::tools::InterpTokensSimple_obj::VARIABLE_DECLARATION_dyn())->copy();
HXDLIN( 607)			::Array< ::String > result1 = ::Array_obj< ::String >::__new(_this1->length);
HXDLIN( 607)			{
HXLINE( 607)				int _g5 = 0;
HXDLIN( 607)				int _g6 = _this1->length;
HXDLIN( 607)				while((_g5 < _g6)){
HXLINE( 607)					_g5 = (_g5 + 1);
HXDLIN( 607)					int i1 = (_g5 - 1);
HXDLIN( 607)					{
HXLINE( 607)						::String inValue1 = ::little::tools::TextTools_obj::remove(::Type_obj::enumConstructor(_hx_array_unsafe_get(_this1,i1)),HX_("_",5f,00,00,00)).toLowerCase();
HXDLIN( 607)						result1->__unsafe_set(i1,inValue1);
            					}
            				}
            			}
HXDLIN( 607)			if (!(result1->contains(::Type_obj::enumConstructor(params->__get(0).StaticCast<  ::little::interpreter::InterpTokens >()).toLowerCase()))) {
HXLINE( 608)				 ::little::interpreter::Runtime _hx_tmp7 = ::little::Little_obj::runtime;
HXDLIN( 608)				::String _hx_tmp8 = ((HX_("`",60,00,00,00) + ::little::Little_obj::keywords->CONDITION__FOR_LOOP) + HX_("` loop must start with a variable to count on (expected definition/block, found: `",2c,38,3e,45));
HXDLIN( 608)				_hx_tmp7->throwError(::little::interpreter::InterpTokens_obj::ErrorMessage(((_hx_tmp8 + ::little::tools::PrettyPrinter_obj::stringifyInterpreter(null(),params->__get(0).StaticCast<  ::little::interpreter::InterpTokens >())) + HX_("`)",c9,53,00,00))),null());
HXLINE( 609)				return val;
            			}
HXLINE( 611)			::String typeName = ::little::tools::Extensions_obj::asJoinedStringPath(::Type_obj::enumParameters(params->__get(0).StaticCast<  ::little::interpreter::InterpTokens >())->__get(1));
HXLINE( 612)			if (!(::Array_obj< ::String >::__new(4)->init(0,::little::Little_obj::keywords->TYPE_INT)->init(1,::little::Little_obj::keywords->TYPE_FLOAT)->init(2,::little::Little_obj::keywords->TYPE_DYNAMIC)->init(3,::little::Little_obj::keywords->TYPE_UNKNOWN)->contains(typeName))) {
HXLINE( 613)				::little::Little_obj::runtime->throwError(::little::interpreter::InterpTokens_obj::ErrorMessage(((((((((((HX_("`",60,00,00,00) + ::little::Little_obj::keywords->CONDITION__FOR_LOOP) + HX_("` loop's variable must be of type ",97,f5,f6,31)) + ::little::Little_obj::keywords->TYPE_INT) + HX_(", ",74,26,00,00)) + ::little::Little_obj::keywords->TYPE_FLOAT) + HX_(" or ",7d,71,7b,15)) + ::little::Little_obj::keywords->TYPE_DYNAMIC) + HX_(" (given: ",5b,4a,09,39)) + typeName) + HX_(")",29,00,00,00))),null());
            			}
HXLINE( 616)			 ::Dynamic from = null();
HXDLIN( 616)			 ::Dynamic to = null();
HXDLIN( 616)			Float jump = ( (Float)(1) );
HXLINE( 618)			::Array< ::Dynamic> currentExpression = ::Array_obj< ::Dynamic>::__new(0);
HXLINE( 619)			int currentlySet = -1;
HXLINE( 620)			{
HXLINE( 620)				int _g7 = 1;
HXDLIN( 620)				int _g8 = params->length;
HXDLIN( 620)				while((_g7 < _g8)){
HXLINE( 620)					_g7 = (_g7 + 1);
HXDLIN( 620)					int i2 = (_g7 - 1);
HXLINE( 621)					{
HXLINE( 621)						 ::little::interpreter::InterpTokens _g9 = params->__get(i2).StaticCast<  ::little::interpreter::InterpTokens >();
HXDLIN( 621)						if ((_g9->_hx_getIndex() == 25)) {
HXLINE( 646)							::String _g10 = _g9->_hx_getString(0);
HXLINE( 622)							{
HXLINE( 646)								bool _hx_tmp9;
HXLINE( 634)								bool _hx_tmp10;
HXLINE( 622)								if (((_g10 == ::little::Little_obj::keywords->FOR_LOOP_FROM) == true)) {
HXLINE( 623)									if ((currentExpression->length > 0)) {
HXLINE( 624)										switch((int)(currentlySet)){
            											case (int)-1: {
HXLINE( 625)												::little::Little_obj::runtime->throwError(::little::interpreter::InterpTokens_obj::ErrorMessage(((((((((HX_("Invalid `",d7,c2,00,23) + ::little::Little_obj::keywords->CONDITION__FOR_LOOP) + HX_("` loop syntax: expected a `",fe,dd,34,60)) + ::little::Little_obj::keywords->FOR_LOOP_TO) + HX_("`, `",0c,fb,95,3f)) + ::little::Little_obj::keywords->FOR_LOOP_FROM) + HX_("` or `",e3,7f,ca,18)) + ::little::Little_obj::keywords->FOR_LOOP_JUMP) + HX_("` after the variable",0f,a8,6f,68))),null());
            											}
            											break;
            											case (int)0: {
HXLINE( 626)												::little::Little_obj::runtime->throwError(::little::interpreter::InterpTokens_obj::ErrorMessage(((((HX_("Cannot repeat `",f8,e0,2f,6b) + ::little::Little_obj::keywords->FOR_LOOP_FROM) + HX_("` tag twice in `",a3,14,dc,54)) + ::little::Little_obj::keywords->CONDITION__FOR_LOOP) + HX_("` loop.",8a,05,72,dc))),null());
            											}
            											break;
            											case (int)1: {
HXLINE( 627)												to = ::little::tools::Conversion_obj::toHaxeValue(::little::interpreter::Interpreter_obj::calculate(currentExpression));
            											}
            											break;
            											case (int)2: {
HXLINE( 628)												jump = ( (Float)(::little::tools::Conversion_obj::toHaxeValue(::little::interpreter::Interpreter_obj::calculate(currentExpression))) );
            											}
            											break;
            										}
            									}
HXLINE( 631)									currentExpression = ::Array_obj< ::Dynamic>::__new(0);
HXLINE( 632)									currentlySet = 0;
            								}
            								else {
HXLINE( 634)									_hx_tmp10 = (_g10 == ::little::Little_obj::keywords->FOR_LOOP_TO);
HXDLIN( 634)									if ((_hx_tmp10 == true)) {
HXLINE( 635)										if ((currentExpression->length > 0)) {
HXLINE( 636)											switch((int)(currentlySet)){
            												case (int)-1: {
HXLINE( 637)													::little::Little_obj::runtime->throwError(::little::interpreter::InterpTokens_obj::ErrorMessage(((((((((HX_("Invalid `",d7,c2,00,23) + ::little::Little_obj::keywords->CONDITION__FOR_LOOP) + HX_("` loop syntax: expected a `",fe,dd,34,60)) + ::little::Little_obj::keywords->FOR_LOOP_TO) + HX_("`, `",0c,fb,95,3f)) + ::little::Little_obj::keywords->FOR_LOOP_FROM) + HX_("` or `",e3,7f,ca,18)) + ::little::Little_obj::keywords->FOR_LOOP_JUMP) + HX_("` after the variable",0f,a8,6f,68))),null());
            												}
            												break;
            												case (int)0: {
HXLINE( 638)													from = ::little::tools::Conversion_obj::toHaxeValue(::little::interpreter::Interpreter_obj::calculate(currentExpression));
            												}
            												break;
            												case (int)1: {
HXLINE( 639)													::little::Little_obj::runtime->throwError(::little::interpreter::InterpTokens_obj::ErrorMessage(((((HX_("Cannot repeat `",f8,e0,2f,6b) + ::little::Little_obj::keywords->FOR_LOOP_TO) + HX_("` tag twice in `",a3,14,dc,54)) + ::little::Little_obj::keywords->CONDITION__FOR_LOOP) + HX_("` loop.",8a,05,72,dc))),null());
            												}
            												break;
            												case (int)2: {
HXLINE( 640)													jump = ( (Float)(::little::tools::Conversion_obj::toHaxeValue(::little::interpreter::Interpreter_obj::calculate(currentExpression))) );
            												}
            												break;
            											}
            										}
HXLINE( 643)										currentExpression = ::Array_obj< ::Dynamic>::__new(0);
HXLINE( 644)										currentlySet = 1;
            									}
            									else {
HXLINE( 646)										_hx_tmp9 = (_g10 == ::little::Little_obj::keywords->FOR_LOOP_JUMP);
HXDLIN( 646)										if ((_hx_tmp9 == true)) {
HXLINE( 647)											if ((currentExpression->length > 0)) {
HXLINE( 648)												switch((int)(currentlySet)){
            													case (int)-1: {
HXLINE( 649)														::little::Little_obj::runtime->throwError(::little::interpreter::InterpTokens_obj::ErrorMessage(((((((((HX_("Invalid `",d7,c2,00,23) + ::little::Little_obj::keywords->CONDITION__FOR_LOOP) + HX_("` loop syntax: expected a `",fe,dd,34,60)) + ::little::Little_obj::keywords->FOR_LOOP_TO) + HX_("`, `",0c,fb,95,3f)) + ::little::Little_obj::keywords->FOR_LOOP_FROM) + HX_("` or `",e3,7f,ca,18)) + ::little::Little_obj::keywords->FOR_LOOP_JUMP) + HX_("` after the variable",0f,a8,6f,68))),null());
            													}
            													break;
            													case (int)0: {
HXLINE( 650)														from = ::little::tools::Conversion_obj::toHaxeValue(::little::interpreter::Interpreter_obj::calculate(currentExpression));
            													}
            													break;
            													case (int)1: {
HXLINE( 651)														to = ::little::tools::Conversion_obj::toHaxeValue(::little::interpreter::Interpreter_obj::calculate(currentExpression));
            													}
            													break;
            													case (int)2: {
HXLINE( 652)														::little::Little_obj::runtime->throwError(::little::interpreter::InterpTokens_obj::ErrorMessage(((((HX_("Cannot repeat `",f8,e0,2f,6b) + ::little::Little_obj::keywords->FOR_LOOP_JUMP) + HX_("` tag twice in `",a3,14,dc,54)) + ::little::Little_obj::keywords->CONDITION__FOR_LOOP) + HX_("` loop.",8a,05,72,dc))),null());
            													}
            													break;
            												}
            											}
HXLINE( 655)											currentExpression = ::Array_obj< ::Dynamic>::__new(0);
HXLINE( 656)											currentlySet = 2;
            										}
            										else {
HXLINE( 658)											currentExpression->push(params->__get(i2).StaticCast<  ::little::interpreter::InterpTokens >());
            										}
            									}
            								}
            							}
            						}
            						else {
HXLINE( 658)							currentExpression->push(params->__get(i2).StaticCast<  ::little::interpreter::InterpTokens >());
            						}
            					}
            				}
            			}
HXLINE( 661)			switch((int)(currentlySet)){
            				case (int)-1: {
HXLINE( 662)					::little::Little_obj::runtime->throwError(::little::interpreter::InterpTokens_obj::ErrorMessage(((((((((HX_("Invalid `",d7,c2,00,23) + ::little::Little_obj::keywords->CONDITION__FOR_LOOP) + HX_("` loop syntax: expected a `",fe,dd,34,60)) + ::little::Little_obj::keywords->FOR_LOOP_TO) + HX_("`, `",0c,fb,95,3f)) + ::little::Little_obj::keywords->FOR_LOOP_FROM) + HX_("` or `",e3,7f,ca,18)) + ::little::Little_obj::keywords->FOR_LOOP_JUMP) + HX_("` after the variable",0f,a8,6f,68))),null());
            				}
            				break;
            				case (int)0: {
HXLINE( 663)					::little::Little_obj::runtime->throwError(::little::interpreter::InterpTokens_obj::ErrorMessage(((((HX_("Cannot repeat `",f8,e0,2f,6b) + ::little::Little_obj::keywords->FOR_LOOP_FROM) + HX_("` tag twice in `",a3,14,dc,54)) + ::little::Little_obj::keywords->CONDITION__FOR_LOOP) + HX_("` loop.",8a,05,72,dc))),null());
            				}
            				break;
            				case (int)1: {
HXLINE( 664)					to = ::little::tools::Conversion_obj::toHaxeValue(::little::interpreter::Interpreter_obj::calculate(currentExpression));
            				}
            				break;
            				case (int)2: {
HXLINE( 665)					jump = ( (Float)(::little::tools::Conversion_obj::toHaxeValue(::little::interpreter::Interpreter_obj::calculate(currentExpression))) );
            				}
            				break;
            			}
HXLINE( 668)			if (::hx::IsLess( from,to )) {
HXLINE( 669)				while(::hx::IsLess( from,to )){
HXLINE( 671)					 ::little::interpreter::InterpTokens params5 = params->__get(0).StaticCast<  ::little::interpreter::InterpTokens >();
HXLINE( 670)					val = ::little::interpreter::Interpreter_obj::run(::Array_obj< ::Dynamic>::__new(1)->init(0,::little::interpreter::InterpTokens_obj::Write(::Array_obj< ::Dynamic>::__new(1)->init(0,params5),::little::tools::Conversion_obj::toLittleValue(from)))->concat(body),null());
HXLINE( 673)					from = (from + jump);
            				}
            			}
            			else {
HXLINE( 676)				while(::hx::IsGreater( from,to )){
HXLINE( 678)					 ::little::interpreter::InterpTokens params6 = params->__get(0).StaticCast<  ::little::interpreter::InterpTokens >();
HXLINE( 677)					val = ::little::interpreter::Interpreter_obj::run(::Array_obj< ::Dynamic>::__new(1)->init(0,::little::interpreter::InterpTokens_obj::Write(::Array_obj< ::Dynamic>::__new(1)->init(0,params6),::little::tools::Conversion_obj::toLittleValue(from)))->concat(body),null());
HXLINE( 680)					from = (from - jump);
            				}
            			}
HXLINE( 685)			return val;
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_4) HXARGC(2)
            		 ::little::interpreter::InterpTokens _hx_run(::Array< ::Dynamic> params,::Array< ::Dynamic> body){
            			HX_BEGIN_LOCAL_FUNC_S4(::hx::LocalFunc,_hx_Closure_3,::Array< ::Dynamic>,listener,::Array< ::String >,ident,::Array< ::Dynamic>,params,::Array< ::Dynamic>,body) HXARGC(1)
            			void _hx_run(::Array< ::String > setIdentifiers){
            				HX_STACKFRAME(&_hx_pos_0b0d584b35e606f8_706_addConditions)
HXLINE( 707)				bool cond = ( (bool)(::little::tools::Conversion_obj::toHaxeValue(::little::interpreter::Interpreter_obj::calculate(params))) );
HXLINE( 708)				bool _hx_tmp;
HXDLIN( 708)				if (setIdentifiers->contains(ident->__get(0))) {
HXLINE( 708)					_hx_tmp = cond;
            				}
            				else {
HXLINE( 708)					_hx_tmp = false;
            				}
HXDLIN( 708)				if (_hx_tmp) {
HXLINE( 709)					::little::interpreter::Interpreter_obj::run(body,null());
HXLINE( 710)					::little::Little_obj::runtime->onWriteValue->remove(listener->__get(0));
            				}
            			}
            			HX_END_LOCAL_FUNC1((void))

            			HX_STACKFRAME(&_hx_pos_0b0d584b35e606f8_688_addConditions)
HXLINE( 689)			 ::little::interpreter::InterpTokens val = ::little::interpreter::InterpTokens_obj::NullValue_dyn();
HXLINE( 690)			::Array< ::String > ident = ::Array_obj< ::String >::fromData( _hx_array_data_c62cc60f_90,1);
HXLINE( 691)			::Array< ::Dynamic> _this = ::Array_obj< ::Dynamic>::__new(1)->init(0,::little::tools::InterpTokensSimple_obj::BLOCK_dyn())->copy();
HXDLIN( 691)			::Array< ::String > result = ::Array_obj< ::String >::__new(_this->length);
HXDLIN( 691)			{
HXLINE( 691)				int _g = 0;
HXDLIN( 691)				int _g1 = _this->length;
HXDLIN( 691)				while((_g < _g1)){
HXLINE( 691)					_g = (_g + 1);
HXDLIN( 691)					int i = (_g - 1);
HXDLIN( 691)					{
HXLINE( 691)						::String inValue = ::little::tools::TextTools_obj::remove(::Type_obj::enumConstructor(_hx_array_unsafe_get(_this,i)),HX_("_",5f,00,00,00)).toLowerCase();
HXDLIN( 691)						result->__unsafe_set(i,inValue);
            					}
            				}
            			}
HXDLIN( 691)			if (result->contains(::Type_obj::enumConstructor(params->__get(0).StaticCast<  ::little::interpreter::InterpTokens >()).toLowerCase())) {
HXLINE( 692)				 ::little::interpreter::InterpTokens output = ::little::interpreter::Interpreter_obj::run(( (::Array< ::Dynamic>)(::Type_obj::enumParameters(params->__get(0).StaticCast<  ::little::interpreter::InterpTokens >())->__get(0)) ),null());
HXLINE( 693)				::String _hx_tmp = ((((HX_("`",60,00,00,00) + ::little::Little_obj::keywords->CONDITION__AFTER) + HX_("` condition that starts with a code block must have it's code block return an identifier using the `",67,82,d4,41)) + ::little::Little_obj::keywords->READ_FUNCTION_NAME) + HX_("` function (returned: ",55,76,0e,87));
HXDLIN( 693)				::little::interpreter::Interpreter_obj::_hx_assert(output,::Array_obj< ::Dynamic>::__new(2)->init(0,::little::tools::InterpTokensSimple_obj::IDENTIFIER_dyn())->init(1,::little::tools::InterpTokensSimple_obj::PROPERTY_ACCESS_dyn()),((_hx_tmp + ::little::tools::PrettyPrinter_obj::stringifyInterpreter(null(),output)) + HX_(")",29,00,00,00)));
HXLINE( 694)				ident[0] = ::little::tools::Extensions_obj::asJoinedStringPath(output);
HXLINE( 695)				params[0] = output;
            			}
            			else {
HXLINE( 696)				::Array< ::Dynamic> _this1 = ::Array_obj< ::Dynamic>::__new(2)->init(0,::little::tools::InterpTokensSimple_obj::IDENTIFIER_dyn())->init(1,::little::tools::InterpTokensSimple_obj::PROPERTY_ACCESS_dyn())->copy();
HXDLIN( 696)				::Array< ::String > result1 = ::Array_obj< ::String >::__new(_this1->length);
HXDLIN( 696)				{
HXLINE( 696)					int _g2 = 0;
HXDLIN( 696)					int _g3 = _this1->length;
HXDLIN( 696)					while((_g2 < _g3)){
HXLINE( 696)						_g2 = (_g2 + 1);
HXDLIN( 696)						int i1 = (_g2 - 1);
HXDLIN( 696)						{
HXLINE( 696)							::String inValue1 = ::little::tools::TextTools_obj::remove(::Type_obj::enumConstructor(_hx_array_unsafe_get(_this1,i1)),HX_("_",5f,00,00,00)).toLowerCase();
HXDLIN( 696)							result1->__unsafe_set(i1,inValue1);
            						}
            					}
            				}
HXDLIN( 696)				if (result1->contains(::Type_obj::enumConstructor(params->__get(0).StaticCast<  ::little::interpreter::InterpTokens >()).toLowerCase())) {
HXLINE( 697)					::Array< ::String > ident1 = ident;
HXDLIN( 697)					 ::little::interpreter::InterpTokens token = params->__get(0).StaticCast<  ::little::interpreter::InterpTokens >();
HXDLIN( 697)					::String _hx_tmp1;
HXDLIN( 697)					::Array< ::Dynamic> _this2 = ::Array_obj< ::Dynamic>::__new(1)->init(0,::little::tools::InterpTokensSimple_obj::IDENTIFIER_dyn())->copy();
HXDLIN( 697)					::Array< ::String > result2 = ::Array_obj< ::String >::__new(_this2->length);
HXDLIN( 697)					{
HXLINE( 697)						int _g4 = 0;
HXDLIN( 697)						int _g5 = _this2->length;
HXDLIN( 697)						while((_g4 < _g5)){
HXLINE( 697)							_g4 = (_g4 + 1);
HXDLIN( 697)							int i2 = (_g4 - 1);
HXDLIN( 697)							{
HXLINE( 697)								::String inValue2 = ::little::tools::TextTools_obj::remove(::Type_obj::enumConstructor(_hx_array_unsafe_get(_this2,i2)),HX_("_",5f,00,00,00)).toLowerCase();
HXDLIN( 697)								result2->__unsafe_set(i2,inValue2);
            							}
            						}
            					}
HXDLIN( 697)					if (result2->contains(::Type_obj::enumConstructor(token).toLowerCase())) {
HXLINE( 697)						_hx_tmp1 = ( (::String)(::Type_obj::enumParameters(token)->__get(0)) );
            					}
            					else {
HXLINE( 697)						_hx_tmp1 = ( (::String)(::Type_obj::enumParameters(::little::interpreter::Interpreter_obj::run(::Array_obj< ::Dynamic>::__new(1)->init(0,token),null()))->__get(0)) );
            					}
HXDLIN( 697)					ident1[0] = _hx_tmp1;
            				}
            				else {
HXLINE( 699)					 ::little::interpreter::Runtime _hx_tmp2 = ::little::Little_obj::runtime;
HXDLIN( 699)					::String _hx_tmp3 = ((HX_("`",60,00,00,00) + ::little::Little_obj::keywords->CONDITION__AFTER) + HX_("` condition must start with a variable to watch (expected definition, found: `",5a,6a,88,2d));
HXDLIN( 699)					_hx_tmp2->throwError(::little::interpreter::InterpTokens_obj::ErrorMessage(((_hx_tmp3 + ::little::tools::PrettyPrinter_obj::stringifyInterpreter(null(),params->__get(0).StaticCast<  ::little::interpreter::InterpTokens >())) + HX_("`)",c9,53,00,00))),null());
HXLINE( 700)					return val;
            				}
            			}
HXLINE( 706)			::Array< ::Dynamic> listener = ::Array_obj< ::Dynamic>::__new(1)->init(0,null());
HXDLIN( 706)			listener[0] =  ::Dynamic(new _hx_Closure_3(listener,ident,params,body));
HXLINE( 714)			::little::Little_obj::runtime->onWriteValue->push(listener->__get(0));
HXLINE( 716)			return val;
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_6) HXARGC(2)
            		 ::little::interpreter::InterpTokens _hx_run(::Array< ::Dynamic> params,::Array< ::Dynamic> body){
            			HX_BEGIN_LOCAL_FUNC_S3(::hx::LocalFunc,_hx_Closure_5,::Array< ::String >,ident,::Array< ::Dynamic>,params,::Array< ::Dynamic>,body) HXARGC(1)
            			void _hx_run(::Array< ::String > setIdentifiers){
            				HX_STACKFRAME(&_hx_pos_0b0d584b35e606f8_735_addConditions)
HXLINE( 736)				bool cond = ( (bool)(::little::tools::Conversion_obj::toHaxeValue(::little::interpreter::Interpreter_obj::calculate(params))) );
HXLINE( 737)				bool listener;
HXDLIN( 737)				if (setIdentifiers->contains(ident->__get(0))) {
HXLINE( 737)					listener = cond;
            				}
            				else {
HXLINE( 737)					listener = false;
            				}
HXDLIN( 737)				if (listener) {
HXLINE( 738)					::little::interpreter::Interpreter_obj::run(body,null());
            				}
            			}
            			HX_END_LOCAL_FUNC1((void))

            			HX_STACKFRAME(&_hx_pos_0b0d584b35e606f8_719_addConditions)
HXLINE( 720)			 ::little::interpreter::InterpTokens val = ::little::interpreter::InterpTokens_obj::NullValue_dyn();
HXLINE( 721)			::Array< ::String > ident = ::Array_obj< ::String >::fromData( _hx_array_data_c62cc60f_93,1);
HXLINE( 722)			::Array< ::Dynamic> _this = ::Array_obj< ::Dynamic>::__new(1)->init(0,::little::tools::InterpTokensSimple_obj::BLOCK_dyn())->copy();
HXDLIN( 722)			::Array< ::String > result = ::Array_obj< ::String >::__new(_this->length);
HXDLIN( 722)			{
HXLINE( 722)				int _g = 0;
HXDLIN( 722)				int _g1 = _this->length;
HXDLIN( 722)				while((_g < _g1)){
HXLINE( 722)					_g = (_g + 1);
HXDLIN( 722)					int i = (_g - 1);
HXDLIN( 722)					{
HXLINE( 722)						::String inValue = ::little::tools::TextTools_obj::remove(::Type_obj::enumConstructor(_hx_array_unsafe_get(_this,i)),HX_("_",5f,00,00,00)).toLowerCase();
HXDLIN( 722)						result->__unsafe_set(i,inValue);
            					}
            				}
            			}
HXDLIN( 722)			if (result->contains(::Type_obj::enumConstructor(params->__get(0).StaticCast<  ::little::interpreter::InterpTokens >()).toLowerCase())) {
HXLINE( 723)				 ::little::interpreter::InterpTokens output = ::little::interpreter::Interpreter_obj::evaluate(params->__get(0).StaticCast<  ::little::interpreter::InterpTokens >(),null());
HXLINE( 724)				::String _hx_tmp = ((((HX_("`",60,00,00,00) + ::little::Little_obj::keywords->CONDITION__WHENEVER) + HX_("` condition that starts with a code block must have it's code block return a `",17,a3,dd,df)) + ::little::Little_obj::keywords->TYPE_STRING) + HX_("` (returned: ",dd,e3,41,77));
HXDLIN( 724)				::little::interpreter::Interpreter_obj::_hx_assert(output,::Array_obj< ::Dynamic>::__new(2)->init(0,::little::tools::InterpTokensSimple_obj::IDENTIFIER_dyn())->init(1,::little::tools::InterpTokensSimple_obj::PROPERTY_ACCESS_dyn()),((_hx_tmp + ::little::tools::PrettyPrinter_obj::stringifyInterpreter(null(),output)) + HX_(")",29,00,00,00)));
HXLINE( 725)				ident[0] = ( (::String)(::little::tools::Conversion_obj::toHaxeValue(output)) );
            			}
            			else {
HXLINE( 726)				::Array< ::Dynamic> _this1 = ::Array_obj< ::Dynamic>::__new(2)->init(0,::little::tools::InterpTokensSimple_obj::IDENTIFIER_dyn())->init(1,::little::tools::InterpTokensSimple_obj::PROPERTY_ACCESS_dyn())->copy();
HXDLIN( 726)				::Array< ::String > result1 = ::Array_obj< ::String >::__new(_this1->length);
HXDLIN( 726)				{
HXLINE( 726)					int _g2 = 0;
HXDLIN( 726)					int _g3 = _this1->length;
HXDLIN( 726)					while((_g2 < _g3)){
HXLINE( 726)						_g2 = (_g2 + 1);
HXDLIN( 726)						int i1 = (_g2 - 1);
HXDLIN( 726)						{
HXLINE( 726)							::String inValue1 = ::little::tools::TextTools_obj::remove(::Type_obj::enumConstructor(_hx_array_unsafe_get(_this1,i1)),HX_("_",5f,00,00,00)).toLowerCase();
HXDLIN( 726)							result1->__unsafe_set(i1,inValue1);
            						}
            					}
            				}
HXDLIN( 726)				if (result1->contains(::Type_obj::enumConstructor(params->__get(0).StaticCast<  ::little::interpreter::InterpTokens >()).toLowerCase())) {
HXLINE( 727)					::Array< ::String > ident1 = ident;
HXDLIN( 727)					 ::little::interpreter::InterpTokens token = params->__get(0).StaticCast<  ::little::interpreter::InterpTokens >();
HXDLIN( 727)					::String _hx_tmp1;
HXDLIN( 727)					::Array< ::Dynamic> _this2 = ::Array_obj< ::Dynamic>::__new(1)->init(0,::little::tools::InterpTokensSimple_obj::IDENTIFIER_dyn())->copy();
HXDLIN( 727)					::Array< ::String > result2 = ::Array_obj< ::String >::__new(_this2->length);
HXDLIN( 727)					{
HXLINE( 727)						int _g4 = 0;
HXDLIN( 727)						int _g5 = _this2->length;
HXDLIN( 727)						while((_g4 < _g5)){
HXLINE( 727)							_g4 = (_g4 + 1);
HXDLIN( 727)							int i2 = (_g4 - 1);
HXDLIN( 727)							{
HXLINE( 727)								::String inValue2 = ::little::tools::TextTools_obj::remove(::Type_obj::enumConstructor(_hx_array_unsafe_get(_this2,i2)),HX_("_",5f,00,00,00)).toLowerCase();
HXDLIN( 727)								result2->__unsafe_set(i2,inValue2);
            							}
            						}
            					}
HXDLIN( 727)					if (result2->contains(::Type_obj::enumConstructor(token).toLowerCase())) {
HXLINE( 727)						_hx_tmp1 = ( (::String)(::Type_obj::enumParameters(token)->__get(0)) );
            					}
            					else {
HXLINE( 727)						_hx_tmp1 = ( (::String)(::Type_obj::enumParameters(::little::interpreter::Interpreter_obj::run(::Array_obj< ::Dynamic>::__new(1)->init(0,token),null()))->__get(0)) );
            					}
HXDLIN( 727)					ident1[0] = _hx_tmp1;
            				}
            				else {
HXLINE( 729)					 ::little::interpreter::Runtime _hx_tmp2 = ::little::Little_obj::runtime;
HXDLIN( 729)					::String _hx_tmp3 = ((HX_("`",60,00,00,00) + ::little::Little_obj::keywords->CONDITION__WHENEVER) + HX_("` condition must start with a variable to watch (expected definition, found: `",5a,6a,88,2d));
HXDLIN( 729)					_hx_tmp2->throwError(::little::interpreter::InterpTokens_obj::ErrorMessage(((_hx_tmp3 + ::little::tools::PrettyPrinter_obj::stringifyInterpreter(null(),params->__get(0).StaticCast<  ::little::interpreter::InterpTokens >())) + HX_("`)",c9,53,00,00))),null());
HXLINE( 730)					return val;
            				}
            			}
HXLINE( 735)			 ::Dynamic listener =  ::Dynamic(new _hx_Closure_5(ident,params,body));
HXLINE( 742)			::little::Little_obj::runtime->onWriteValue->push(listener);
HXLINE( 744)			return val;
            		}
            		HX_END_LOCAL_FUNC2(return)

            	HX_STACKFRAME(&_hx_pos_0b0d584b35e606f8_541_addConditions)
HXLINE( 542)		::little::Little_obj::plugin->registerCondition(::little::Little_obj::keywords->CONDITION__WHILE_LOOP,HX_("A loop that executes code until the condition is not met",3c,2b,63,eb), ::Dynamic(new _hx_Closure_0()));
HXLINE( 566)		::little::Little_obj::plugin->registerCondition(::little::Little_obj::keywords->CONDITION__IF,HX_("Executes the following block of code if the given condition is true.",87,a7,66,82), ::Dynamic(new _hx_Closure_1()));
HXLINE( 580)		::little::Little_obj::plugin->registerCondition(::little::Little_obj::keywords->CONDITION__FOR_LOOP,HX_("A loop that executes code while changing a variable, until it meets a condition",7b,7e,27,f9), ::Dynamic(new _hx_Closure_2()));
HXLINE( 688)		::little::Little_obj::plugin->registerCondition(::little::Little_obj::keywords->CONDITION__AFTER,null(), ::Dynamic(new _hx_Closure_4()));
HXLINE( 719)		::little::Little_obj::plugin->registerCondition(::little::Little_obj::keywords->CONDITION__WHENEVER,null(), ::Dynamic(new _hx_Closure_6()));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(PrepareRun_obj,addConditions,(void))


PrepareRun_obj::PrepareRun_obj()
{
}

bool PrepareRun_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 8:
		if (HX_FIELD_EQ(inName,"prepared") ) { outValue = ( prepared ); return true; }
		if (HX_FIELD_EQ(inName,"addTypes") ) { outValue = addTypes_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"addProps") ) { outValue = addProps_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"addSigns") ) { outValue = addSigns_dyn(); return true; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"addFunctions") ) { outValue = addFunctions_dyn(); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"addConditions") ) { outValue = addConditions_dyn(); return true; }
	}
	return false;
}

bool PrepareRun_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 8:
		if (HX_FIELD_EQ(inName,"prepared") ) { prepared=ioValue.Cast< bool >(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *PrepareRun_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo PrepareRun_obj_sStaticStorageInfo[] = {
	{::hx::fsBool,(void *) &PrepareRun_obj::prepared,HX_("prepared",fd,c4,01,aa)},
	{ ::hx::fsUnknown, 0, null()}
};
#endif

static void PrepareRun_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(PrepareRun_obj::prepared,"prepared");
};

#ifdef HXCPP_VISIT_ALLOCS
static void PrepareRun_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(PrepareRun_obj::prepared,"prepared");
};

#endif

::hx::Class PrepareRun_obj::__mClass;

static ::String PrepareRun_obj_sStaticFields[] = {
	HX_("prepared",fd,c4,01,aa),
	HX_("addTypes",98,96,28,94),
	HX_("addFunctions",fa,2b,57,b3),
	HX_("addProps",8f,0d,ed,41),
	HX_("addSigns",b5,cb,27,f6),
	HX_("addConditions",f9,c7,81,1b),
	::String(null())
};

void PrepareRun_obj::__register()
{
	PrepareRun_obj _hx_dummy;
	PrepareRun_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("little.tools.PrepareRun",0f,c6,2c,c6);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &PrepareRun_obj::__GetStatic;
	__mClass->mSetStaticField = &PrepareRun_obj::__SetStatic;
	__mClass->mMarkFunc = PrepareRun_obj_sMarkStatics;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(PrepareRun_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< PrepareRun_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = PrepareRun_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = PrepareRun_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = PrepareRun_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void PrepareRun_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_0b0d584b35e606f8_31_boot)
HXDLIN(  31)		prepared = false;
            	}
}

} // end namespace little
} // end namespace tools
