// Generated by Haxe 4.3.1
#include <hxcpp.h>

#ifndef INCLUDED_38344beec7696400
#define INCLUDED_38344beec7696400
#include "cpp/Int64.h"
#endif
#ifndef INCLUDED_95f339a1d026d52c
#define INCLUDED_95f339a1d026d52c
#include "hxMath.h"
#endif
#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_vision_ds_Point2D
#include <vision/ds/Point2D.h>
#endif
#ifndef INCLUDED_vision_ds__IntPoint2D_IntPoint2D_Impl_
#include <vision/ds/_IntPoint2D/IntPoint2D_Impl_.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_2a913c4e20da730a_47_get_y,"vision.ds._IntPoint2D.IntPoint2D_Impl_","get_y",0x64ad91ca,"vision.ds._IntPoint2D.IntPoint2D_Impl_.get_y","vision/ds/IntPoint2D.hx",47,0xca24a912)
HX_LOCAL_STACK_FRAME(_hx_pos_2a913c4e20da730a_55_get_x,"vision.ds._IntPoint2D.IntPoint2D_Impl_","get_x",0x64ad91c9,"vision.ds._IntPoint2D.IntPoint2D_Impl_.get_x","vision/ds/IntPoint2D.hx",55,0xca24a912)
HX_LOCAL_STACK_FRAME(_hx_pos_2a913c4e20da730a_61_set_y,"vision.ds._IntPoint2D.IntPoint2D_Impl_","set_y",0x4d7c87d6,"vision.ds._IntPoint2D.IntPoint2D_Impl_.set_y","vision/ds/IntPoint2D.hx",61,0xca24a912)
HX_LOCAL_STACK_FRAME(_hx_pos_2a913c4e20da730a_70_set_x,"vision.ds._IntPoint2D.IntPoint2D_Impl_","set_x",0x4d7c87d5,"vision.ds._IntPoint2D.IntPoint2D_Impl_.set_x","vision/ds/IntPoint2D.hx",70,0xca24a912)
HX_LOCAL_STACK_FRAME(_hx_pos_2a913c4e20da730a_80_toPoint2D,"vision.ds._IntPoint2D.IntPoint2D_Impl_","toPoint2D",0xb9cb7d61,"vision.ds._IntPoint2D.IntPoint2D_Impl_.toPoint2D","vision/ds/IntPoint2D.hx",80,0xca24a912)
HX_LOCAL_STACK_FRAME(_hx_pos_2a913c4e20da730a_84_fromPoint2D,"vision.ds._IntPoint2D.IntPoint2D_Impl_","fromPoint2D",0xd8627bd2,"vision.ds._IntPoint2D.IntPoint2D_Impl_.fromPoint2D","vision/ds/IntPoint2D.hx",84,0xca24a912)
HX_LOCAL_STACK_FRAME(_hx_pos_2a913c4e20da730a_91_toString,"vision.ds._IntPoint2D.IntPoint2D_Impl_","toString",0xcba16c72,"vision.ds._IntPoint2D.IntPoint2D_Impl_.toString","vision/ds/IntPoint2D.hx",91,0xca24a912)
HX_LOCAL_STACK_FRAME(_hx_pos_2a913c4e20da730a_98_copy,"vision.ds._IntPoint2D.IntPoint2D_Impl_","copy",0x4ac07c7b,"vision.ds._IntPoint2D.IntPoint2D_Impl_.copy","vision/ds/IntPoint2D.hx",98,0xca24a912)
HX_LOCAL_STACK_FRAME(_hx_pos_2a913c4e20da730a_110_distanceTo,"vision.ds._IntPoint2D.IntPoint2D_Impl_","distanceTo",0x45d26d56,"vision.ds._IntPoint2D.IntPoint2D_Impl_.distanceTo","vision/ds/IntPoint2D.hx",110,0xca24a912)
HX_LOCAL_STACK_FRAME(_hx_pos_2a913c4e20da730a_123_degreesTo,"vision.ds._IntPoint2D.IntPoint2D_Impl_","degreesTo",0xeaae567c,"vision.ds._IntPoint2D.IntPoint2D_Impl_.degreesTo","vision/ds/IntPoint2D.hx",123,0xca24a912)
HX_LOCAL_STACK_FRAME(_hx_pos_2a913c4e20da730a_135_radiansTo,"vision.ds._IntPoint2D.IntPoint2D_Impl_","radiansTo",0x317a4207,"vision.ds._IntPoint2D.IntPoint2D_Impl_.radiansTo","vision/ds/IntPoint2D.hx",135,0xca24a912)
namespace vision{
namespace ds{
namespace _IntPoint2D{

void IntPoint2D_Impl__obj::__construct() { }

Dynamic IntPoint2D_Impl__obj::__CreateEmpty() { return new IntPoint2D_Impl__obj; }

void *IntPoint2D_Impl__obj::_hx_vtable = 0;

Dynamic IntPoint2D_Impl__obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< IntPoint2D_Impl__obj > _hx_result = new IntPoint2D_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

bool IntPoint2D_Impl__obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x1ef91f8e;
}

int IntPoint2D_Impl__obj::get_y(::cpp::Int64 this1){
            	HX_STACKFRAME(&_hx_pos_2a913c4e20da730a_47_get_y)
HXDLIN(  47)		return _hx_int64_low(this1);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(IntPoint2D_Impl__obj,get_y,return )

int IntPoint2D_Impl__obj::get_x(::cpp::Int64 this1){
            	HX_STACKFRAME(&_hx_pos_2a913c4e20da730a_55_get_x)
HXDLIN(  55)		return _hx_int64_high(this1);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(IntPoint2D_Impl__obj,get_x,return )

int IntPoint2D_Impl__obj::set_y(::cpp::Int64 this1,int y){
            	HX_STACKFRAME(&_hx_pos_2a913c4e20da730a_61_set_y)
HXLINE(  63)		this1 = _hx_int64_make(_hx_int64_high(this1),y);
HXLINE(  67)		return y;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(IntPoint2D_Impl__obj,set_y,return )

int IntPoint2D_Impl__obj::set_x(::cpp::Int64 this1,int x){
            	HX_STACKFRAME(&_hx_pos_2a913c4e20da730a_70_set_x)
HXLINE(  72)		this1 = _hx_int64_make(x,_hx_int64_low(this1));
HXLINE(  76)		return x;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(IntPoint2D_Impl__obj,set_x,return )

 ::vision::ds::Point2D IntPoint2D_Impl__obj::toPoint2D(::cpp::Int64 this1){
            	HX_GC_STACKFRAME(&_hx_pos_2a913c4e20da730a_80_toPoint2D)
HXDLIN(  80)		int _hx_tmp = _hx_int64_high(this1);
HXDLIN(  80)		return  ::vision::ds::Point2D_obj::__alloc( HX_CTX ,_hx_tmp,_hx_int64_low(this1));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(IntPoint2D_Impl__obj,toPoint2D,return )

::cpp::Int64 IntPoint2D_Impl__obj::fromPoint2D( ::vision::ds::Point2D p){
            	HX_STACKFRAME(&_hx_pos_2a913c4e20da730a_84_fromPoint2D)
HXDLIN(  84)		int x = ::Std_obj::_hx_int(p->x);
HXDLIN(  84)		return _hx_int64_make(x,::Std_obj::_hx_int(p->y));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(IntPoint2D_Impl__obj,fromPoint2D,return )

::String IntPoint2D_Impl__obj::toString(::cpp::Int64 this1){
            	HX_STACKFRAME(&_hx_pos_2a913c4e20da730a_91_toString)
HXDLIN(  91)		::String _hx_tmp = ((HX_("(",28,00,00,00) + _hx_int64_high(this1)) + HX_(", ",74,26,00,00));
HXDLIN(  91)		return ((_hx_tmp + _hx_int64_low(this1)) + HX_(")",29,00,00,00));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(IntPoint2D_Impl__obj,toString,return )

::cpp::Int64 IntPoint2D_Impl__obj::copy(::cpp::Int64 this1){
            	HX_STACKFRAME(&_hx_pos_2a913c4e20da730a_98_copy)
HXDLIN(  98)		int x = _hx_int64_high(this1);
HXDLIN(  98)		return _hx_int64_make(x,_hx_int64_low(this1));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(IntPoint2D_Impl__obj,copy,return )

Float IntPoint2D_Impl__obj::distanceTo(::cpp::Int64 this1,::cpp::Int64 point){
            	HX_STACKFRAME(&_hx_pos_2a913c4e20da730a_110_distanceTo)
HXDLIN( 110)		int _hx_tmp = _hx_int64_high(this1);
HXDLIN( 110)		Float _hx_tmp1 = ::Math_obj::pow(( (Float)((_hx_tmp - _hx_int64_high(point))) ),( (Float)(2) ));
HXDLIN( 110)		int _hx_tmp2 = _hx_int64_low(this1);
HXDLIN( 110)		return ::Math_obj::sqrt((_hx_tmp1 + ::Math_obj::pow(( (Float)((_hx_tmp2 - _hx_int64_low(point))) ),( (Float)(2) ))));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(IntPoint2D_Impl__obj,distanceTo,return )

Float IntPoint2D_Impl__obj::degreesTo(::cpp::Int64 this1, ::vision::ds::Point2D point){
            	HX_STACKFRAME(&_hx_pos_2a913c4e20da730a_123_degreesTo)
HXDLIN( 123)		::cpp::Int64 point1 = this1;
HXDLIN( 123)		Float point2 = point->x;
HXDLIN( 123)		Float x = (point2 - ( (Float)(_hx_int64_high(point1)) ));
HXDLIN( 123)		Float point3 = point->y;
HXDLIN( 123)		Float y = (point3 - ( (Float)(_hx_int64_low(point1)) ));
HXDLIN( 123)		return ((::Math_obj::atan2(x,y) * ( (Float)(180) )) / ::Math_obj::PI);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(IntPoint2D_Impl__obj,degreesTo,return )

Float IntPoint2D_Impl__obj::radiansTo(::cpp::Int64 this1, ::vision::ds::Point2D point){
            	HX_STACKFRAME(&_hx_pos_2a913c4e20da730a_135_radiansTo)
HXDLIN( 135)		::cpp::Int64 point1 = this1;
HXDLIN( 135)		Float point2 = point->x;
HXDLIN( 135)		Float x = (point2 - ( (Float)(_hx_int64_high(point1)) ));
HXDLIN( 135)		Float point3 = point->y;
HXDLIN( 135)		Float y = (point3 - ( (Float)(_hx_int64_low(point1)) ));
HXDLIN( 135)		return ((::Math_obj::atan2(x,y) * ( (Float)(180) )) / ::Math_obj::PI);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(IntPoint2D_Impl__obj,radiansTo,return )


IntPoint2D_Impl__obj::IntPoint2D_Impl__obj()
{
}

bool IntPoint2D_Impl__obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"copy") ) { outValue = copy_dyn(); return true; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"get_y") ) { outValue = get_y_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_x") ) { outValue = get_x_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_y") ) { outValue = set_y_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_x") ) { outValue = set_x_dyn(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"toString") ) { outValue = toString_dyn(); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"toPoint2D") ) { outValue = toPoint2D_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"degreesTo") ) { outValue = degreesTo_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"radiansTo") ) { outValue = radiansTo_dyn(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"distanceTo") ) { outValue = distanceTo_dyn(); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"fromPoint2D") ) { outValue = fromPoint2D_dyn(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *IntPoint2D_Impl__obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *IntPoint2D_Impl__obj_sStaticStorageInfo = 0;
#endif

::hx::Class IntPoint2D_Impl__obj::__mClass;

static ::String IntPoint2D_Impl__obj_sStaticFields[] = {
	HX_("get_y",50,a5,60,91),
	HX_("get_x",4f,a5,60,91),
	HX_("set_y",5c,9b,2f,7a),
	HX_("set_x",5b,9b,2f,7a),
	HX_("toPoint2D",e7,cb,b5,80),
	HX_("fromPoint2D",d8,f7,61,e9),
	HX_("toString",ac,d0,6e,38),
	HX_("copy",b5,bb,c4,41),
	HX_("distanceTo",10,d4,ec,8b),
	HX_("degreesTo",02,a5,98,b1),
	HX_("radiansTo",8d,90,64,f8),
	::String(null())
};

void IntPoint2D_Impl__obj::__register()
{
	IntPoint2D_Impl__obj _hx_dummy;
	IntPoint2D_Impl__obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("vision.ds._IntPoint2D.IntPoint2D_Impl_",68,55,bc,b4);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &IntPoint2D_Impl__obj::__GetStatic;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(IntPoint2D_Impl__obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< IntPoint2D_Impl__obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = IntPoint2D_Impl__obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = IntPoint2D_Impl__obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace vision
} // end namespace ds
} // end namespace _IntPoint2D
