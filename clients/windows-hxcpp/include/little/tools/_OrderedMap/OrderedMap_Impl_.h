// Generated by Haxe 4.3.3
#ifndef INCLUDED_little_tools__OrderedMap_OrderedMap_Impl_
#define INCLUDED_little_tools__OrderedMap_OrderedMap_Impl_

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(little,tools,BaseOrderedMap)
HX_DECLARE_CLASS3(little,tools,_OrderedMap,OrderedMap_Impl_)

namespace little{
namespace tools{
namespace _OrderedMap{


class HXCPP_CLASS_ATTRIBUTES OrderedMap_Impl__obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef OrderedMap_Impl__obj OBJ_;
		OrderedMap_Impl__obj();

	public:
		enum { _hx_ClassId = 0x04f92858 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="little.tools._OrderedMap.OrderedMap_Impl_")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"little.tools._OrderedMap.OrderedMap_Impl_"); }

		inline static ::hx::ObjectPtr< OrderedMap_Impl__obj > __new() {
			::hx::ObjectPtr< OrderedMap_Impl__obj > __this = new OrderedMap_Impl__obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< OrderedMap_Impl__obj > __alloc(::hx::Ctx *_hx_ctx) {
			OrderedMap_Impl__obj *__this = (OrderedMap_Impl__obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(OrderedMap_Impl__obj), false, "little.tools._OrderedMap.OrderedMap_Impl_"));
			*(void **)__this = OrderedMap_Impl__obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~OrderedMap_Impl__obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("OrderedMap_Impl_",2f,e2,4c,39); }

		static  ::little::tools::BaseOrderedMap _new();
		static ::Dynamic _new_dyn();

		static  ::Dynamic get( ::little::tools::BaseOrderedMap this1, ::Dynamic k);
		static ::Dynamic get_dyn();

		static void set( ::little::tools::BaseOrderedMap this1, ::Dynamic k, ::Dynamic v);
		static ::Dynamic set_dyn();

};

} // end namespace little
} // end namespace tools
} // end namespace _OrderedMap

#endif /* INCLUDED_little_tools__OrderedMap_OrderedMap_Impl_ */ 
