// Generated by Haxe 4.3.3
#ifndef INCLUDED_vision_ds_Rectangle
#define INCLUDED_vision_ds_Rectangle

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_STACK_FRAME(_hx_pos_40061b8343164eb6_4_new)
HX_DECLARE_CLASS2(vision,ds,Rectangle)

namespace vision{
namespace ds{


class HXCPP_CLASS_ATTRIBUTES Rectangle_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef Rectangle_obj OBJ_;
		Rectangle_obj();

	public:
		enum { _hx_ClassId = 0x029ef5d4 };

		void __construct(int x,int y,int width,int height);
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="vision.ds.Rectangle")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"vision.ds.Rectangle"); }

		inline static ::hx::ObjectPtr< Rectangle_obj > __new(int x,int y,int width,int height) {
			::hx::ObjectPtr< Rectangle_obj > __this = new Rectangle_obj();
			__this->__construct(x,y,width,height);
			return __this;
		}

		inline static ::hx::ObjectPtr< Rectangle_obj > __alloc(::hx::Ctx *_hx_ctx,int x,int y,int width,int height) {
			Rectangle_obj *__this = (Rectangle_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(Rectangle_obj), false, "vision.ds.Rectangle"));
			*(void **)__this = Rectangle_obj::_hx_vtable;
{
            	HX_STACKFRAME(&_hx_pos_40061b8343164eb6_4_new)
HXDLIN(   4)		( ( ::vision::ds::Rectangle)(__this) )->x = x;
HXDLIN(   4)		( ( ::vision::ds::Rectangle)(__this) )->y = y;
HXDLIN(   4)		( ( ::vision::ds::Rectangle)(__this) )->width = width;
HXDLIN(   4)		( ( ::vision::ds::Rectangle)(__this) )->height = height;
            	}
		
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~Rectangle_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("Rectangle",0f,b4,4f,bb); }

		int x;
		int y;
		int width;
		int height;
};

} // end namespace vision
} // end namespace ds

#endif /* INCLUDED_vision_ds_Rectangle */ 
