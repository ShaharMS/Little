// Generated by Haxe 4.3.3
#ifndef INCLUDED_vision_ds_Queue
#define INCLUDED_vision_ds_Queue

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(vision,ds,Queue)
HX_DECLARE_CLASS2(vision,ds,QueueCell)

namespace vision{
namespace ds{


class HXCPP_CLASS_ATTRIBUTES Queue_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef Queue_obj OBJ_;
		Queue_obj();

	public:
		enum { _hx_ClassId = 0x0c776a9a };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="vision.ds.Queue")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"vision.ds.Queue"); }
		static ::hx::ObjectPtr< Queue_obj > __new();
		static ::hx::ObjectPtr< Queue_obj > __alloc(::hx::Ctx *_hx_ctx);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~Queue_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("Queue",71,fd,17,f1); }

		int length;
		 ::vision::ds::QueueCell first;
		 ::Dynamic iterator();
		::Dynamic iterator_dyn();

		 ::Dynamic dequeue();
		::Dynamic dequeue_dyn();

		 ::Dynamic enqueue( ::Dynamic value);
		::Dynamic enqueue_dyn();

		bool has( ::Dynamic value);
		::Dynamic has_dyn();

		virtual ::String toString();
		::Dynamic toString_dyn();

		 ::vision::ds::QueueCell get_last();
		::Dynamic get_last_dyn();

		 ::vision::ds::QueueCell set_last( ::vision::ds::QueueCell value);
		::Dynamic set_last_dyn();

};

} // end namespace vision
} // end namespace ds

#endif /* INCLUDED_vision_ds_Queue */ 
