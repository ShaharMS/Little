// Generated by Haxe 4.3.4
#ifndef INCLUDED_vision_ds__TransformationMatrix2D_TransformationMatrix2D_Impl_
#define INCLUDED_vision_ds__TransformationMatrix2D_TransformationMatrix2D_Impl_

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(vision,ds,Array2D)
HX_DECLARE_CLASS3(vision,ds,_TransformationMatrix2D,TransformationMatrix2D_Impl_)

namespace vision{
namespace ds{
namespace _TransformationMatrix2D{


class HXCPP_CLASS_ATTRIBUTES TransformationMatrix2D_Impl__obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef TransformationMatrix2D_Impl__obj OBJ_;
		TransformationMatrix2D_Impl__obj();

	public:
		enum { _hx_ClassId = 0x781cfd20 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="vision.ds._TransformationMatrix2D.TransformationMatrix2D_Impl_")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"vision.ds._TransformationMatrix2D.TransformationMatrix2D_Impl_"); }

		inline static ::hx::ObjectPtr< TransformationMatrix2D_Impl__obj > __new() {
			::hx::ObjectPtr< TransformationMatrix2D_Impl__obj > __this = new TransformationMatrix2D_Impl__obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< TransformationMatrix2D_Impl__obj > __alloc(::hx::Ctx *_hx_ctx) {
			TransformationMatrix2D_Impl__obj *__this = (TransformationMatrix2D_Impl__obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(TransformationMatrix2D_Impl__obj), false, "vision.ds._TransformationMatrix2D.TransformationMatrix2D_Impl_"));
			*(void **)__this = TransformationMatrix2D_Impl__obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~TransformationMatrix2D_Impl__obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("TransformationMatrix2D_Impl_",fc,fc,7b,57); }

		static  ::vision::ds::Array2D get_underlying( ::vision::ds::Array2D this1);
		static ::Dynamic get_underlying_dyn();

		static Float get_a( ::vision::ds::Array2D this1);
		static ::Dynamic get_a_dyn();

		static Float set_a( ::vision::ds::Array2D this1,Float a);
		static ::Dynamic set_a_dyn();

		static Float get_b( ::vision::ds::Array2D this1);
		static ::Dynamic get_b_dyn();

		static Float set_b( ::vision::ds::Array2D this1,Float b);
		static ::Dynamic set_b_dyn();

		static Float get_c( ::vision::ds::Array2D this1);
		static ::Dynamic get_c_dyn();

		static Float set_c( ::vision::ds::Array2D this1,Float c);
		static ::Dynamic set_c_dyn();

		static Float get_d( ::vision::ds::Array2D this1);
		static ::Dynamic get_d_dyn();

		static Float set_d( ::vision::ds::Array2D this1,Float d);
		static ::Dynamic set_d_dyn();

		static Float get_e( ::vision::ds::Array2D this1);
		static ::Dynamic get_e_dyn();

		static Float set_e( ::vision::ds::Array2D this1,Float e);
		static ::Dynamic set_e_dyn();

		static Float get_f( ::vision::ds::Array2D this1);
		static ::Dynamic get_f_dyn();

		static Float set_f( ::vision::ds::Array2D this1,Float f);
		static ::Dynamic set_f_dyn();

		static Float get_tx( ::vision::ds::Array2D this1);
		static ::Dynamic get_tx_dyn();

		static Float set_tx( ::vision::ds::Array2D this1,Float tx);
		static ::Dynamic set_tx_dyn();

		static Float get_ty( ::vision::ds::Array2D this1);
		static ::Dynamic get_ty_dyn();

		static Float set_ty( ::vision::ds::Array2D this1,Float ty);
		static ::Dynamic set_ty_dyn();

		static  ::vision::ds::Array2D _new( ::vision::ds::Array2D m);
		static ::Dynamic _new_dyn();

		static  ::vision::ds::Array2D fromMatrix2D( ::vision::ds::Array2D m);
		static ::Dynamic fromMatrix2D_dyn();

};

} // end namespace vision
} // end namespace ds
} // end namespace _TransformationMatrix2D

#endif /* INCLUDED_vision_ds__TransformationMatrix2D_TransformationMatrix2D_Impl_ */ 
