// Generated by Haxe 4.3.3
#include <hxcpp.h>

#ifndef INCLUDED_95f339a1d026d52c
#define INCLUDED_95f339a1d026d52c
#include "hxMath.h"
#endif
#ifndef INCLUDED_EReg
#include <EReg.h>
#endif
#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_StringTools
#include <StringTools.h>
#endif
#ifndef INCLUDED_little_tools_TextTools
#include <little/tools/TextTools.h>
#endif
#ifndef INCLUDED_little_tools__TextTools_MultilangFonts
#include <little/tools/_TextTools/MultilangFonts.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_ade3311c6b7ac1c7_39_replaceLast,"little.tools.TextTools","replaceLast",0xf3d6b63f,"little.tools.TextTools.replaceLast","little/tools/TextTools.hx",39,0x296be5dd)
HX_LOCAL_STACK_FRAME(_hx_pos_ade3311c6b7ac1c7_55_replaceIfLast,"little.tools.TextTools","replaceIfLast",0x33b97cfc,"little.tools.TextTools.replaceIfLast","little/tools/TextTools.hx",55,0x296be5dd)
HX_LOCAL_STACK_FRAME(_hx_pos_ade3311c6b7ac1c7_69_replaceFirst,"little.tools.TextTools","replaceFirst",0xf8ea3827,"little.tools.TextTools.replaceFirst","little/tools/TextTools.hx",69,0x296be5dd)
HX_LOCAL_STACK_FRAME(_hx_pos_ade3311c6b7ac1c7_84_splitOnFirst,"little.tools.TextTools","splitOnFirst",0xe28197a2,"little.tools.TextTools.splitOnFirst","little/tools/TextTools.hx",84,0x296be5dd)
HX_LOCAL_STACK_FRAME(_hx_pos_ade3311c6b7ac1c7_101_splitOnLast,"little.tools.TextTools","splitOnLast",0x061b1f24,"little.tools.TextTools.splitOnLast","little/tools/TextTools.hx",101,0x296be5dd)
HX_LOCAL_STACK_FRAME(_hx_pos_ade3311c6b7ac1c7_118_splitOnParagraph,"little.tools.TextTools","splitOnParagraph",0x905fdfe0,"little.tools.TextTools.splitOnParagraph","little/tools/TextTools.hx",118,0x296be5dd)
HX_LOCAL_STACK_FRAME(_hx_pos_ade3311c6b7ac1c7_141_filter,"little.tools.TextTools","filter",0x922bfa43,"little.tools.TextTools.filter","little/tools/TextTools.hx",141,0x296be5dd)
HX_LOCAL_STACK_FRAME(_hx_pos_ade3311c6b7ac1c7_177_indexesOf,"little.tools.TextTools","indexesOf",0x797caf8c,"little.tools.TextTools.indexesOf","little/tools/TextTools.hx",177,0x296be5dd)
HX_LOCAL_STACK_FRAME(_hx_pos_ade3311c6b7ac1c7_198_indexesOfSubs,"little.tools.TextTools","indexesOfSubs",0xda4f389f,"little.tools.TextTools.indexesOfSubs","little/tools/TextTools.hx",198,0x296be5dd)
HX_LOCAL_STACK_FRAME(_hx_pos_ade3311c6b7ac1c7_225_indexesFromArray,"little.tools.TextTools","indexesFromArray",0x4aeff1fa,"little.tools.TextTools.indexesFromArray","little/tools/TextTools.hx",225,0x296be5dd)
HX_LOCAL_STACK_FRAME(_hx_pos_ade3311c6b7ac1c7_235_indexesFromEReg,"little.tools.TextTools","indexesFromEReg",0xeac700ae,"little.tools.TextTools.indexesFromEReg","little/tools/TextTools.hx",235,0x296be5dd)
HX_LOCAL_STACK_FRAME(_hx_pos_ade3311c6b7ac1c7_268_multiply,"little.tools.TextTools","multiply",0xf6d7b56f,"little.tools.TextTools.multiply","little/tools/TextTools.hx",268,0x296be5dd)
HX_LOCAL_STACK_FRAME(_hx_pos_ade3311c6b7ac1c7_288_subtract,"little.tools.TextTools","subtract",0x545c485f,"little.tools.TextTools.subtract","little/tools/TextTools.hx",288,0x296be5dd)
HX_LOCAL_STACK_FRAME(_hx_pos_ade3311c6b7ac1c7_298_loremIpsum,"little.tools.TextTools","loremIpsum",0x812a7dd8,"little.tools.TextTools.loremIpsum","little/tools/TextTools.hx",298,0x296be5dd)
HX_LOCAL_STACK_FRAME(_hx_pos_ade3311c6b7ac1c7_327_sortByLength,"little.tools.TextTools","sortByLength",0xdefc2066,"little.tools.TextTools.sortByLength","little/tools/TextTools.hx",327,0x296be5dd)
HX_LOCAL_STACK_FRAME(_hx_pos_ade3311c6b7ac1c7_324_sortByLength,"little.tools.TextTools","sortByLength",0xdefc2066,"little.tools.TextTools.sortByLength","little/tools/TextTools.hx",324,0x296be5dd)
HX_LOCAL_STACK_FRAME(_hx_pos_ade3311c6b7ac1c7_342_sortByValue,"little.tools.TextTools","sortByValue",0x94bbe3f1,"little.tools.TextTools.sortByValue","little/tools/TextTools.hx",342,0x296be5dd)
HX_LOCAL_STACK_FRAME(_hx_pos_ade3311c6b7ac1c7_339_sortByValue,"little.tools.TextTools","sortByValue",0x94bbe3f1,"little.tools.TextTools.sortByValue","little/tools/TextTools.hx",339,0x296be5dd)
HX_LOCAL_STACK_FRAME(_hx_pos_ade3311c6b7ac1c7_357_sortByIntValue,"little.tools.TextTools","sortByIntValue",0x09040b82,"little.tools.TextTools.sortByIntValue","little/tools/TextTools.hx",357,0x296be5dd)
HX_LOCAL_STACK_FRAME(_hx_pos_ade3311c6b7ac1c7_354_sortByIntValue,"little.tools.TextTools","sortByIntValue",0x09040b82,"little.tools.TextTools.sortByIntValue","little/tools/TextTools.hx",354,0x296be5dd)
HX_LOCAL_STACK_FRAME(_hx_pos_ade3311c6b7ac1c7_370_getLineIndexOfChar,"little.tools.TextTools","getLineIndexOfChar",0x11f367c0,"little.tools.TextTools.getLineIndexOfChar","little/tools/TextTools.hx",370,0x296be5dd)
HX_LOCAL_STACK_FRAME(_hx_pos_ade3311c6b7ac1c7_392_countOccurrencesOf,"little.tools.TextTools","countOccurrencesOf",0x52d3a975,"little.tools.TextTools.countOccurrencesOf","little/tools/TextTools.hx",392,0x296be5dd)
HX_LOCAL_STACK_FRAME(_hx_pos_ade3311c6b7ac1c7_409_contains,"little.tools.TextTools","contains",0x88c62d6a,"little.tools.TextTools.contains","little/tools/TextTools.hx",409,0x296be5dd)
HX_LOCAL_STACK_FRAME(_hx_pos_ade3311c6b7ac1c7_424_remove,"little.tools.TextTools","remove",0x117f76cf,"little.tools.TextTools.remove","little/tools/TextTools.hx",424,0x296be5dd)
HX_LOCAL_STACK_FRAME(_hx_pos_ade3311c6b7ac1c7_439_replace,"little.tools.TextTools","replace",0xf630a749,"little.tools.TextTools.replace","little/tools/TextTools.hx",439,0x296be5dd)
HX_LOCAL_STACK_FRAME(_hx_pos_ade3311c6b7ac1c7_452_reverse,"little.tools.TextTools","reverse",0x66049837,"little.tools.TextTools.reverse","little/tools/TextTools.hx",452,0x296be5dd)
HX_LOCAL_STACK_FRAME(_hx_pos_ade3311c6b7ac1c7_466_insert,"little.tools.TextTools","insert",0xaad41dc4,"little.tools.TextTools.insert","little/tools/TextTools.hx",466,0x296be5dd)
HX_LOCAL_STACK_FRAME(_hx_pos_ade3311c6b7ac1c7_473_parseBool,"little.tools.TextTools","parseBool",0x2defe452,"little.tools.TextTools.parseBool","little/tools/TextTools.hx",473,0x296be5dd)
HX_LOCAL_STACK_FRAME(_hx_pos_ade3311c6b7ac1c7_482_containsAny,"little.tools.TextTools","containsAny",0xbbd643a2,"little.tools.TextTools.containsAny","little/tools/TextTools.hx",482,0x296be5dd)
HX_LOCAL_STACK_FRAME(_hx_pos_ade3311c6b7ac1c7_28_boot,"little.tools.TextTools","boot",0x7df215fd,"little.tools.TextTools.boot","little/tools/TextTools.hx",28,0x296be5dd)
HX_LOCAL_STACK_FRAME(_hx_pos_ade3311c6b7ac1c7_489_boot,"little.tools.TextTools","boot",0x7df215fd,"little.tools.TextTools.boot","little/tools/TextTools.hx",489,0x296be5dd)
namespace little{
namespace tools{

void TextTools_obj::__construct() { }

Dynamic TextTools_obj::__CreateEmpty() { return new TextTools_obj; }

void *TextTools_obj::_hx_vtable = 0;

Dynamic TextTools_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< TextTools_obj > _hx_result = new TextTools_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool TextTools_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x35935509;
}

 ::little::tools::_TextTools::MultilangFonts TextTools_obj::fonts;

::String TextTools_obj::replaceLast(::String string,::String replace,::String by){
            	HX_STACKFRAME(&_hx_pos_ade3311c6b7ac1c7_39_replaceLast)
HXLINE(  40)		int place = string.lastIndexOf(replace,null());
HXLINE(  41)		if ((place == -1)) {
HXLINE(  41)			return string;
            		}
HXLINE(  42)		::String result = (string.substring(0,place) + by);
HXDLIN(  42)		::String result1 = (result + string.substring((place + replace.length),null()));
HXLINE(  43)		return result1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(TextTools_obj,replaceLast,return )

::String TextTools_obj::replaceIfLast(::String string,::String replace,::String by){
            	HX_STACKFRAME(&_hx_pos_ade3311c6b7ac1c7_55_replaceIfLast)
HXLINE(  56)		if (::StringTools_obj::endsWith(string,replace)) {
HXLINE(  56)			return ::little::tools::TextTools_obj::replaceLast(string,replace,by);
            		}
HXLINE(  57)		return string;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(TextTools_obj,replaceIfLast,return )

::String TextTools_obj::replaceFirst(::String string,::String replace,::String by){
            	HX_STACKFRAME(&_hx_pos_ade3311c6b7ac1c7_69_replaceFirst)
HXLINE(  70)		int place = string.indexOf(replace,null());
HXLINE(  71)		if ((place == -1)) {
HXLINE(  71)			return string;
            		}
HXLINE(  72)		::String result = (string.substring(0,place) + by);
HXDLIN(  72)		::String result1 = (result + string.substring((place + replace.length),null()));
HXLINE(  73)		return result1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(TextTools_obj,replaceFirst,return )

::Array< ::String > TextTools_obj::splitOnFirst(::String string,::String delimiter){
            	HX_STACKFRAME(&_hx_pos_ade3311c6b7ac1c7_84_splitOnFirst)
HXLINE(  85)		int place = string.indexOf(delimiter,null());
HXLINE(  86)		::Array< ::String > result = ::Array_obj< ::String >::__new();
HXLINE(  87)		result->push(string.substring(0,place));
HXLINE(  88)		result->push(string.substring((place + delimiter.length),null()));
HXLINE(  89)		return result;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(TextTools_obj,splitOnFirst,return )

::Array< ::String > TextTools_obj::splitOnLast(::String string,::String delimiter){
            	HX_STACKFRAME(&_hx_pos_ade3311c6b7ac1c7_101_splitOnLast)
HXLINE( 102)		int place = string.lastIndexOf(delimiter,null());
HXLINE( 103)		::Array< ::String > result = ::Array_obj< ::String >::__new();
HXLINE( 104)		result->push(string.substring(0,place));
HXLINE( 105)		result->push(string.substring((place + delimiter.length),null()));
HXLINE( 106)		return result;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(TextTools_obj,splitOnLast,return )

::Array< ::String > TextTools_obj::splitOnParagraph(::String text){
            	HX_GC_STACKFRAME(&_hx_pos_ade3311c6b7ac1c7_118_splitOnParagraph)
HXDLIN( 118)		return  ::EReg_obj::__alloc( HX_CTX ,HX_("<p>|</p>|\n\n|\r\n\r\n",ed,a1,7c,d7),HX_("g",67,00,00,00))->split(text);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(TextTools_obj,splitOnParagraph,return )

::String TextTools_obj::filter(::String text, ::Dynamic filter){
            	HX_GC_STACKFRAME(&_hx_pos_ade3311c6b7ac1c7_141_filter)
HXLINE( 142)		if (::Std_obj::isOfType(filter,::hx::ClassOf< ::EReg >())) {
HXLINE( 144)			 ::EReg pattern = ( ( ::EReg)(filter) );
HXLINE( 145)			text = pattern->replace(text,HX_("",00,00,00,00));
HXLINE( 146)			return text;
            		}
HXLINE( 148)		::String patternType = ( (::String)(filter) );
HXLINE( 149)		if ((::little::tools::TextTools_obj::replaceFirst(text,HX_("/",2f,00,00,00),HX_("",00,00,00,00)) != patternType)) {
HXLINE( 151)			 ::EReg regexDetector =  ::EReg_obj::__alloc( HX_CTX ,HX_("^~?/(.*)/(.*)$",25,61,e3,96),HX_("s",73,00,00,00));
HXLINE( 152)			regexDetector->match(patternType);
HXLINE( 153)			::String _hx_tmp = regexDetector->matched(1);
HXDLIN( 153)			return ( (::String)(filter(text, ::EReg_obj::__alloc( HX_CTX ,_hx_tmp,regexDetector->matched(2)))) );
            		}
HXLINE( 155)		::String _hx_switch_0 = patternType.toLowerCase();
            		if (  (_hx_switch_0==HX_("alpha",5e,a7,96,21)) ){
HXLINE( 158)			return ( (::String)(filter(text, ::EReg_obj::__alloc( HX_CTX ,HX_("[^a-zA-Z]",9a,8e,03,26),HX_("g",67,00,00,00)))) );
HXDLIN( 158)			goto _hx_goto_6;
            		}
            		if (  (_hx_switch_0==HX_("alphanumeric",2f,03,e3,71)) ){
HXLINE( 160)			return ( (::String)(filter(text, ::EReg_obj::__alloc( HX_CTX ,HX_("[^a-zA-Z0-9]",24,cb,57,62),HX_("g",67,00,00,00)))) );
HXDLIN( 160)			goto _hx_goto_6;
            		}
            		if (  (_hx_switch_0==HX_("numeric",cd,e2,c0,ab)) ){
HXLINE( 162)			return ( (::String)(filter(text, ::EReg_obj::__alloc( HX_CTX ,HX_("[^0-9]",64,f2,00,a2),HX_("g",67,00,00,00)))) );
HXDLIN( 162)			goto _hx_goto_6;
            		}
            		_hx_goto_6:;
HXLINE( 164)		return text;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(TextTools_obj,filter,return )

::Array< ::Dynamic> TextTools_obj::indexesOf(::String string,::String sub){
            	HX_STACKFRAME(&_hx_pos_ade3311c6b7ac1c7_177_indexesOf)
HXLINE( 178)		::Array< ::Dynamic> indexArray = ::Array_obj< ::Dynamic>::__new(0);
HXLINE( 179)		int removedLength = 0;
HXDLIN( 179)		int index = string.indexOf(sub,null());
HXLINE( 180)		while((index != -1)){
HXLINE( 182)			indexArray->push( ::Dynamic(::hx::Anon_obj::Create(2)
            				->setFixed(0,HX_("endIndex",37,2d,12,bc),(((index + sub.length) + removedLength) - 1))
            				->setFixed(1,HX_("startIndex",50,73,2b,da),(index + removedLength))));
HXLINE( 183)			removedLength = (removedLength + sub.length);
HXLINE( 184)			::String string1 = string.substring(0,index);
HXDLIN( 184)			string = (string1 + string.substring((index + sub.length),string.length));
HXLINE( 185)			index = string.indexOf(sub,null());
            		}
HXLINE( 187)		return indexArray;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(TextTools_obj,indexesOf,return )

::Array< ::Dynamic> TextTools_obj::indexesOfSubs(::String string,::Array< ::String > subs){
            	HX_STACKFRAME(&_hx_pos_ade3311c6b7ac1c7_198_indexesOfSubs)
HXLINE( 199)		::Array< ::Dynamic> indexArray = ::Array_obj< ::Dynamic>::__new(0);
HXDLIN( 199)		::String orgString = string;
HXLINE( 201)		{
HXLINE( 201)			int _g = 0;
HXDLIN( 201)			while((_g < subs->length)){
HXLINE( 201)				::String sub = subs->__get(_g);
HXDLIN( 201)				_g = (_g + 1);
HXLINE( 203)				int removedLength = 0;
HXDLIN( 203)				int index = string.indexOf(sub,null());
HXLINE( 204)				while((index != -1)){
HXLINE( 206)					indexArray->push( ::Dynamic(::hx::Anon_obj::Create(2)
            						->setFixed(0,HX_("endIndex",37,2d,12,bc),((index + sub.length) + removedLength))
            						->setFixed(1,HX_("startIndex",50,73,2b,da),(index + removedLength))));
HXLINE( 207)					removedLength = (removedLength + sub.length);
HXLINE( 208)					::String string1 = string.substring(0,index);
HXDLIN( 208)					string = (string1 + string.substring((index + sub.length),string.length));
HXLINE( 209)					index = string.indexOf(sub,null());
            				}
HXLINE( 211)				string = orgString;
            			}
            		}
HXLINE( 213)		return indexArray;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(TextTools_obj,indexesOfSubs,return )

::Array< ::Dynamic> TextTools_obj::indexesFromArray(::String string,::Array< ::String > subs){
            	HX_STACKFRAME(&_hx_pos_ade3311c6b7ac1c7_225_indexesFromArray)
HXDLIN( 225)		return ::little::tools::TextTools_obj::indexesOfSubs(string,subs);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(TextTools_obj,indexesFromArray,return )

::Array< ::Dynamic> TextTools_obj::indexesFromEReg(::String string, ::EReg ereg){
            	HX_STACKFRAME(&_hx_pos_ade3311c6b7ac1c7_235_indexesFromEReg)
HXLINE( 236)		::Array< ::Dynamic> indexArray = ::Array_obj< ::Dynamic>::__new(0);
HXLINE( 237)		while(ereg->match(string)){
HXLINE( 239)			 ::Dynamic info = ereg->matchedPos();
HXLINE( 240)			string = ereg->replace(string,::little::tools::TextTools_obj::multiply(HX_W(u"\u2a14",104e,00ac),( (int)(info->__Field(HX_("len",d5,4b,52,00),::hx::paccDynamic)) )));
HXLINE( 241)			indexArray->push( ::Dynamic(::hx::Anon_obj::Create(2)
            				->setFixed(0,HX_("endIndex",37,2d,12,bc), ::Dynamic((info->__Field(HX_("pos",94,5d,55,00),::hx::paccDynamic) + info->__Field(HX_("len",d5,4b,52,00),::hx::paccDynamic))))
            				->setFixed(1,HX_("startIndex",50,73,2b,da), ::Dynamic(info->__Field(HX_("pos",94,5d,55,00),::hx::paccDynamic)))));
            		}
HXLINE( 244)		return indexArray;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(TextTools_obj,indexesFromEReg,return )

::String TextTools_obj::multiply(::String string,int times){
            	HX_STACKFRAME(&_hx_pos_ade3311c6b7ac1c7_268_multiply)
HXLINE( 269)		::String stringcopy = string;
HXLINE( 270)		if ((times <= 0)) {
HXLINE( 271)			return HX_("",00,00,00,00);
            		}
HXLINE( 272)		while(true){
HXLINE( 272)			times = (times - 1);
HXDLIN( 272)			if (!((times > 0))) {
HXLINE( 272)				goto _hx_goto_16;
            			}
HXLINE( 274)			string = (string + stringcopy);
            		}
            		_hx_goto_16:;
HXLINE( 276)		return string;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(TextTools_obj,multiply,return )

::String TextTools_obj::subtract(::String string,::String by){
            	HX_STACKFRAME(&_hx_pos_ade3311c6b7ac1c7_288_subtract)
HXDLIN( 288)		return ::little::tools::TextTools_obj::replaceLast(string,by,HX_("",00,00,00,00));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(TextTools_obj,subtract,return )

::String TextTools_obj::loremIpsum(::hx::Null< int >  __o_paragraphs,::hx::Null< int >  __o_length){
            		int paragraphs = __o_paragraphs.Default(1);
            		int length = __o_length.Default(-1);
            	HX_GC_STACKFRAME(&_hx_pos_ade3311c6b7ac1c7_298_loremIpsum)
HXLINE( 299)		::String text = ::StringTools_obj::replace(::little::tools::TextTools_obj::loremIpsumText,HX_("\t",09,00,00,00),HX_("",00,00,00,00));
HXDLIN( 299)		::Array< ::String > loremArray =  ::EReg_obj::__alloc( HX_CTX ,HX_("<p>|</p>|\n\n|\r\n\r\n",ed,a1,7c,d7),HX_("g",67,00,00,00))->split(text);
HXLINE( 300)		::String loremText = loremArray->join(HX_("\n\n",c0,08,00,00));
HXLINE( 301)		if ((paragraphs > loremArray->length)) {
HXLINE( 303)			int multiplier = ::Math_obj::ceil((( (Float)(paragraphs) ) / ( (Float)(loremArray->length) )));
HXLINE( 304)			loremText = ::little::tools::TextTools_obj::multiply(::little::tools::TextTools_obj::loremIpsumText,multiplier);
HXLINE( 305)			loremArray =  ::EReg_obj::__alloc( HX_CTX ,HX_("<p>|</p>|\n\n|\r\n\r\n",ed,a1,7c,d7),HX_("g",67,00,00,00))->split(loremText);
            		}
HXLINE( 307)		while((loremArray->length > paragraphs)){
HXLINE( 308)			loremArray->pop();
            		}
HXLINE( 309)		::String loremString = loremArray->join(HX_("\n\n",c0,08,00,00));
HXLINE( 310)		if ((length != -1)) {
HXLINE( 312)			return loremString.substring(0,length);
            		}
HXLINE( 314)		return loremString;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(TextTools_obj,loremIpsum,return )

::Array< ::String > TextTools_obj::sortByLength(::Array< ::String > array){
            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_0) HXARGC(2)
            		int _hx_run(::String a,::String b){
            			HX_STACKFRAME(&_hx_pos_ade3311c6b7ac1c7_327_sortByLength)
HXLINE( 327)			return (a.length - b.length);
            		}
            		HX_END_LOCAL_FUNC2(return)

            	HX_STACKFRAME(&_hx_pos_ade3311c6b7ac1c7_324_sortByLength)
HXLINE( 325)		array->sort( ::Dynamic(new _hx_Closure_0()));
HXLINE( 329)		return array;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(TextTools_obj,sortByLength,return )

::Array< Float > TextTools_obj::sortByValue(::Array< Float > array){
            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_0) HXARGC(2)
            		int _hx_run(Float a,Float b){
            			HX_STACKFRAME(&_hx_pos_ade3311c6b7ac1c7_342_sortByValue)
HXLINE( 342)			return ::Std_obj::_hx_int((a - b));
            		}
            		HX_END_LOCAL_FUNC2(return)

            	HX_STACKFRAME(&_hx_pos_ade3311c6b7ac1c7_339_sortByValue)
HXLINE( 340)		array->sort( ::Dynamic(new _hx_Closure_0()));
HXLINE( 344)		return array;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(TextTools_obj,sortByValue,return )

::Array< int > TextTools_obj::sortByIntValue(::Array< int > array){
            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_0) HXARGC(2)
            		int _hx_run(int a,int b){
            			HX_STACKFRAME(&_hx_pos_ade3311c6b7ac1c7_357_sortByIntValue)
HXLINE( 357)			return (a - b);
            		}
            		HX_END_LOCAL_FUNC2(return)

            	HX_STACKFRAME(&_hx_pos_ade3311c6b7ac1c7_354_sortByIntValue)
HXLINE( 355)		array->sort( ::Dynamic(new _hx_Closure_0()));
HXLINE( 359)		return array;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(TextTools_obj,sortByIntValue,return )

int TextTools_obj::getLineIndexOfChar(::String string,int index){
            	HX_STACKFRAME(&_hx_pos_ade3311c6b7ac1c7_370_getLineIndexOfChar)
HXLINE( 371)		::Array< ::String > lines = string.split(HX_("\n",0a,00,00,00));
HXLINE( 372)		int lineIndex = 0;
HXLINE( 373)		{
HXLINE( 373)			int _g = 0;
HXDLIN( 373)			int _g1 = lines->length;
HXDLIN( 373)			while((_g < _g1)){
HXLINE( 373)				_g = (_g + 1);
HXDLIN( 373)				int i = (_g - 1);
HXLINE( 375)				if ((index < lines->__get(i).length)) {
HXLINE( 377)					lineIndex = i;
HXLINE( 378)					goto _hx_goto_27;
            				}
HXLINE( 380)				index = (index - lines->__get(i).length);
            			}
            			_hx_goto_27:;
            		}
HXLINE( 382)		return lineIndex;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(TextTools_obj,getLineIndexOfChar,return )

int TextTools_obj::countOccurrencesOf(::String string,::String sub){
            	HX_STACKFRAME(&_hx_pos_ade3311c6b7ac1c7_392_countOccurrencesOf)
HXLINE( 393)		int count = 0;
HXLINE( 394)		while(::little::tools::TextTools_obj::contains(string,sub)){
HXLINE( 396)			count = (count + 1);
HXLINE( 397)			string = ::little::tools::TextTools_obj::replaceFirst(string,sub,HX_("",00,00,00,00));
            		}
HXLINE( 399)		return count;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(TextTools_obj,countOccurrencesOf,return )

bool TextTools_obj::contains(::String string,::String contains){
            	HX_STACKFRAME(&_hx_pos_ade3311c6b7ac1c7_409_contains)
HXLINE( 410)		if (::hx::IsNull( string )) {
HXLINE( 411)			return false;
            		}
HXLINE( 412)		return (string.indexOf(contains,null()) != -1);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(TextTools_obj,contains,return )

::String TextTools_obj::remove(::String string,::String sub){
            	HX_STACKFRAME(&_hx_pos_ade3311c6b7ac1c7_424_remove)
HXDLIN( 424)		return ::little::tools::TextTools_obj::replace(string,sub,HX_("",00,00,00,00));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(TextTools_obj,remove,return )

::String TextTools_obj::replace(::String string,::String replace,::String with){
            	HX_STACKFRAME(&_hx_pos_ade3311c6b7ac1c7_439_replace)
HXLINE( 440)		bool _hx_tmp;
HXDLIN( 440)		if (::hx::IsNotNull( replace )) {
HXLINE( 440)			_hx_tmp = ::hx::IsNull( with );
            		}
            		else {
HXLINE( 440)			_hx_tmp = true;
            		}
HXDLIN( 440)		if (_hx_tmp) {
HXLINE( 441)			return string;
            		}
HXLINE( 442)		return ::StringTools_obj::replace(string,replace,with);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(TextTools_obj,replace,return )

::String TextTools_obj::reverse(::String string){
            	HX_STACKFRAME(&_hx_pos_ade3311c6b7ac1c7_452_reverse)
HXLINE( 453)		::String returnedString = HX_("",00,00,00,00);
HXLINE( 454)		{
HXLINE( 454)			int _g = 1;
HXDLIN( 454)			int _g1 = (string.length + 1);
HXDLIN( 454)			while((_g < _g1)){
HXLINE( 454)				_g = (_g + 1);
HXDLIN( 454)				int i = (_g - 1);
HXLINE( 456)				returnedString = (returnedString + string.charAt((string.length - 1)));
            			}
            		}
HXLINE( 458)		return returnedString;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(TextTools_obj,reverse,return )

::String TextTools_obj::insert(::String string,::String substring,int at){
            	HX_STACKFRAME(&_hx_pos_ade3311c6b7ac1c7_466_insert)
HXDLIN( 466)		::String _hx_tmp = (string.substring(0,(at + 1)) + substring);
HXDLIN( 466)		return (_hx_tmp + string.substring((at + 1),null()));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(TextTools_obj,insert,return )

bool TextTools_obj::parseBool(::String string){
            	HX_STACKFRAME(&_hx_pos_ade3311c6b7ac1c7_473_parseBool)
HXDLIN( 473)		if ((string == HX_("true",4e,a7,03,4d))) {
HXDLIN( 473)			return true;
            		}
            		else {
HXDLIN( 473)			return false;
            		}
HXDLIN( 473)		return false;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(TextTools_obj,parseBool,return )

bool TextTools_obj::containsAny(::String string,::Array< ::String > from){
            	HX_STACKFRAME(&_hx_pos_ade3311c6b7ac1c7_482_containsAny)
HXLINE( 483)		{
HXLINE( 483)			int _g = 0;
HXDLIN( 483)			while((_g < from->length)){
HXLINE( 483)				::String i = from->__get(_g);
HXDLIN( 483)				_g = (_g + 1);
HXLINE( 484)				if ((string.indexOf(i,null()) != -1)) {
HXLINE( 484)					return true;
            				}
            			}
            		}
HXLINE( 486)		return false;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(TextTools_obj,containsAny,return )

::String TextTools_obj::loremIpsumText;


TextTools_obj::TextTools_obj()
{
}

bool TextTools_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"fonts") ) { outValue = ( fonts ); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"filter") ) { outValue = filter_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"remove") ) { outValue = remove_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"insert") ) { outValue = insert_dyn(); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"replace") ) { outValue = replace_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"reverse") ) { outValue = reverse_dyn(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"multiply") ) { outValue = multiply_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"subtract") ) { outValue = subtract_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"contains") ) { outValue = contains_dyn(); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"indexesOf") ) { outValue = indexesOf_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"parseBool") ) { outValue = parseBool_dyn(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"loremIpsum") ) { outValue = loremIpsum_dyn(); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"replaceLast") ) { outValue = replaceLast_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"splitOnLast") ) { outValue = splitOnLast_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"sortByValue") ) { outValue = sortByValue_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"containsAny") ) { outValue = containsAny_dyn(); return true; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"replaceFirst") ) { outValue = replaceFirst_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"splitOnFirst") ) { outValue = splitOnFirst_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"sortByLength") ) { outValue = sortByLength_dyn(); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"replaceIfLast") ) { outValue = replaceIfLast_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"indexesOfSubs") ) { outValue = indexesOfSubs_dyn(); return true; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"sortByIntValue") ) { outValue = sortByIntValue_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"loremIpsumText") ) { outValue = ( loremIpsumText ); return true; }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"indexesFromEReg") ) { outValue = indexesFromEReg_dyn(); return true; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"splitOnParagraph") ) { outValue = splitOnParagraph_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"indexesFromArray") ) { outValue = indexesFromArray_dyn(); return true; }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"getLineIndexOfChar") ) { outValue = getLineIndexOfChar_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"countOccurrencesOf") ) { outValue = countOccurrencesOf_dyn(); return true; }
	}
	return false;
}

bool TextTools_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"fonts") ) { fonts=ioValue.Cast<  ::little::tools::_TextTools::MultilangFonts >(); return true; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"loremIpsumText") ) { loremIpsumText=ioValue.Cast< ::String >(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *TextTools_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo TextTools_obj_sStaticStorageInfo[] = {
	{::hx::fsObject /*  ::little::tools::_TextTools::MultilangFonts */ ,(void *) &TextTools_obj::fonts,HX_("fonts",c4,b7,91,04)},
	{::hx::fsString,(void *) &TextTools_obj::loremIpsumText,HX_("loremIpsumText",1a,65,98,fb)},
	{ ::hx::fsUnknown, 0, null()}
};
#endif

static void TextTools_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(TextTools_obj::fonts,"fonts");
	HX_MARK_MEMBER_NAME(TextTools_obj::loremIpsumText,"loremIpsumText");
};

#ifdef HXCPP_VISIT_ALLOCS
static void TextTools_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(TextTools_obj::fonts,"fonts");
	HX_VISIT_MEMBER_NAME(TextTools_obj::loremIpsumText,"loremIpsumText");
};

#endif

::hx::Class TextTools_obj::__mClass;

static ::String TextTools_obj_sStaticFields[] = {
	HX_("fonts",c4,b7,91,04),
	HX_("replaceLast",aa,a8,48,5c),
	HX_("replaceIfLast",27,20,5d,12),
	HX_("replaceFirst",5c,63,2c,f4),
	HX_("splitOnFirst",d7,c2,c3,dd),
	HX_("splitOnLast",8f,11,8d,6e),
	HX_("splitOnParagraph",95,49,d0,13),
	HX_("filter",b8,1f,35,85),
	HX_("indexesOf",37,a1,4e,14),
	HX_("indexesOfSubs",ca,db,f2,b8),
	HX_("indexesFromArray",af,5b,60,ce),
	HX_("indexesFromEReg",99,04,fa,73),
	HX_("multiply",24,e2,8c,9a),
	HX_("subtract",14,75,11,f8),
	HX_("loremIpsum",cd,01,0c,5e),
	HX_("sortByLength",9b,4b,3e,da),
	HX_("sortByValue",5c,d6,2d,fd),
	HX_("sortByIntValue",f7,2d,8f,f9),
	HX_("getLineIndexOfChar",b5,68,99,a1),
	HX_("countOccurrencesOf",6a,aa,79,e2),
	HX_("contains",1f,5a,7b,2c),
	HX_("remove",44,9c,88,04),
	HX_("replace",34,48,28,ab),
	HX_("reverse",22,39,fc,1a),
	HX_("insert",39,43,dd,9d),
	HX_("parseBool",fd,d5,c1,c8),
	HX_("containsAny",0d,36,48,24),
	HX_("loremIpsumText",1a,65,98,fb),
	::String(null())
};

void TextTools_obj::__register()
{
	TextTools_obj _hx_dummy;
	TextTools_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("little.tools.TextTools",83,22,7d,bd);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &TextTools_obj::__GetStatic;
	__mClass->mSetStaticField = &TextTools_obj::__SetStatic;
	__mClass->mMarkFunc = TextTools_obj_sMarkStatics;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(TextTools_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< TextTools_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = TextTools_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = TextTools_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = TextTools_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void TextTools_obj::__boot()
{
{
            	HX_GC_STACKFRAME(&_hx_pos_ade3311c6b7ac1c7_28_boot)
HXDLIN(  28)		fonts =  ::little::tools::_TextTools::MultilangFonts_obj::__alloc( HX_CTX );
            	}
{
            	HX_STACKFRAME(&_hx_pos_ade3311c6b7ac1c7_489_boot)
HXDLIN( 489)		loremIpsumText = HX_("\r\n\t\tLorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque finibus condimentum magna, eget porttitor libero aliquam non. Praesent commodo, augue nec hendrerit tincidunt, urna felis lobortis mi, non cursus libero tellus quis tellus. Vivamus ornare convallis tristique. Integer nec ornare libero. Phasellus feugiat facilisis faucibus. Vivamus porta id neque id placerat. Proin convallis vel felis et pharetra. Quisque magna justo, ullamcorper quis scelerisque eu, tincidunt vitae lectus. Nunc sed turpis justo. Aliquam porttitor, purus sit amet faucibus bibendum, ligula elit molestie purus, eu volutpat turpis sapien ac tellus. Fusce mauris arcu, volutpat ut aliquam ut, ultrices id ante. Morbi quis consectetur turpis. Integer semper lacinia urna id laoreet.\r\n\r\n\t\tUt mollis eget eros eu tempor. Phasellus nulla velit, sollicitudin eget massa a, tristique rutrum turpis. Vestibulum in dolor at elit pellentesque finibus. Nulla pharetra felis a varius molestie. Nam magna lectus, eleifend ac sagittis id, ornare id nibh. Praesent congue est non iaculis consectetur. Nullam dictum augue sit amet dignissim fringilla. Aenean semper justo velit. Sed nec lectus facilisis, sodales diam eget, imperdiet nunc. Quisque elementum nulla non orci interdum pharetra id quis arcu. Phasellus eu nunc lectus. Nam tellus tortor, pellentesque eget faucibus eu, laoreet quis odio. Pellentesque posuere in enim a blandit.\r\n\r\n\t\tDuis dignissim neque et ex iaculis, ac consequat diam gravida. In mi ex, blandit eget velit non, euismod feugiat arcu. Nulla nec fermentum neque, eget elementum mauris. Vivamus urna ligula, faucibus at facilisis sed, commodo sit amet urna. Sed porttitor feugiat purus ac tincidunt. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Aliquam sollicitudin lacinia turpis quis placerat. Donec eget velit nibh. Duis vehicula orci lectus, eget rutrum arcu tincidunt et. Vestibulum ut pharetra lectus. Quisque lacinia nunc rhoncus neque venenatis consequat. Nulla rutrum ultricies sapien, sed semper lectus accumsan nec. Phasellus commodo faucibus lacinia. Donec auctor condimentum ligula. Sed quis viverra mauris.\r\n\r\n\t\tQuisque maximus justo dui, eget pretium lorem accumsan ac. Praesent eleifend faucibus orci et varius. Ut et molestie turpis, eu porta neque. Quisque vehicula, libero in tincidunt facilisis, purus eros pulvinar leo, sit amet eleifend justo ligula tempor lectus. Donec ac tortor sed ipsum tincidunt pulvinar id nec eros. In luctus purus cursus est dictum, ac sollicitudin turpis maximus. Maecenas a nisl velit. Nulla gravida lectus vel ultricies gravida. Proin vel bibendum magna. Donec aliquam ultricies quam, quis tempor nunc pharetra ut.\r\n\r\n\t\tPellentesque sit amet dui est. Aliquam erat volutpat. Integer vitae ullamcorper est, ut eleifend augue. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Quisque congue velit felis, vitae elementum nulla faucibus id. Donec lectus nibh, commodo eget nunc id, feugiat sagittis massa. In hac habitasse platea dictumst. Pellentesque volutpat molestie ultrices.\r\n\t",22,a6,e0,df);
            	}
}

} // end namespace little
} // end namespace tools
