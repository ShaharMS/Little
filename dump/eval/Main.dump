@:used
class Main {

	@:keep
	static function main() {
		while ((true)) {
			Sys.print("  >> ");
			var input = Sys.stdin().readLine();
			if ((input == "ml!")) {
				Sys.print("---------MULTI-LINE MODE---------\n");
				var code = "";
				while ((true)) {
					Sys.print("  >> ");
					var input = Sys.stdin().readLine();
					if ((input == "run!")) {
						try {
							little.Little.run(code, true);
							haxe.Log.trace(little.tools.PrettyPrinter.printParserAst(little.parser.Parser.parse(little.lexer.Lexer.lex(code)), null), {fileName : "src/Main.hx", lineNumber : 65, className : "Main", methodName : "main"});
							haxe.Log.trace(little.interpreter.Runtime.stdout.output, {fileName : "src/Main.hx", lineNumber : 66, className : "Main", methodName : "main"});
						} catch (`:Dynamic) {
							var e = haxe.Exception.caught(`);
							{
								haxe.Log.trace(little.lexer.Lexer.lex(code), {fileName : "src/Main.hx", lineNumber : 68, className : "Main", methodName : "main"});
								haxe.Log.trace(little.parser.Parser.parse(little.lexer.Lexer.lex(code)), {fileName : "src/Main.hx", lineNumber : 69, className : "Main", methodName : "main"});
								haxe.Log.trace(little.tools.PrettyPrinter.printParserAst(little.parser.Parser.parse(little.lexer.Lexer.lex(code)), null), {fileName : "src/Main.hx", lineNumber : 70, className : "Main", methodName : "main"});
								haxe.Log.trace(e.details(), {fileName : "src/Main.hx", lineNumber : 71, className : "Main", methodName : "main"});
								haxe.Log.trace(little.interpreter.Runtime.stdout.output, {fileName : "src/Main.hx", lineNumber : 72, className : "Main", methodName : "main"});
							};
						};
						Sys.print(little.tools.TextTools.replace(little.tools.TextTools.replaceFirst(code, "\n", "  >> "), "\n", "\n  >> ") + "\n");
					} else if ((input == "default!")) {
						Sys.println("---------SINGLE-LINE MODE---------");
						break;
					} else if ((input == "clear!")) {
						code = "";
						Sys.println("---------MULTI-LINE MODE---------");
					} else code += "\n" + input;
				};
			} else if ((input == "ast!")) {
				Sys.println("---------ABSTRACT SYNTAX TREE MODE---------");
				while ((true)) {
					Sys.print("  >> ");
					var input = Sys.stdin().readLine();
					if ((input == "default!")) {
						Sys.println("---------SINGLE-LINE MODE---------");
						break;
					};
					Sys.println(little.tools.PrettyPrinter.printParserAst(little.parser.Parser.parse(little.lexer.Lexer.lex(input)), null));
				};
			} else try {
				little.Little.run(input, true);
				haxe.Log.trace(little.tools.PrettyPrinter.printParserAst(little.parser.Parser.parse(little.lexer.Lexer.lex(input)), null), {fileName : "src/Main.hx", lineNumber : 101, className : "Main", methodName : "main"});
				haxe.Log.trace(little.interpreter.Runtime.stdout.output, {fileName : "src/Main.hx", lineNumber : 102, className : "Main", methodName : "main"});
			} catch (`:Dynamic) {
				var e = haxe.Exception.caught(`);
				{
					haxe.Log.trace(little.lexer.Lexer.lex(input), {fileName : "src/Main.hx", lineNumber : 104, className : "Main", methodName : "main"});
					haxe.Log.trace(little.parser.Parser.parse(little.lexer.Lexer.lex(input)), {fileName : "src/Main.hx", lineNumber : 105, className : "Main", methodName : "main"});
					haxe.Log.trace(little.tools.PrettyPrinter.printParserAst(little.parser.Parser.parse(little.lexer.Lexer.lex(input)), null), {fileName : "src/Main.hx", lineNumber : 106, className : "Main", methodName : "main"});
					haxe.Log.trace(e.details(), {fileName : "src/Main.hx", lineNumber : 107, className : "Main", methodName : "main"});
					haxe.Log.trace(little.interpreter.Runtime.stdout.output, {fileName : "src/Main.hx", lineNumber : 108, className : "Main", methodName : "main"});
				};
			};
		};
	}
}